// ==UserScript==
// @name          KG_Latest_Games
// @namespace     klavogonki
// @version      1.4.8
// @description   Fast game creation buttons on all the pages
// @match         *://klavogonki.ru/*
// @author        Patcher
// @icon          https://www.google.com/s2/favicons?sz=64&domain=klavogonki.ru
// ==/UserScript==

/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/styles/styles.scss":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/styles/styles.scss ***!
  \*************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.game-migration-popup,\n.vocabulary-creation-popup,\n.game-popup {\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  padding: 5px;\n  background-color: var(--rg-bg-primary);\n  border: 1px solid var(--rg-border-primary);\n  border-radius: 8px !important;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1) !important;\n  max-height: 50vh;\n  max-width: 400px;\n  overflow-y: auto;\n  scrollbar-width: none;\n  z-index: 2000;\n  user-select: none;\n}\n.game-migration-popup .popup-header-qualification,\n.vocabulary-creation-popup .popup-header-qualification,\n.game-popup .popup-header-qualification {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 16px;\n  height: 16px;\n  cursor: pointer;\n}\n.game-migration-popup .popup-header,\n.vocabulary-creation-popup .popup-header,\n.game-popup .popup-header {\n  display: inline-flex;\n  font: 600 14px \"Montserrat\", sans-serif;\n  color: var(--rg-header-text);\n  padding: 6px;\n  justify-content: space-between;\n}\n.game-migration-popup .popup-subheader,\n.vocabulary-creation-popup .popup-subheader,\n.game-popup .popup-subheader {\n  font: 600 14px \"Montserrat\", sans-serif;\n  color: var(--rg-text-secondary);\n  padding: 6px;\n}\n.game-migration-popup .timeouts-container,\n.vocabulary-creation-popup .timeouts-container,\n.game-popup .timeouts-container {\n  display: flex;\n  flex-direction: row;\n  gap: 5px;\n}\n.game-migration-popup .timeouts-container .game-popup-button,\n.vocabulary-creation-popup .timeouts-container .game-popup-button,\n.game-popup .timeouts-container .game-popup-button {\n  display: inline-block;\n  padding: 5px 15px;\n  font: 600 14px \"Montserrat\", sans-serif;\n  border-radius: 4px !important;\n  background: var(--rg-bg-card) !important;\n  color: var(--rg-text-primary) !important;\n  border: 1.5px solid var(--rg-border-primary);\n  cursor: pointer;\n  user-select: none;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  text-align: left;\n  text-decoration: none;\n}\n.game-migration-popup .timeouts-container .game-popup-button:hover, .game-migration-popup .timeouts-container .game-popup-button:focus,\n.vocabulary-creation-popup .timeouts-container .game-popup-button:hover,\n.vocabulary-creation-popup .timeouts-container .game-popup-button:focus,\n.game-popup .timeouts-container .game-popup-button:hover,\n.game-popup .timeouts-container .game-popup-button:focus {\n  border-color: var(--rg-border-hover);\n  background: var(--rg-bg-hover);\n  color: var(--rg-text-primary);\n}\n.game-migration-popup .group-tab,\n.game-migration-popup .popup-button,\n.vocabulary-creation-popup .group-tab,\n.vocabulary-creation-popup .popup-button,\n.game-popup .group-tab,\n.game-popup .popup-button {\n  display: inline-flex;\n  padding: 5px 15px;\n  min-height: 30px;\n  max-width: 300px;\n  font: 600 14px \"Montserrat\", sans-serif;\n  border-radius: 4px !important;\n  background: var(--rg-bg-card);\n  color: var(--rg-text-primary);\n  border: 2px solid var(--rg-border-primary);\n  cursor: pointer;\n  user-select: none;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  height: fit-content;\n  transition: border 0.1s ease, background-color 0.1s ease;\n}\n.game-migration-popup .group-tab:hover, .game-migration-popup .group-tab:focus,\n.game-migration-popup .popup-button:hover,\n.game-migration-popup .popup-button:focus,\n.vocabulary-creation-popup .group-tab:hover,\n.vocabulary-creation-popup .group-tab:focus,\n.vocabulary-creation-popup .popup-button:hover,\n.vocabulary-creation-popup .popup-button:focus,\n.game-popup .group-tab:hover,\n.game-popup .group-tab:focus,\n.game-popup .popup-button:hover,\n.game-popup .popup-button:focus {\n  border-color: var(--rg-border-hover);\n  background: var(--rg-bg-hover);\n  color: var(--rg-text-primary);\n}\n.game-migration-popup .group-tab.active,\n.game-migration-popup .popup-button.active,\n.vocabulary-creation-popup .group-tab.active,\n.vocabulary-creation-popup .popup-button.active,\n.game-popup .group-tab.active,\n.game-popup .popup-button.active {\n  color: var(--rg-gametype-normal) !important;\n  background-color: var(--rg-bg-card-pinned-normal) !important;\n  border: 2px solid var(--rg-border-pinned-normal) !important;\n}\n.game-migration-popup .rank-slider-container,\n.vocabulary-creation-popup .rank-slider-container,\n.game-popup .rank-slider-container {\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  margin: 6px;\n}\n.game-migration-popup .rank-slider-container .rank-slider-display,\n.vocabulary-creation-popup .rank-slider-container .rank-slider-display,\n.game-popup .rank-slider-container .rank-slider-display {\n  margin: 0 0 12px;\n  font: 600 14px \"Montserrat\", sans-serif;\n  color: var(--rg-text-secondary);\n}\n.game-migration-popup .rank-slider-container .rank-slider-track,\n.vocabulary-creation-popup .rank-slider-container .rank-slider-track,\n.game-popup .rank-slider-container .rank-slider-track {\n  position: relative;\n  height: 8px;\n  background: var(--rg-rank-slider-track-bg);\n  border-radius: 4px !important;\n  cursor: pointer;\n  border: 2px solid var(--rg-rank-slider-border);\n  box-sizing: border-box;\n}\n.game-migration-popup .rank-slider-container .rank-slider-range,\n.vocabulary-creation-popup .rank-slider-container .rank-slider-range,\n.game-popup .rank-slider-container .rank-slider-range {\n  position: absolute;\n  height: 100%;\n  background: var(--rg-rank-slider-range);\n  border-radius: 4px !important;\n  z-index: 1;\n}\n.game-migration-popup .rank-slider-container .rank-slider-handle,\n.vocabulary-creation-popup .rank-slider-container .rank-slider-handle,\n.game-popup .rank-slider-container .rank-slider-handle {\n  position: absolute;\n  top: 50%;\n  width: 18px;\n  height: 18px;\n  background: var(--rg-rank-slider-handle-bg);\n  border: 2px solid var(--rg-rank-slider-border);\n  border-radius: 50% !important;\n  transform: translate(-50%, -50%);\n  z-index: 2;\n  cursor: pointer;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.08) !important;\n  transition: border-color 0.2s, background 0.2s;\n}\n.game-migration-popup .rank-slider-container .rank-slider-handle:focus,\n.vocabulary-creation-popup .rank-slider-container .rank-slider-handle:focus,\n.game-popup .rank-slider-container .rank-slider-handle:focus {\n  outline: none;\n  border-color: var(--rg-rank-slider-border-focus);\n}\n.game-migration-popup .rank-slider-container .rank-slider-handle.overlap-left,\n.vocabulary-creation-popup .rank-slider-container .rank-slider-handle.overlap-left,\n.game-popup .rank-slider-container .rank-slider-handle.overlap-left {\n  /* Move left handle fully to the left so it just touches the right handle */\n  transform: translate(-100%, -50%);\n}\n.game-migration-popup .rank-slider-container .rank-slider-handle.overlap-right,\n.vocabulary-creation-popup .rank-slider-container .rank-slider-handle.overlap-right,\n.game-popup .rank-slider-container .rank-slider-handle.overlap-right {\n  /* Move right handle fully to the right so it just touches the left handle */\n  transform: translate(0, -50%);\n}\n\n.latest-games-search-container {\n  position: relative;\n  margin: 10px 10px 0;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n.latest-games-search-container.latest-games-hidden {\n  display: none;\n}\n.latest-games-search-container #latest-games-search-input {\n  width: 100%;\n  box-sizing: border-box;\n  padding: 8px 12px;\n  font-size: 15px;\n  font-family: \"Montserrat\", sans-serif;\n  border: 1.5px solid var(--rg-border-primary);\n  border-radius: 6px !important;\n  background: var(--rg-bg-card);\n  color: var(--rg-text-primary);\n  outline: none;\n  transition: border-color 0.2s, background 0.2s, color 0.2s;\n}\n.latest-games-search-container #latest-games-search-input:focus {\n  border-color: var(--rg-border-hover);\n  background: var(--rg-bg-hover);\n  color: var(--rg-text-primary);\n}\n.latest-games-search-container .latest-games-clear-btn {\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  width: 24px;\n  height: 24px;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  opacity: 0;\n  visibility: hidden;\n  transition: opacity 0.15s ease;\n  z-index: 1;\n}\n.latest-games-search-container .latest-games-clear-btn svg {\n  width: 14px;\n  height: 14px;\n}\n.latest-games-search-container .latest-games-clear-btn.visible {\n  opacity: 1;\n  visibility: visible;\n}\n\n.latest-games-search-noresults {\n  display: inline-flex;\n  padding: 5px 15px;\n  max-width: 300px;\n  font: 500 14px \"Montserrat\", sans-serif;\n  border-radius: 4px !important;\n  user-select: none;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  height: auto;\n  justify-content: center;\n  align-items: center;\n  color: var(--rg-gametype-marathon);\n  border: 2px solid var(--rg-border-pinned-marathon);\n  background-color: var(--rg-bg-card-pinned-marathon);\n}\n\n.latest-games-search-more {\n  display: inline-flex;\n  padding: 5px 15px;\n  max-width: 300px;\n  font: 500 14px \"Montserrat\", sans-serif;\n  border-radius: 4px !important;\n  user-select: none;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  height: auto;\n  justify-content: center;\n  align-items: center;\n  color: var(--rg-gametype-chars);\n  border: 2px solid var(--rg-border-pinned-chars);\n  background-color: var(--rg-bg-card-pinned-chars);\n  cursor: pointer;\n}\n\n.games-data-container .remaining-count-indicator, .games-data-container .sleep-replay-indicator, .games-data-container .sleep-start-indicator {\n  transition: 0.2s ease-in-out;\n  font-family: \"Montserrat\", sans-serif;\n  font-size: 1.5em;\n  font-weight: 500;\n  font-variant-numeric: tabular-nums;\n  padding: 8px 12px;\n  min-width: 60px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: default;\n  border-radius: 0.2em !important;\n}\n\n.games-data-container {\n  position: absolute;\n  display: flex;\n  flex-direction: row;\n  top: 50px;\n  right: 5px;\n  gap: 5px;\n  user-select: none;\n  pointer-events: none;\n  z-index: 3000;\n}\n.games-data-container .sleep-start-indicator {\n  color: hsl(88, 50%, 55%);\n  background-color: hsl(88, 40%, 20%);\n  border: 1px solid hsl(88, 45%, 35%);\n}\n.games-data-container .sleep-replay-indicator {\n  color: hsl(208, 50%, 70%);\n  background-color: hsl(208, 40%, 25%);\n  border: 1px solid hsl(208, 45%, 50%);\n}\n.games-data-container .remaining-count-indicator {\n  color: hsl(50, 0%, 75%);\n  background-color: hsl(50, 0%, 15%);\n  border: 1px solid hsl(50, 0%, 30%);\n}\n\n:root.latest-games-light-theme {\n  --rg-bg-primary: hsl(0, 0%, 100%);\n  --rg-bg-secondary: hsl(0, 0%, 98%);\n  --rg-bg-card: hsl(0, 0%, 98%);\n  --rg-bg-card-pinned: hsl(120, 50%, 96%);\n  --rg-bg-hover: hsl(0, 0%, 96%);\n  --rg-border-primary: hsl(0, 0%, 88%);\n  --rg-border-hover: hsl(0, 0%, 74%);\n  --rg-border-pinned: hsl(122, 39%, 49%);\n  --rg-text-primary: hsl(0, 0%, 15%);\n  --rg-text-secondary: hsl(0, 0%, 40%);\n  --rg-text-tertiary: hsl(0, 0%, 55%);\n  --rg-text-options: hsl(0, 0%, 30%);\n  --rg-enabled-yellow: hsl(40, 100%, 30%);\n  --rg-bg-enabled-yellow: hsla(40, 100%, 40%, 0.2);\n  --rg-enabled-blue: hsl(215, 75%, 50%);\n  --rg-bg-enabled-blue: hsla(215, 75%, 50%, 0.2);\n  --rg-gametype-voc: hsl(215, 75%, 50%);\n  --rg-gametype-normal: hsl(130, 50%, 30%);\n  --rg-gametype-abra: hsl(215, 20%, 40%);\n  --rg-gametype-referats: hsl(80, 55%, 30%);\n  --rg-gametype-noerror: hsl(200, 45%, 35%);\n  --rg-gametype-marathon: hsl(340, 65%, 45%);\n  --rg-gametype-chars: hsl(35, 100%, 30%);\n  --rg-gametype-digits: hsl(0, 0%, 50%);\n  --rg-gametype-sprint: hsl(5, 40%, 40%);\n  --rg-icon-primary: currentColor;\n  --rg-icon-delete: hsl(4, 90%, 58%);\n  --rg-bg-hover-delete: hsla(4, 90%, 58%, 0.2);\n  --rg-icon-pin: hsl(122, 39%, 49%);\n  --rg-bg-hover-pin: hsla(122, 39%, 49%, 0.2);\n  --rg-icon-info: hsl(0, 0%, 55%);\n  --rg-bg-hover-info: hsla(0, 0%, 55%, 0.2);\n  --rg-icon-edit: hsl(45, 100%, 40%);\n  --rg-bg-hover-edit: hsla(45, 100%, 40%, 0.2);\n  --rg-icon-theme-sun: hsl(48, 100%, 41%);\n  --rg-icon-theme-moon: hsl(207, 89%, 76%);\n  --rg-hover-control: hsl(0, 0%, 92%);\n  --rg-hover-control-btn: hsl(213, 77%, 96%);\n  --rg-bg-card-pinned-voc: hsl(215, 80%, 95%);\n  --rg-border-pinned-voc: hsl(215, 80%, 80%);\n  --rg-bg-card-pinned-normal: hsl(130, 50%, 90%);\n  --rg-border-pinned-normal: hsl(130, 50%, 70%);\n  --rg-bg-card-pinned-abra: hsl(215, 20%, 90%);\n  --rg-border-pinned-abra: hsl(215, 20%, 70%);\n  --rg-bg-card-pinned-referats: hsl(80, 55%, 90%);\n  --rg-border-pinned-referats: hsl(80, 55%, 70%);\n  --rg-bg-card-pinned-noerror: hsl(200, 45%, 90%);\n  --rg-border-pinned-noerror: hsl(200, 45%, 70%);\n  --rg-bg-card-pinned-marathon: hsl(340, 65%, 90%);\n  --rg-border-pinned-marathon: hsl(340, 65%, 70%);\n  --rg-bg-card-pinned-chars: hsl(35, 100%, 90%);\n  --rg-border-pinned-chars: hsl(35, 100%, 70%);\n  --rg-bg-card-pinned-digits: hsl(0, 0%, 90%);\n  --rg-border-pinned-digits: hsl(0, 0%, 70%);\n  --rg-bg-card-pinned-sprint: hsl(5, 40%, 90%);\n  --rg-border-pinned-sprint: hsl(5, 40%, 70%);\n  --rg-bg-tab: hsl(0, 0%, 97%);\n  --rg-bg-tab-hover: hsl(0, 0%, 94%);\n  --rg-bg-tab-active: hsl(0, 0%, 100%);\n  --rg-icon-accent: hsl(215, 75%, 50%);\n  --rg-qualification-icon: hsl(48, 100%, 41%);\n  --rg-panel-toggle-background: hsl(215, 80%, 95%);\n  --rg-panel-toggle-stroke: hsl(215, 75%, 50%);\n  --rg-panel-toggle-border: hsl(215, 80%, 80%);\n  --rg-panel-toggle-bg-hover: hsl(215, 80%, 88%);\n  --rg-header-text: hsl(77, 100%, 30%);\n  --rg-rank-slider-track-bg: hsl(215, 80%, 95%);\n  --rg-rank-slider-border: hsl(215, 80%, 80%);\n  --rg-rank-slider-range: hsl(215, 80%, 80%);\n  --rg-rank-slider-handle-bg: hsl(215, 80%, 95%);\n  --rg-rank-slider-border-focus: hsl(215, 80%, 60%);\n}\n:root.latest-games-dark-theme {\n  --rg-bg-primary: hsl(210, 10%, 11%);\n  --rg-bg-secondary: hsl(220, 10%, 15%);\n  --rg-bg-card: hsl(220, 10%, 15%);\n  --rg-bg-card-pinned: hsl(140, 20%, 15%);\n  --rg-bg-hover: hsl(220, 10%, 15%);\n  --rg-border-primary: hsl(220, 10%, 15%);\n  --rg-border-hover: hsl(0, 0%, 38%);\n  --rg-border-pinned: hsl(133, 43%, 47%);\n  --rg-text-primary: hsl(0, 0%, 88%);\n  --rg-text-secondary: hsl(0, 0%, 88%);\n  --rg-text-tertiary: hsl(0, 0%, 88%);\n  --rg-text-options: hsl(0, 0%, 88%);\n  --rg-enabled-yellow: hsl(48, 100%, 50%);\n  --rg-bg-enabled-yellow: hsla(48, 100%, 50%, 0.2);\n  --rg-enabled-blue: hsl(207, 89%, 76%);\n  --rg-bg-enabled-blue: hsla(207, 89%, 76%, 0.2);\n  --rg-gametype-voc: hsl(215, 80%, 65%);\n  --rg-gametype-normal: hsl(130, 50%, 60%);\n  --rg-gametype-abra: hsl(215, 20%, 60%);\n  --rg-gametype-referats: hsl(80, 55%, 40%);\n  --rg-gametype-noerror: hsl(200, 45%, 65%);\n  --rg-gametype-marathon: hsl(340, 70%, 55%);\n  --rg-gametype-chars: hsl(35, 100%, 45%);\n  --rg-gametype-digits: hsl(0, 0%, 50%);\n  --rg-gametype-sprint: hsl(5, 40%, 60%);\n  --rg-icon-primary: hsl(207, 89%, 76%);\n  --rg-icon-delete: hsl(4, 100%, 75%);\n  --rg-bg-hover-delete: hsla(4, 100%, 75%, 0.2);\n  --rg-icon-pin: hsl(133, 43%, 47%);\n  --rg-bg-hover-pin: hsla(133, 43%, 47%, 0.2);\n  --rg-icon-info: hsl(0, 0%, 88%);\n  --rg-bg-hover-info: hsla(0, 0%, 88%, 0.2);\n  --rg-icon-edit: hsl(45, 100%, 60%);\n  --rg-bg-hover-edit: hsla(45, 100%, 60%, 0.2);\n  --rg-icon-theme-sun: hsl(48, 100%, 50%);\n  --rg-icon-theme-moon: hsl(207, 89%, 76%);\n  --rg-hover-control: hsl(0, 0%, 38%);\n  --rg-hover-control-btn: hsl(213, 81.6%, 29.8%);\n  --rg-bg-card-pinned-voc: hsl(215, 80%, 10%);\n  --rg-border-pinned-voc: hsl(215, 80%, 30%);\n  --rg-bg-card-pinned-normal: hsl(130, 50%, 10%);\n  --rg-border-pinned-normal: hsl(130, 50%, 30%);\n  --rg-bg-card-pinned-abra: hsl(215, 20%, 10%);\n  --rg-border-pinned-abra: hsl(215, 20%, 30%);\n  --rg-bg-card-pinned-referats: hsl(80, 55%, 10%);\n  --rg-border-pinned-referats: hsl(80, 55%, 30%);\n  --rg-bg-card-pinned-noerror: hsl(200, 45%, 10%);\n  --rg-border-pinned-noerror: hsl(200, 45%, 30%);\n  --rg-bg-card-pinned-marathon: hsl(340, 65%, 10%);\n  --rg-border-pinned-marathon: hsl(340, 65%, 30%);\n  --rg-bg-card-pinned-chars: hsl(40, 100%, 10%);\n  --rg-border-pinned-chars: hsl(40, 100%, 30%);\n  --rg-bg-card-pinned-digits: hsl(0, 0%, 10%);\n  --rg-border-pinned-digits: hsl(0, 0%, 30%);\n  --rg-bg-card-pinned-sprint: hsl(5, 40%, 10%);\n  --rg-border-pinned-sprint: hsl(5, 40%, 30%);\n  --rg-bg-tab: hsl(220, 10%, 15%);\n  --rg-bg-tab-hover: hsl(220, 10%, 18%);\n  --rg-bg-tab-active: hsl(210, 10%, 11%);\n  --rg-icon-accent: hsl(207, 89%, 76%);\n  --rg-qualification-icon: hsl(48, 100%, 50%);\n  --rg-panel-toggle-background: hsl(215, 80%, 20%);\n  --rg-panel-toggle-stroke: hsl(215, 80%, 65%);\n  --rg-panel-toggle-border: hsl(215, 80%, 30%);\n  --rg-panel-toggle-bg-hover: hsl(215, 80%, 25%);\n  --rg-header-text: hsl(48, 100%, 50%);\n  --rg-rank-slider-track-bg: hsl(215, 80%, 10%);\n  --rg-rank-slider-border: hsl(215, 80%, 30%);\n  --rg-rank-slider-range: hsl(215, 80%, 30%);\n  --rg-rank-slider-handle-bg: hsl(215, 80%, 10%);\n  --rg-rank-slider-border-focus: hsl(215, 80%, 50%);\n}\n\n#latest-games-container {\n  display: flex;\n  flex-direction: column;\n  font-family: \"Montserrat\", sans-serif;\n  position: fixed;\n  top: 50px;\n  width: auto;\n  min-width: 200px;\n  max-width: 330px;\n  background-color: var(--rg-bg-primary);\n  border: 1px solid var(--rg-border-primary);\n  border-left: none;\n  border-radius: 0 8px 8px 0 !important;\n  box-shadow: 2px 0 10px rgba(0, 0, 0, 0.1) !important;\n  z-index: 1020;\n  padding: 10px 0;\n  opacity: 0;\n  pointer-events: none;\n  user-select: none;\n  transition: left 0.3s ease, opacity 0.3s ease;\n  overflow: hidden;\n  color: var(--rg-text-primary);\n}\n#latest-games-container #latest-games-content {\n  overflow-y: auto;\n  overflow-x: hidden;\n  scrollbar-width: none;\n  height: calc(100% - 40px);\n  width: 100%;\n}\n#latest-games-container.visible {\n  left: 0 !important;\n  opacity: 1;\n  pointer-events: auto;\n  user-select: auto;\n}\n#latest-games-container.display-mode-wrap {\n  max-width: none;\n  width: 95vw;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  position: fixed;\n}\n#latest-games-container.display-mode-wrap .latest-games-controls {\n  flex-direction: row;\n}\n#latest-games-container #latest-games {\n  margin: 0;\n  position: relative;\n  padding: 0;\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n}\n#latest-games-container #latest-games .group-header {\n  display: inline-flex;\n  padding: 5px 15px;\n  min-height: 30px;\n  max-width: 300px;\n  font: 600 14px \"Montserrat\", sans-serif;\n  border-radius: 4px !important;\n  background: var(--rg-bg-card);\n  color: var(--rg-text-primary);\n  border: 2px solid var(--rg-border-primary);\n  cursor: pointer;\n  user-select: none;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  height: fit-content;\n  transition: border 0.1s ease, background-color 0.1s ease;\n  width: 100%;\n  margin: 0 10px;\n}\n#latest-games-container #latest-games .group-header:hover, #latest-games-container #latest-games .group-header:focus {\n  border-color: var(--rg-border-hover);\n  background: var(--rg-bg-hover);\n  color: var(--rg-text-primary);\n}\n#latest-games-container #latest-games .group-header.active {\n  color: var(--rg-gametype-normal) !important;\n  background-color: var(--rg-bg-card-pinned-normal) !important;\n  border: 2px solid var(--rg-border-pinned-normal) !important;\n}\n#latest-games-container #latest-games.display-mode-wrap {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  max-height: none;\n  margin: 0 10px;\n}\n#latest-games-container #latest-games.display-mode-wrap .latest-game,\n#latest-games-container #latest-games.display-mode-wrap .group-header {\n  margin: 0 !important;\n  max-width: none;\n}\n#latest-games-container #latest-games .latest-game {\n  position: relative;\n  margin: 0 10px;\n  border: 2px solid var(--rg-border-primary);\n  border-radius: 4px !important;\n  background-color: var(--rg-bg-card);\n  transition: border 0.1s ease, background-color 0.1s ease;\n  display: inline-flex;\n  max-width: 300px;\n}\n#latest-games-container #latest-games .latest-game.pin-game {\n  cursor: move;\n}\n#latest-games-container #latest-games .latest-game.pin-game.pin-gametype-voc {\n  border: 2px solid var(--rg-border-pinned-voc);\n  background-color: var(--rg-bg-card-pinned-voc);\n}\n#latest-games-container #latest-games .latest-game.pin-game.pin-gametype-normal {\n  border: 2px solid var(--rg-border-pinned-normal);\n  background-color: var(--rg-bg-card-pinned-normal);\n}\n#latest-games-container #latest-games .latest-game.pin-game.pin-gametype-abra {\n  border: 2px solid var(--rg-border-pinned-abra);\n  background-color: var(--rg-bg-card-pinned-abra);\n}\n#latest-games-container #latest-games .latest-game.pin-game.pin-gametype-referats {\n  border: 2px solid var(--rg-border-pinned-referats);\n  background-color: var(--rg-bg-card-pinned-referats);\n}\n#latest-games-container #latest-games .latest-game.pin-game.pin-gametype-noerror {\n  border: 2px solid var(--rg-border-pinned-noerror);\n  background-color: var(--rg-bg-card-pinned-noerror);\n}\n#latest-games-container #latest-games .latest-game.pin-game.pin-gametype-marathon {\n  border: 2px solid var(--rg-border-pinned-marathon);\n  background-color: var(--rg-bg-card-pinned-marathon);\n}\n#latest-games-container #latest-games .latest-game.pin-game.pin-gametype-chars {\n  border: 2px solid var(--rg-border-pinned-chars);\n  background-color: var(--rg-bg-card-pinned-chars);\n}\n#latest-games-container #latest-games .latest-game.pin-game.pin-gametype-digits {\n  border: 2px solid var(--rg-border-pinned-digits);\n  background-color: var(--rg-bg-card-pinned-digits);\n}\n#latest-games-container #latest-games .latest-game.pin-game.pin-gametype-sprint {\n  border: 2px solid var(--rg-border-pinned-sprint);\n  background-color: var(--rg-bg-card-pinned-sprint);\n}\n#latest-games-container #latest-games .latest-game:hover {\n  border-color: var(--rg-border-hover);\n  background-color: var(--rg-bg-hover);\n}\n#latest-games-container #latest-games .latest-game.dragging {\n  opacity: 0.7;\n  z-index: 1021;\n  transition: transform 0.1s ease;\n}\n#latest-games-container #latest-games .latest-game.display-mode-wrap {\n  margin: 0;\n}\n#latest-games-container #latest-games .latest-game a {\n  display: block;\n  width: 100%;\n  padding: 5px 15px;\n  text-decoration: none;\n  color: inherit;\n}\n#latest-games-container #latest-games .latest-game .latest-game-name {\n  display: flex;\n  font-weight: bold;\n  font-size: 12px;\n  margin-bottom: 2px;\n  align-items: center;\n}\n#latest-games-container #latest-games .latest-game .latest-game-name.gametype-voc {\n  color: var(--rg-gametype-voc) !important;\n}\n#latest-games-container #latest-games .latest-game .latest-game-name.gametype-normal {\n  color: var(--rg-gametype-normal) !important;\n}\n#latest-games-container #latest-games .latest-game .latest-game-name.gametype-abra {\n  color: var(--rg-gametype-abra) !important;\n}\n#latest-games-container #latest-games .latest-game .latest-game-name.gametype-referats {\n  color: var(--rg-gametype-referats) !important;\n}\n#latest-games-container #latest-games .latest-game .latest-game-name.gametype-noerror {\n  color: var(--rg-gametype-noerror) !important;\n}\n#latest-games-container #latest-games .latest-game .latest-game-name.gametype-marathon {\n  color: var(--rg-gametype-marathon) !important;\n}\n#latest-games-container #latest-games .latest-game .latest-game-name.gametype-chars {\n  color: var(--rg-gametype-chars) !important;\n}\n#latest-games-container #latest-games .latest-game .latest-game-name.gametype-digits {\n  color: var(--rg-gametype-digits) !important;\n}\n#latest-games-container #latest-games .latest-game .latest-game-name.gametype-sprint {\n  color: var(--rg-gametype-sprint) !important;\n}\n#latest-games-container #latest-games .latest-game .latest-game-description {\n  display: inline-flex;\n  font-size: 10px;\n  color: var(--rg-text-secondary);\n}\n#latest-games-container #latest-games .latest-game .latest-game-qual,\n#latest-games-container #latest-games .latest-game .latest-game-state-icon {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: 4px;\n}\n#latest-games-container #latest-games .latest-game .latest-game-qual svg,\n#latest-games-container #latest-games .latest-game .latest-game-state-icon svg {\n  width: 14px;\n  height: 14px;\n}\n#latest-games-container #latest-games .latest-game .latest-game-levels {\n  display: block;\n  font-size: 9px;\n  color: var(--rg-text-tertiary);\n  margin-top: 1px;\n}\n#latest-games-container #latest-games .latest-game .latest-game-buttons {\n  position: absolute;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  gap: 2px;\n  top: 0;\n  right: 0;\n  transform: translateY(-100%);\n  background-color: var(--rg-bg-card);\n  border-radius: 4px !important;\n  border: 2px solid var(--rg-border-primary);\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.2) !important;\n  visibility: hidden;\n}\n#latest-games-container #latest-games .latest-game:hover .latest-game-buttons {\n  opacity: 1;\n}\n#latest-games-container #latest-games .latest-game .latest-game-pin {\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n  border-radius: 2px !important;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: background-color 0.2s ease;\n  background-color: transparent;\n}\n#latest-games-container #latest-games .latest-game .latest-game-pin:hover {\n  background-color: var(--rg-bg-hover-pin);\n}\n#latest-games-container #latest-games .latest-game .latest-game-pin svg {\n  width: 16px;\n  height: 16px;\n  stroke: var(--rg-icon-pin);\n  fill: none;\n}\n#latest-games-container #latest-games .latest-game .latest-game-delete {\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n  border-radius: 2px !important;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: background-color 0.2s ease;\n  background-color: transparent;\n}\n#latest-games-container #latest-games .latest-game .latest-game-delete:hover {\n  background-color: var(--rg-bg-hover-delete);\n}\n#latest-games-container #latest-games .latest-game .latest-game-delete svg {\n  width: 16px;\n  height: 16px;\n  stroke: var(--rg-icon-delete);\n  fill: none;\n}\n#latest-games-container #latest-games .latest-game .latest-game-info {\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n  border-radius: 2px !important;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: background-color 0.2s ease;\n  background-color: transparent;\n}\n#latest-games-container #latest-games .latest-game .latest-game-info:hover {\n  background-color: var(--rg-bg-hover-info);\n}\n#latest-games-container #latest-games .latest-game .latest-game-info svg {\n  width: 16px;\n  height: 16px;\n  stroke: var(--rg-icon-info);\n  fill: none;\n}\n#latest-games-container #latest-games .latest-game .latest-game-edit {\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n  border-radius: 2px !important;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: background-color 0.2s ease;\n  background-color: transparent;\n}\n#latest-games-container #latest-games .latest-game .latest-game-edit:hover {\n  background-color: var(--rg-bg-hover-edit);\n}\n#latest-games-container #latest-games .latest-game .latest-game-edit svg {\n  width: 16px;\n  height: 16px;\n  stroke: var(--rg-icon-edit);\n  fill: none;\n}\n#latest-games-container #latest-games .latest-game.previous-game {\n  animation: tilt-n-move-shaking 0.3s ease 5;\n}\n#latest-games-container .latest-games-controls {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 0 10px 10px;\n  top: 0;\n  position: sticky;\n  width: 100%;\n  z-index: 10;\n  background-color: var(--rg-bg-primary);\n  border-bottom: 1px solid var(--rg-border-primary);\n}\n#latest-games-container .latest-games-controls .controls-buttons {\n  gap: 2px;\n  display: flex;\n  flex-wrap: wrap;\n}\n#latest-games-container .latest-games-controls .controls-buttons .latest-games-replay.replay-next-game {\n  background-color: var(--rg-bg-enabled-yellow);\n}\n#latest-games-container .latest-games-controls .controls-buttons .latest-games-replay.replay-next-game svg {\n  stroke: var(--rg-enabled-yellow);\n}\n#latest-games-container #latest-games-options {\n  display: flex;\n  align-items: center;\n  font-size: 13px;\n  gap: 5px;\n  color: var(--rg-text-options);\n  user-select: none;\n}\n#latest-games-container #latest-games-count {\n  margin: 0 6px;\n  font-weight: bold;\n  font-size: 14px;\n  min-width: 18px;\n  text-align: center;\n  color: var(--rg-enabled-yellow);\n  cursor: pointer;\n}\n#latest-games-container #latest-games-count-inc,\n#latest-games-container #latest-games-count-dec {\n  height: 24px;\n  width: 24px;\n  cursor: pointer;\n  font-size: 16px;\n  border-radius: 3px !important;\n  transition: background 0.15s;\n  user-select: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: var(--rg-icon-primary);\n}\n#latest-games-container #latest-games-count-inc:hover,\n#latest-games-container #latest-games-count-dec:hover {\n  background: var(--rg-hover-control-btn);\n}\n#latest-games-container #latest-games-count-inc svg,\n#latest-games-container #latest-games-count-dec svg {\n  width: 16px;\n  height: 16px;\n}\n#latest-games-container .theme-toggle,\n#latest-games-container .display-mode-toggle,\n#latest-games-container .control-button {\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 3px !important;\n  width: 24px;\n  height: 24px;\n  background-color: transparent;\n  border-radius: 4px;\n  transition: background 0.15s;\n  user-select: none;\n}\n#latest-games-container .theme-toggle svg,\n#latest-games-container .display-mode-toggle svg,\n#latest-games-container .control-button svg {\n  width: 16px;\n  height: 16px;\n  display: block;\n  transition: stroke 0.2s, fill 0.2s;\n}\n#latest-games-container .theme-toggle svg.feather-sun,\n#latest-games-container .display-mode-toggle svg.feather-sun,\n#latest-games-container .control-button svg.feather-sun {\n  stroke: var(--rg-icon-theme-sun);\n  fill: none;\n  stroke-width: 2;\n  stroke-linecap: round;\n  stroke-linejoin: round;\n}\n#latest-games-container .theme-toggle svg.feather-moon,\n#latest-games-container .display-mode-toggle svg.feather-moon,\n#latest-games-container .control-button svg.feather-moon {\n  stroke: var(--rg-icon-theme-moon);\n  fill: none;\n  stroke-width: 2;\n  stroke-linecap: round;\n  stroke-linejoin: round;\n}\n#latest-games-container .control-button {\n  box-sizing: border-box;\n}\n#latest-games-container .control-button svg {\n  pointer-events: none;\n}\n#latest-games-container #latest-games-groups {\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  margin-bottom: 0;\n}\n#latest-games-container #latest-games-groups .tabs-container {\n  display: inline-flex;\n  flex-direction: row;\n  gap: 5px;\n  flex-wrap: wrap;\n  align-items: center;\n  margin: 0 10px 10px;\n}\n#latest-games-container #latest-games-groups .group-tab {\n  display: inline-flex;\n  padding: 5px 15px;\n  min-height: 30px;\n  max-width: 300px;\n  font: 600 14px \"Montserrat\", sans-serif;\n  border-radius: 4px !important;\n  background: var(--rg-bg-card);\n  color: var(--rg-text-primary);\n  border: 2px solid var(--rg-border-primary);\n  cursor: pointer;\n  user-select: none;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  height: fit-content;\n  transition: border 0.1s ease, background-color 0.1s ease;\n}\n#latest-games-container #latest-games-groups .group-tab:hover, #latest-games-container #latest-games-groups .group-tab:focus {\n  border-color: var(--rg-border-hover);\n  background: var(--rg-bg-hover);\n  color: var(--rg-text-primary);\n}\n#latest-games-container #latest-games-groups .group-tab.active {\n  color: var(--rg-gametype-normal) !important;\n  background-color: var(--rg-bg-card-pinned-normal) !important;\n  border: 2px solid var(--rg-border-pinned-normal) !important;\n}\n#latest-games-container #latest-games-groups .group-controls {\n  gap: 2px;\n  display: inline-flex;\n  align-items: center;\n  padding: 10px;\n}\n#latest-games-container .group-tab.previous-game-group,\n#latest-games-container .group-header.previous-game-group {\n  color: var(--rg-gametype-chars) !important;\n  background-color: var(--rg-bg-card-pinned-chars) !important;\n  border: 2px solid var(--rg-border-pinned-chars) !important;\n}\n#latest-games-container .resize-handle-horizontal {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  width: 4px;\n  height: 100%;\n  cursor: ew-resize;\n  background: transparent;\n  z-index: 1021;\n  border-radius: 4px 0 0 4px;\n  transition: background 0.2s;\n}\n#latest-games-container .resize-handle-horizontal:hover {\n  background-color: rgba(0, 0, 0, 0.18);\n}\n#latest-games-container .resize-handle-vertical {\n  position: absolute;\n  left: 0;\n  right: 0;\n  width: 100%;\n  height: 4px;\n  cursor: ns-resize;\n  background-color: transparent;\n  z-index: 1021;\n  border-radius: 0 0 4px 4px;\n  transition: background 0.2s;\n}\n#latest-games-container .resize-handle-vertical:hover {\n  background-color: rgba(0, 0, 0, 0.18);\n}\n#latest-games-container .resize-handle-vertical-top {\n  top: 0;\n}\n#latest-games-container .resize-handle-vertical-bottom {\n  bottom: 0;\n}\n#latest-games-container #latest-games.display-mode-wrap .drop-indicator {\n  border-left: 2px solid var(--rg-gametype-voc);\n}\n\n#latest-games-hover-area {\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 4px;\n  height: 100vh;\n  z-index: 1023;\n  background-color: transparent;\n  pointer-events: auto;\n}\n\n.latest-games-panel-toggle {\n  position: fixed;\n  left: 0;\n  top: 50%;\n  transform: translateY(-50%);\n  z-index: 1024;\n  background: var(--rg-panel-toggle-background);\n  border: 2px solid var(--rg-panel-toggle-border);\n  border-radius: 0 0.5em 0.5em 0 !important;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15) !important;\n  width: 40px;\n  height: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  transition: background 0.2s;\n  outline: none;\n}\n.latest-games-panel-toggle:hover, .latest-games-panel-toggle:focus {\n  background: var(--rg-panel-toggle-bg-hover);\n}\n.latest-games-panel-toggle svg {\n  stroke: var(--rg-panel-toggle-stroke);\n  width: 1.5em;\n  height: 1.5em;\n  display: block;\n  pointer-events: none;\n}\n\n.custom-tooltip-popup {\n  position: fixed;\n  background: rgb(22, 22, 22);\n  color: rgb(222, 222, 222);\n  padding: 0.5em;\n  z-index: 1200;\n  font-size: 0.9em;\n  font-family: \"Montserrat\", \"Noto Color Emoji\", sans-serif !important;\n  pointer-events: none;\n  white-space: nowrap;\n  opacity: 0;\n  transition: opacity 0.1s;\n  display: none;\n  flex-direction: column;\n  left: 0;\n  top: 0;\n  border: 1px solid rgb(60, 60, 60) !important;\n  border-radius: 4px !important;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3) !important;\n}\n.custom-tooltip-popup .tooltip-item {\n  display: inline-flex !important;\n  align-items: center !important;\n}\n.custom-tooltip-popup .tooltip-header {\n  font-weight: 500 !important;\n  color: gray !important;\n  margin: 0.5em !important;\n}\n.custom-tooltip-popup .tooltip-action {\n  font-weight: 500 !important;\n  color: lightblue !important;\n}\n\n.vocabulary-tooltip-popup {\n  font: 500 14px \"Montserrat\", sans-serif;\n  position: fixed;\n  background: rgb(22, 22, 22);\n  color: rgb(222, 222, 222);\n  padding: 0.5em;\n  z-index: 1200;\n  font-size: 0.9em;\n  pointer-events: auto;\n  white-space: pre-wrap;\n  border: 1px solid rgb(60, 60, 60) !important;\n  border-radius: 4px !important;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3) !important;\n  max-width: 700px;\n  width: auto;\n  max-height: 400px;\n  overflow-y: auto;\n  overflow-x: hidden;\n  scrollbar-width: thin;\n  scrollbar-color: rgb(140, 140, 140) rgb(22, 22, 22);\n  word-wrap: break-word;\n  overflow-wrap: break-word;\n}\n.vocabulary-tooltip-popup .tooltip-number {\n  color: rgb(140, 140, 140);\n  opacity: 0.8;\n}\n.vocabulary-tooltip-popup::-webkit-scrollbar {\n  width: 8px;\n  height: 8px;\n}\n.vocabulary-tooltip-popup::-webkit-scrollbar-track {\n  background: rgb(22, 22, 22) !important;\n}\n.vocabulary-tooltip-popup::-webkit-scrollbar-thumb {\n  background-color: rgb(140, 140, 140) !important;\n}\n.vocabulary-tooltip-popup::-webkit-scrollbar-thumb:hover {\n  background-color: rgb(160, 160, 160) !important;\n}\n\n.latest-games-disabled {\n  background-color: transparent !important;\n  filter: grayscale(1);\n  opacity: 0.5;\n}\n\n.latest-games-hidden {\n  display: none !important;\n}\n\n@keyframes tilt-n-move-shaking {\n  0% {\n    transform: translate(0, 0) rotate(0deg);\n  }\n  25% {\n    transform: translate(4px, 0) rotate(2deg);\n  }\n  50% {\n    transform: translate(0, 0) rotate(0eg);\n  }\n  75% {\n    transform: translate(-4px, 0) rotate(-2deg);\n  }\n  100% {\n    transform: translate(0, 0) rotate(0deg);\n  }\n}`, \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/styles/styles.scss?./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("\r\n\r\n/*\r\n  MIT License http://www.opensource.org/licenses/mit-license.php\r\n  Author Tobias Koppers @sokra\r\n*/\r\nmodule.exports = function (cssWithMappingToString) {\r\n  var list = [];\r\n\r\n  // return the list of modules as css string\r\n  list.toString = function toString() {\r\n    return this.map(function (item) {\r\n      var content = \"\";\r\n      var needLayer = typeof item[5] !== \"undefined\";\r\n      if (item[4]) {\r\n        content += \"@supports (\".concat(item[4], \") {\");\r\n      }\r\n      if (item[2]) {\r\n        content += \"@media \".concat(item[2], \" {\");\r\n      }\r\n      if (needLayer) {\r\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\r\n      }\r\n      content += cssWithMappingToString(item);\r\n      if (needLayer) {\r\n        content += \"}\";\r\n      }\r\n      if (item[2]) {\r\n        content += \"}\";\r\n      }\r\n      if (item[4]) {\r\n        content += \"}\";\r\n      }\r\n      return content;\r\n    }).join(\"\");\r\n  };\r\n\r\n  // import a list of modules into the list\r\n  list.i = function i(modules, media, dedupe, supports, layer) {\r\n    if (typeof modules === \"string\") {\r\n      modules = [[null, modules, undefined]];\r\n    }\r\n    var alreadyImportedModules = {};\r\n    if (dedupe) {\r\n      for (var k = 0; k < this.length; k++) {\r\n        var id = this[k][0];\r\n        if (id != null) {\r\n          alreadyImportedModules[id] = true;\r\n        }\r\n      }\r\n    }\r\n    for (var _k = 0; _k < modules.length; _k++) {\r\n      var item = [].concat(modules[_k]);\r\n      if (dedupe && alreadyImportedModules[item[0]]) {\r\n        continue;\r\n      }\r\n      if (typeof layer !== \"undefined\") {\r\n        if (typeof item[5] === \"undefined\") {\r\n          item[5] = layer;\r\n        } else {\r\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\r\n          item[5] = layer;\r\n        }\r\n      }\r\n      if (media) {\r\n        if (!item[2]) {\r\n          item[2] = media;\r\n        } else {\r\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\r\n          item[2] = media;\r\n        }\r\n      }\r\n      if (supports) {\r\n        if (!item[4]) {\r\n          item[4] = \"\".concat(supports);\r\n        } else {\r\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\r\n          item[4] = supports;\r\n        }\r\n      }\r\n      list.push(item);\r\n    }\r\n  };\r\n  return list;\r\n};\n\n//# sourceURL=webpack://tampermonkey-script/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/noSourceMaps.js":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/noSourceMaps.js ***!
  \**************************************************************/
/***/ ((module) => {

eval("\r\n\r\nmodule.exports = function (i) {\r\n  return i[1];\r\n};\n\n//# sourceURL=webpack://tampermonkey-script/./node_modules/css-loader/dist/runtime/noSourceMaps.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

eval("\r\n\r\nvar stylesInDOM = [];\r\nfunction getIndexByIdentifier(identifier) {\r\n  var result = -1;\r\n  for (var i = 0; i < stylesInDOM.length; i++) {\r\n    if (stylesInDOM[i].identifier === identifier) {\r\n      result = i;\r\n      break;\r\n    }\r\n  }\r\n  return result;\r\n}\r\nfunction modulesToDom(list, options) {\r\n  var idCountMap = {};\r\n  var identifiers = [];\r\n  for (var i = 0; i < list.length; i++) {\r\n    var item = list[i];\r\n    var id = options.base ? item[0] + options.base : item[0];\r\n    var count = idCountMap[id] || 0;\r\n    var identifier = \"\".concat(id, \" \").concat(count);\r\n    idCountMap[id] = count + 1;\r\n    var indexByIdentifier = getIndexByIdentifier(identifier);\r\n    var obj = {\r\n      css: item[1],\r\n      media: item[2],\r\n      sourceMap: item[3],\r\n      supports: item[4],\r\n      layer: item[5]\r\n    };\r\n    if (indexByIdentifier !== -1) {\r\n      stylesInDOM[indexByIdentifier].references++;\r\n      stylesInDOM[indexByIdentifier].updater(obj);\r\n    } else {\r\n      var updater = addElementStyle(obj, options);\r\n      options.byIndex = i;\r\n      stylesInDOM.splice(i, 0, {\r\n        identifier: identifier,\r\n        updater: updater,\r\n        references: 1\r\n      });\r\n    }\r\n    identifiers.push(identifier);\r\n  }\r\n  return identifiers;\r\n}\r\nfunction addElementStyle(obj, options) {\r\n  var api = options.domAPI(options);\r\n  api.update(obj);\r\n  var updater = function updater(newObj) {\r\n    if (newObj) {\r\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\r\n        return;\r\n      }\r\n      api.update(obj = newObj);\r\n    } else {\r\n      api.remove();\r\n    }\r\n  };\r\n  return updater;\r\n}\r\nmodule.exports = function (list, options) {\r\n  options = options || {};\r\n  list = list || [];\r\n  var lastIdentifiers = modulesToDom(list, options);\r\n  return function update(newList) {\r\n    newList = newList || [];\r\n    for (var i = 0; i < lastIdentifiers.length; i++) {\r\n      var identifier = lastIdentifiers[i];\r\n      var index = getIndexByIdentifier(identifier);\r\n      stylesInDOM[index].references--;\r\n    }\r\n    var newLastIdentifiers = modulesToDom(newList, options);\r\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\r\n      var _identifier = lastIdentifiers[_i];\r\n      var _index = getIndexByIdentifier(_identifier);\r\n      if (stylesInDOM[_index].references === 0) {\r\n        stylesInDOM[_index].updater();\r\n        stylesInDOM.splice(_index, 1);\r\n      }\r\n    }\r\n    lastIdentifiers = newLastIdentifiers;\r\n  };\r\n};\n\n//# sourceURL=webpack://tampermonkey-script/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

eval("\r\n\r\nvar memo = {};\r\n\r\n/* istanbul ignore next  */\r\nfunction getTarget(target) {\r\n  if (typeof memo[target] === \"undefined\") {\r\n    var styleTarget = document.querySelector(target);\r\n\r\n    // Special case to return head of iframe instead of iframe itself\r\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\r\n      try {\r\n        // This will throw an exception if access to iframe is blocked\r\n        // due to cross-origin restrictions\r\n        styleTarget = styleTarget.contentDocument.head;\r\n      } catch (e) {\r\n        // istanbul ignore next\r\n        styleTarget = null;\r\n      }\r\n    }\r\n    memo[target] = styleTarget;\r\n  }\r\n  return memo[target];\r\n}\r\n\r\n/* istanbul ignore next  */\r\nfunction insertBySelector(insert, style) {\r\n  var target = getTarget(insert);\r\n  if (!target) {\r\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\r\n  }\r\n  target.appendChild(style);\r\n}\r\nmodule.exports = insertBySelector;\n\n//# sourceURL=webpack://tampermonkey-script/./node_modules/style-loader/dist/runtime/insertBySelector.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

eval("\r\n\r\n/* istanbul ignore next  */\r\nfunction insertStyleElement(options) {\r\n  var element = document.createElement(\"style\");\r\n  options.setAttributes(element, options.attributes);\r\n  options.insert(element, options.options);\r\n  return element;\r\n}\r\nmodule.exports = insertStyleElement;\n\n//# sourceURL=webpack://tampermonkey-script/./node_modules/style-loader/dist/runtime/insertStyleElement.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\r\n\r\n/* istanbul ignore next  */\r\nfunction setAttributesWithoutAttributes(styleElement) {\r\n  var nonce =  true ? __webpack_require__.nc : 0;\r\n  if (nonce) {\r\n    styleElement.setAttribute(\"nonce\", nonce);\r\n  }\r\n}\r\nmodule.exports = setAttributesWithoutAttributes;\n\n//# sourceURL=webpack://tampermonkey-script/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

eval("\r\n\r\n/* istanbul ignore next  */\r\nfunction apply(styleElement, options, obj) {\r\n  var css = \"\";\r\n  if (obj.supports) {\r\n    css += \"@supports (\".concat(obj.supports, \") {\");\r\n  }\r\n  if (obj.media) {\r\n    css += \"@media \".concat(obj.media, \" {\");\r\n  }\r\n  var needLayer = typeof obj.layer !== \"undefined\";\r\n  if (needLayer) {\r\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\r\n  }\r\n  css += obj.css;\r\n  if (needLayer) {\r\n    css += \"}\";\r\n  }\r\n  if (obj.media) {\r\n    css += \"}\";\r\n  }\r\n  if (obj.supports) {\r\n    css += \"}\";\r\n  }\r\n  var sourceMap = obj.sourceMap;\r\n  if (sourceMap && typeof btoa !== \"undefined\") {\r\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\r\n  }\r\n\r\n  // For old IE\r\n  /* istanbul ignore if  */\r\n  options.styleTagTransform(css, styleElement, options.options);\r\n}\r\nfunction removeStyleElement(styleElement) {\r\n  // istanbul ignore if\r\n  if (styleElement.parentNode === null) {\r\n    return false;\r\n  }\r\n  styleElement.parentNode.removeChild(styleElement);\r\n}\r\n\r\n/* istanbul ignore next  */\r\nfunction domAPI(options) {\r\n  if (typeof document === \"undefined\") {\r\n    return {\r\n      update: function update() {},\r\n      remove: function remove() {}\r\n    };\r\n  }\r\n  var styleElement = options.insertStyleElement(options);\r\n  return {\r\n    update: function update(obj) {\r\n      apply(styleElement, options, obj);\r\n    },\r\n    remove: function remove() {\r\n      removeStyleElement(styleElement);\r\n    }\r\n  };\r\n}\r\nmodule.exports = domAPI;\n\n//# sourceURL=webpack://tampermonkey-script/./node_modules/style-loader/dist/runtime/styleDomAPI.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

eval("\r\n\r\n/* istanbul ignore next  */\r\nfunction styleTagTransform(css, styleElement) {\r\n  if (styleElement.styleSheet) {\r\n    styleElement.styleSheet.cssText = css;\r\n  } else {\r\n    while (styleElement.firstChild) {\r\n      styleElement.removeChild(styleElement.firstChild);\r\n    }\r\n    styleElement.appendChild(document.createTextNode(css));\r\n  }\r\n}\r\nmodule.exports = styleTagTransform;\n\n//# sourceURL=webpack://tampermonkey-script/./node_modules/style-loader/dist/runtime/styleTagTransform.js?");

/***/ }),

/***/ "./src/definitions.js":
/*!****************************!*\
  !*** ./src/definitions.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULTS: () => (/* binding */ DEFAULTS),\n/* harmony export */   gameCategories: () => (/* binding */ gameCategories),\n/* harmony export */   gameTypes: () => (/* binding */ gameTypes),\n/* harmony export */   popupIcons: () => (/* binding */ popupIcons),\n/* harmony export */   ranks: () => (/* binding */ ranks),\n/* harmony export */   ranksMap: () => (/* binding */ ranksMap),\n/* harmony export */   timeouts: () => (/* binding */ timeouts),\n/* harmony export */   visibilities: () => (/* binding */ visibilities)\n/* harmony export */ });\nconst popupIcons = {\r\n  day: '☀️',\r\n  week: '📅',\r\n  general: '📋',\r\n  history: '📜',\r\n  comments: '💬'\r\n};\r\n\r\nconst gameTypes = {\r\n  normal: 'Oбычный',\r\n  abra: 'Абракадабра',\r\n  referats: 'Яндекс.Рефераты',\r\n  noerror: 'Безошибочный',\r\n  marathon: 'Марафон',\r\n  chars: 'Буквы',\r\n  digits: 'Цифры',\r\n  sprint: 'Спринт',\r\n  voc: 'Словарь'\r\n};\r\n\r\nconst gameCategories = {\r\n  words: 'Слова',\r\n  phrases: 'Фразы',\r\n  texts: 'Тексты',\r\n  book: 'Книги'\r\n};\r\n\r\nconst visibilities = {\r\n  normal: 'открытый',\r\n  practice: 'одиночный',\r\n  private: 'дружеский'\r\n};\r\n\r\nconst ranks = [\r\n  \"новички\", \"любители\", \"таксисты\", \"профи\",\r\n  \"гонщики\", \"маньяки\", \"супермены\", \"кибергонщики\", \"экстракиберы\"\r\n];\r\n\r\nconst ranksMap = {\r\n  'новичков': 1, 'любителей': 2, 'таксистов': 3, 'профи': 4,\r\n  'гонщиков': 5, 'маньяков': 6, 'суперменов': 7,\r\n  'кибергонщиков': 8, 'экстракиберов': 9\r\n};\r\n\r\nconst timeouts = [5, 10, 20, 30, 45, 60];\r\n\r\n// Centralized default values for LatestGamesManager and related managers\r\nconst DEFAULTS = {\r\n  maxGameCount: 5,\r\n  currentTheme: 'light',\r\n  displayMode: 'scroll',\r\n  previousScrollPosition: 0,\r\n  panelWidth: '70vw',\r\n  panelHeight: '40vh',\r\n  panelWidths: {},\r\n  panelHeights: {},\r\n  hoverTimeout: null,\r\n  isHovered: false,\r\n  enableDragging: true,\r\n  wasDragging: false,\r\n  shouldAutoSave: true,\r\n  hidePanelDelay: 1000,\r\n  shouldStart: false,\r\n  startDelay: 1000,\r\n  shouldReplay: false,\r\n  replayDelay: 1000,\r\n  replayNextGame: false,\r\n  shouldReplayMore: false,\r\n  replayNextGameCount: 1,\r\n  remainingReplayCount: null,\r\n  replayWithoutWaiting: false,\r\n  showSearchBox: false,\r\n  showButtonDescriptions: true,\r\n  showHelpTooltips: true,\r\n  panelYPosition: {\r\n    main: 0,\r\n    gamelist: 0,\r\n    profile: 0,\r\n    chatlogs: 0,\r\n    rating: 0,\r\n    vocabularies: 0,\r\n    about: 0,\r\n    donation: 0,\r\n    forum: 0,\r\n    game: 0\r\n  },\r\n  alwaysVisiblePanel: {\r\n    main: true,\r\n    gamelist: false,\r\n    profile: false,\r\n    chatlogs: false,\r\n    rating: false,\r\n    vocabularies: false,\r\n    about: false,\r\n    donation: false,\r\n    forum: false,\r\n    game: true\r\n  }\r\n};\n\n//# sourceURL=webpack://tampermonkey-script/./src/definitions.js?");

/***/ }),

/***/ "./src/drag/gameButtonDrag.js":
/*!************************************!*\
  !*** ./src/drag/gameButtonDrag.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addDragFunctionality: () => (/* binding */ addDragFunctionality)\n/* harmony export */ });\nconst dragState = {\r\n  draggedElement: null,\r\n  isDragging: false,\r\n  isRightHalf: false,\r\n  dragDirection: 0,\r\n  lastDragDirection: 0,\r\n  lastPanelDragY: 0,\r\n  dragOffset: { x: 0, y: 0 },\r\n  initialX: 0,\r\n  initialY: 0,\r\n  dragThreshold: 1,\r\n  rotationAccumulator: 0,\r\n  rotationDegreeLimit: 5,\r\n  globalEvents: {},\r\n\r\n  // Reset method to clean up state\r\n  reset() {\r\n    this.draggedElement = null;\r\n    this.isDragging = false;\r\n    this.isRightHalf = false;\r\n    this.dragDirection = 0;\r\n    this.lastDragDirection = 0;\r\n    this.lastPanelDragY = 0;\r\n    this.dragOffset = { x: 0, y: 0 };\r\n    this.initialX = 0;\r\n    this.initialY = 0;\r\n    this.rotationAccumulator = 0;\r\n    // Clear event references\r\n    this.globalEvents = {};\r\n  },\r\n\r\n  // Add cleanup method\r\n  cleanup() {\r\n    if (this.globalEvents.handleDragMove) {\r\n      document.removeEventListener('mousemove', this.globalEvents.handleDragMove);\r\n    }\r\n    if (this.globalEvents.handleDragEnd) {\r\n      document.removeEventListener('mouseup', this.globalEvents.handleDragEnd);\r\n    }\r\n    this.globalEvents = {};\r\n  }\r\n};\r\n\r\nfunction isActuallyDragging(e) {\r\n  return (\r\n    Math.abs(e.clientX - dragState.initialX) > dragState.dragThreshold ||\r\n    Math.abs(e.clientY - dragState.initialY) > dragState.dragThreshold\r\n  );\r\n}\r\n\r\nfunction getDragBounds(element) {\r\n  const rect = element.getBoundingClientRect();\r\n  const parentRect = element.parentElement.getBoundingClientRect();\r\n  const parentElement = element.parentElement;\r\n\r\n  return {\r\n    element: {\r\n      rect: rect,\r\n      width: element.offsetWidth,\r\n      height: element.offsetHeight\r\n    },\r\n    parent: {\r\n      rect: parentRect,\r\n      width: parentElement.offsetWidth,\r\n      height: parentElement.offsetHeight\r\n    }\r\n  };\r\n}\r\n\r\n// --- Drop indicator management ---\r\nlet dropIndicator = null;\r\nfunction addDropIndicator() {\r\n  if (!dropIndicator) {\r\n    dropIndicator = document.createElement('div');\r\n    dropIndicator.className = 'drop-indicator';\r\n    dropIndicator.style.position = 'relative';\r\n  }\r\n  return dropIndicator;\r\n}\r\n\r\nfunction removeDropIndicator() {\r\n  if (dropIndicator && dropIndicator.parentNode) {\r\n    dropIndicator.parentNode.removeChild(dropIndicator);\r\n  }\r\n}\r\n\r\n// Helper function to handle element positioning in wrap mode\r\nfunction handleWrapModePositioning(e, gamesList) {\r\n  const bounds = getDragBounds(dragState.draggedElement);\r\n\r\n  // Calculate constrained position\r\n  let newLeft = e.clientX - dragState.dragOffset.x - bounds.parent.rect.left;\r\n  let newTop = e.clientY - dragState.dragOffset.y - bounds.parent.rect.top;\r\n  newLeft = Math.max(0, Math.min(newLeft, bounds.parent.width - bounds.element.width));\r\n  newTop = Math.max(0, Math.min(newTop, bounds.parent.height - bounds.element.height));\r\n\r\n  dragState.draggedElement.style.left = `${newLeft}px`;\r\n  dragState.draggedElement.style.top = `${newTop}px`;\r\n\r\n  // Handle element insertion\r\n  const pinnedGames = Array.from(gamesList.querySelectorAll('.pin-game:not(.dragging)'));\r\n  let closestElement = null;\r\n  let minDistance = Infinity;\r\n\r\n  pinnedGames.forEach(game => {\r\n    const rect = game.getBoundingClientRect();\r\n    const centerX = rect.left + rect.width / 2;\r\n    const centerY = rect.top + rect.height / 2;\r\n    const distance = Math.hypot(e.clientX - centerX, e.clientY - centerY);\r\n    if (distance < minDistance) {\r\n      minDistance = distance;\r\n      closestElement = game;\r\n    }\r\n  });\r\n\r\n  removeDropIndicator();\r\n  if (closestElement) {\r\n    const rect = closestElement.getBoundingClientRect();\r\n    const isLeftHalf = e.clientX < rect.left + rect.width / 2;\r\n    const indicator = addDropIndicator();\r\n    if (isLeftHalf) {\r\n      gamesList.insertBefore(indicator, closestElement);\r\n      gamesList.insertBefore(dragState.draggedElement, indicator);\r\n    } else {\r\n      gamesList.insertBefore(indicator, closestElement.nextSibling);\r\n      gamesList.insertBefore(dragState.draggedElement, indicator.nextSibling);\r\n    }\r\n  }\r\n}\r\n\r\n// Helper function to handle element positioning in scroll mode\r\nfunction handleScrollModePositioning(e, gamesList) {\r\n  const pinnedGames = Array.from(gamesList.querySelectorAll('.pin-game:not(.dragging)'));\r\n  let insertAfter = null;\r\n\r\n  for (const pinnedGame of pinnedGames) {\r\n    const rect = pinnedGame.getBoundingClientRect();\r\n    const middle = rect.top + rect.height / 2;\r\n    if (e.clientY < middle) break;\r\n    insertAfter = pinnedGame;\r\n  }\r\n\r\n  if (insertAfter) {\r\n    gamesList.insertBefore(dragState.draggedElement, insertAfter.nextSibling);\r\n  } else {\r\n    const firstPinned = gamesList.querySelector('.pin-game:not(.dragging)');\r\n    if (firstPinned) gamesList.insertBefore(dragState.draggedElement, firstPinned);\r\n  }\r\n}\r\n\r\nfunction addDragFunctionality(manager, element) {\r\n  // Clean up any existing listeners first\r\n  dragState.cleanup();\r\n\r\n  element.addEventListener('mousedown', (e) => {\r\n    e.preventDefault(); // Prevent native drag from starting\r\n    // Only allow dragging with left mouse button (LMB)\r\n    if (e.button !== 0) return;\r\n    // Prevent dragging if the target is a button (e.g., pin or delete)\r\n    if (e.target.closest('.latest-game-buttons')) return;\r\n\r\n    // Clean up any existing listeners before adding new ones\r\n    dragState.cleanup();\r\n\r\n    manager.wasDragging = false;\r\n    dragState.initialX = e.clientX;\r\n    dragState.initialY = e.clientY;\r\n    dragState.isDragging = true;\r\n    dragState.draggedElement = element;\r\n\r\n    const bounds = getDragBounds(element);\r\n    const clickX = e.clientX - bounds.element.rect.left;\r\n    dragState.isRightHalf = clickX > bounds.element.rect.width / 2;\r\n    dragState.lastPanelDragY = e.clientY;\r\n    // Calculate the offset from the top-left corner of the element\r\n    dragState.dragOffset = {\r\n      x: e.clientX - bounds.element.rect.left,\r\n      y: e.clientY - bounds.element.rect.top\r\n    };\r\n\r\n    // Create bound functions and store references\r\n    dragState.globalEvents.handleDragMove = (e) => handleDragMove(e, manager);\r\n    dragState.globalEvents.handleDragEnd = () => handleDragEnd(manager);\r\n\r\n    document.addEventListener('mousemove', dragState.globalEvents.handleDragMove);\r\n    document.addEventListener('mouseup', dragState.globalEvents.handleDragEnd);\r\n  });\r\n}\r\n\r\nfunction handleDragMove(e, manager) {\r\n  if (!dragState.isDragging || !dragState.draggedElement) return;\r\n\r\n  if (!manager.wasDragging && isActuallyDragging(e)) {\r\n    manager.wasDragging = true;\r\n    dragState.draggedElement.classList.add('dragging');\r\n    if (manager.viewManager.getDisplayMode() === 'wrap') {\r\n      const bounds = getDragBounds(dragState.draggedElement);\r\n      dragState.draggedElement.style.position = 'absolute';\r\n      dragState.draggedElement.style.left = `${bounds.element.rect.left - bounds.parent.rect.left}px`;\r\n      dragState.draggedElement.style.top = `${bounds.element.rect.top - bounds.parent.rect.top}px`;\r\n      dragState.draggedElement.style.width = `${bounds.element.rect.width}px`;\r\n    }\r\n  }\r\n\r\n  e.preventDefault();\r\n\r\n  const displayMode = manager.viewManager.getDisplayMode();\r\n  const gamesList = document.getElementById('latest-games');\r\n\r\n  if (displayMode === 'scroll') {\r\n    handleScrollModePositioning(e, gamesList);\r\n  } else {\r\n    handleWrapModePositioning(e, gamesList);\r\n  }\r\n\r\n  // Handle rotation\r\n  const currentY = e.clientY;\r\n  const deltaY = currentY - dragState.lastPanelDragY;\r\n  dragState.lastPanelDragY = currentY;\r\n  if (deltaY !== 0) {\r\n    const sensitivity = 0.2;\r\n    dragState.rotationAccumulator = (dragState.rotationAccumulator || 0) +\r\n      (dragState.isRightHalf ? deltaY : -deltaY) * sensitivity;\r\n    dragState.rotationAccumulator = Math.max(\r\n      -dragState.rotationDegreeLimit,\r\n      Math.min(dragState.rotationDegreeLimit, dragState.rotationAccumulator)\r\n    );\r\n    dragState.draggedElement.style.transform = `rotate(${dragState.rotationAccumulator}deg)`;\r\n  }\r\n}\r\n\r\nfunction handleDragEnd(manager) {\r\n  // Always clean up listeners first, regardless of state\r\n  dragState.cleanup();\r\n  removeDropIndicator();\r\n\r\n  if (!dragState.isDragging || !dragState.draggedElement) {\r\n    dragState.reset();\r\n    return;\r\n  }\r\n\r\n  dragState.isDragging = false;\r\n  dragState.draggedElement.classList.remove('dragging');\r\n\r\n  const displayMode = manager.viewManager.getDisplayMode();\r\n  if (displayMode === 'wrap') {\r\n    dragState.draggedElement.style.position = '';\r\n    dragState.draggedElement.style.left = '';\r\n    dragState.draggedElement.style.top = '';\r\n    dragState.draggedElement.style.width = '';\r\n  }\r\n  dragState.draggedElement.style.transform = '';\r\n\r\n  manager.gamesManager.updateGameOrderFromDOM();\r\n\r\n  // Clean up drag state\r\n  dragState.reset();\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/drag/gameButtonDrag.js?");

/***/ }),

/***/ "./src/drag/popupDrag.js":
/*!*******************************!*\
  !*** ./src/drag/popupDrag.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setupPopupDrag: () => (/* binding */ setupPopupDrag)\n/* harmony export */ });\n// Add margin to avoid edge clipping\r\nconst margin = 10;\r\n\r\n/**\r\n * Setup popup positioning, drag functionality, and event handlers for closing\r\n * @param {HTMLElement} popup - The popup element\r\n * @param {MouseEvent} event - The mouse event for initial positioning\r\n * @param {Object} options - Configuration options\r\n * @param {string[]} options.draggableSelectors - CSS selectors for draggable elements\r\n * @param {string[]} options.interactiveSelectors - CSS selectors for interactive elements\r\n * @param {Function} options.onClose - Optional callback when popup is closed\r\n * @returns {Function} Cleanup function to remove all event listeners\r\n */\r\nfunction setupPopupDrag(popup, event, options = {}) {\r\n  const {\r\n    draggableSelectors = [],\r\n    interactiveSelectors = [],\r\n    onClose = null\r\n  } = options;\r\n\r\n  // Add popup to body temporarily to measure dimensions if not already added\r\n  if (!popup.parentNode) {\r\n    popup.style.visibility = 'hidden';\r\n    document.body.appendChild(popup);\r\n  }\r\n\r\n  // Helper function to set popup position within viewport bounds\r\n  const setPosition = (left, top) => {\r\n    // Get viewport dimensions in real-time\r\n    const viewportWidth = window.innerWidth;\r\n    const viewportHeight = window.innerHeight;\r\n\r\n    const popupRect = popup.getBoundingClientRect();\r\n    const maxLeft = viewportWidth - popupRect.width - margin;\r\n    const maxTop = viewportHeight - popupRect.height - margin;\r\n\r\n    const constrainedLeft = Math.max(margin, Math.min(left, maxLeft));\r\n    const constrainedTop = Math.max(margin, Math.min(top, maxTop));\r\n\r\n    popup.style.left = `${constrainedLeft}px`;\r\n    popup.style.top = `${constrainedTop}px`;\r\n  };\r\n\r\n  // Set initial position\r\n  setPosition(event.clientX, event.clientY);\r\n  popup.style.visibility = 'visible';\r\n\r\n  // Store event handlers for cleanup in a single object\r\n  const eventHandlers = {\r\n    clickOutside: null,\r\n    keydown: null,\r\n    popupMouseDown: null,\r\n    currentDrag: null\r\n  };\r\n\r\n  // Setup drag functionality on popup itself, but ignore interactive elements\r\n  eventHandlers.popupMouseDown = (e) => {\r\n    // Only allow dragging on specific elements that should support it\r\n    const isDraggable = (target) => {\r\n      // Check if target is the popup itself or a draggable child\r\n      if (target === popup) return true;\r\n\r\n      // Allow dragging on specified draggable selectors\r\n      return draggableSelectors.some(selector =>\r\n        target.matches && target.matches(selector)\r\n      );\r\n    };\r\n\r\n    // Prevent dragging on interactive elements\r\n    const isInteractive = (target) => {\r\n      return interactiveSelectors.some(selector =>\r\n        target.matches && (target.matches(selector) || target.closest(selector))\r\n      );\r\n    };\r\n\r\n    // Ignore if not draggable or is interactive\r\n    if (!isDraggable(e.target) || isInteractive(e.target)) return;\r\n    // Only left mouse button\r\n    if (e.button !== 0) return;\r\n\r\n    e.preventDefault();\r\n\r\n    // Store initial position and popup position\r\n    const startX = e.clientX;\r\n    const startY = e.clientY;\r\n    const startLeft = parseInt(popup.style.left, margin);\r\n    const startTop = parseInt(popup.style.top, margin);\r\n\r\n    const onMouseMove = (e) => {\r\n      const deltaX = e.clientX - startX;\r\n      const deltaY = e.clientY - startY;\r\n\r\n      const newLeft = startLeft + deltaX;\r\n      const newTop = startTop + deltaY;\r\n\r\n      setPosition(newLeft, newTop);\r\n    };\r\n\r\n    const onMouseUp = () => {\r\n      document.removeEventListener('mousemove', onMouseMove);\r\n      document.removeEventListener('mouseup', onMouseUp);\r\n      eventHandlers.currentDrag = null;\r\n    };\r\n\r\n    eventHandlers.currentDrag = { onMouseMove, onMouseUp };\r\n    document.addEventListener('mousemove', onMouseMove);\r\n    document.addEventListener('mouseup', onMouseUp);\r\n  };\r\n\r\n  popup.addEventListener('mousedown', eventHandlers.popupMouseDown);\r\n\r\n  // Set cursor style for draggable areas\r\n  popup.style.cursor = 'move';\r\n\r\n  // Setup event handlers for closing popup\r\n  const hidePopup = (e) => {\r\n    if (e && e.type === 'keydown' && e.key !== 'Escape') return;\r\n\r\n    // Call onClose callback if provided\r\n    if (onClose) {\r\n      onClose();\r\n    }\r\n\r\n    // Remove all event listeners\r\n    cleanup();\r\n\r\n    popup.remove();\r\n  };\r\n\r\n  // Cleanup function to remove all event listeners\r\n  const cleanup = () => {\r\n    if (eventHandlers.clickOutside) {\r\n      document.removeEventListener('click', eventHandlers.clickOutside);\r\n    }\r\n    if (eventHandlers.keydown) {\r\n      document.removeEventListener('keydown', eventHandlers.keydown);\r\n    }\r\n    if (eventHandlers.popupMouseDown) {\r\n      popup.removeEventListener('mousedown', eventHandlers.popupMouseDown);\r\n    }\r\n    if (eventHandlers.currentDrag) {\r\n      document.removeEventListener('mousemove', eventHandlers.currentDrag.onMouseMove);\r\n      document.removeEventListener('mouseup', eventHandlers.currentDrag.onMouseUp);\r\n    }\r\n  };\r\n\r\n  eventHandlers.clickOutside = (e) => {\r\n    if (!popup.contains(e.target)) {\r\n      hidePopup(e);\r\n    }\r\n  };\r\n\r\n  eventHandlers.keydown = (e) => {\r\n    if (e.key === 'Escape') {\r\n      hidePopup(e);\r\n    }\r\n  };\r\n\r\n  // Setup event listeners with a slight delay to avoid immediate triggering\r\n  requestAnimationFrame(() => {\r\n    document.addEventListener('click', eventHandlers.clickOutside);\r\n    document.addEventListener('keydown', eventHandlers.keydown);\r\n  });\r\n\r\n  // Return cleanup function for manual cleanup if needed\r\n  return cleanup;\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/drag/popupDrag.js?");

/***/ }),

/***/ "./src/font.js":
/*!*********************!*\
  !*** ./src/font.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setupFonts: () => (/* binding */ setupFonts)\n/* harmony export */ });\n// Font configuration - easy to add new fonts here\r\nconst FONTS = {\r\n  montserrat: {\r\n    id: 'kg-latest-games-montserrat-font',\r\n    url: 'https://fonts.googleapis.com/css2?family=Montserrat&display=swap'\r\n  },\r\n  notoColorEmoji: {\r\n    id: 'kg-latest-games-noto-emoji-font',\r\n    url: 'https://fonts.googleapis.com/css2?family=Montserrat&family=Noto+Color+Emoji&display=swap'\r\n  }\r\n};\r\n\r\nfunction setupFonts() {\r\n  Object.values(FONTS).forEach(font => {\r\n    if (!document.getElementById(font.id)) {\r\n      const link = document.createElement('link');\r\n      link.id = font.id;\r\n      link.rel = 'stylesheet';\r\n      link.href = font.url;\r\n      document.head.appendChild(link);\r\n    }\r\n  });\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/font.js?");

/***/ }),

/***/ "./src/gameInfo.js":
/*!*************************!*\
  !*** ./src/gameInfo.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createGameInfoPopup: () => (/* binding */ createGameInfoPopup)\n/* harmony export */ });\n/* harmony import */ var _menuPopup_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./menuPopup.js */ \"./src/menuPopup.js\");\n/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./definitions.js */ \"./src/definitions.js\");\n\r\n\r\n\r\n/**\r\n * Create a game info popup with game-related links\r\n * @param {MouseEvent} event - The mouse event for positioning\r\n * @param {Object} game - The game object containing params\r\n * @returns {HTMLElement} The created popup element\r\n */\r\nfunction createGameInfoPopup(event, game) {\r\n  const isVocGame = game.params.gametype === 'voc' && game.params.vocId;\r\n  const gameType = game.params.gametype;\r\n  \r\n  let buttonConfigs = [\r\n    {\r\n      text: `${_definitions_js__WEBPACK_IMPORTED_MODULE_1__.popupIcons.day} День`,\r\n      className: 'popup-button',\r\n      onClick: () => {\r\n        const url = isVocGame \r\n          ? `https://klavogonki.ru/vocs/${game.params.vocId}/top/day/`\r\n          : `https://klavogonki.ru/top/day/${gameType}/`;\r\n        window.open(url, '_blank');\r\n      }\r\n    },\r\n    {\r\n      text: `${_definitions_js__WEBPACK_IMPORTED_MODULE_1__.popupIcons.week} Неделя`,\r\n      className: 'popup-button',\r\n      onClick: () => {\r\n        const url = isVocGame \r\n          ? `https://klavogonki.ru/vocs/${game.params.vocId}/top/week/`\r\n          : `https://klavogonki.ru/top/week/${gameType}/`;\r\n        window.open(url, '_blank');\r\n      }\r\n    }\r\n  ];\r\n\r\n  // Add vocabulary-specific links only for voc games\r\n  if (isVocGame) {\r\n    const vocId = game.params.vocId;\r\n    const baseUrl = `https://klavogonki.ru/vocs/${vocId}`;\r\n    \r\n    buttonConfigs.unshift({\r\n      text: `${_definitions_js__WEBPACK_IMPORTED_MODULE_1__.popupIcons.general} Общая`,\r\n      className: 'popup-button',\r\n      onClick: () => window.open(baseUrl + '/', '_blank')\r\n    });\r\n    \r\n    buttonConfigs.push(\r\n      {\r\n        text: `${_definitions_js__WEBPACK_IMPORTED_MODULE_1__.popupIcons.history} История`,\r\n        className: 'popup-button',\r\n        onClick: () => window.open(baseUrl + '/history/', '_blank')\r\n      },\r\n      {\r\n        text: `${_definitions_js__WEBPACK_IMPORTED_MODULE_1__.popupIcons.comments} Комментарии`,\r\n        className: 'popup-button',\r\n        onClick: () => window.open(baseUrl + '/comments/', '_blank')\r\n      }\r\n    );\r\n  }\r\n\r\n  return (0,_menuPopup_js__WEBPACK_IMPORTED_MODULE_0__.createPopup)(buttonConfigs, event, 'game-popup', 'Информация');\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/gameInfo.js?");

/***/ }),

/***/ "./src/gamePopup.js":
/*!**************************!*\
  !*** ./src/gamePopup.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createGamePopup: () => (/* binding */ createGamePopup)\n/* harmony export */ });\n/* harmony import */ var _tooltip_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tooltip.js */ \"./src/tooltip.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"./src/utils.js\");\n/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./definitions.js */ \"./src/definitions.js\");\n/* harmony import */ var _icons_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./icons.js */ \"./src/icons.js\");\n/* harmony import */ var _drag_popupDrag_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./drag/popupDrag.js */ \"./src/drag/popupDrag.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nconst visibilityTypes = Object.keys(_definitions_js__WEBPACK_IMPORTED_MODULE_2__.visibilities);\r\nconst SETTINGS_KEY = 'latestGamesSettings';\r\n\r\n// Configuration for rank slider constraints\r\nconst RANK_CONSTRAINTS = {\r\n  minFrom: 0, // level_from 1-6 (indices 0-5)\r\n  maxFrom: 5,\r\n  minTo: 5, // level_to 6-9 (indices 5-8)  \r\n  maxTo: 8\r\n};\r\n\r\n// Draggable and interactive selectors for this popup\r\nconst DRAGGABLE_SELECTORS = [\r\n  '.popup-header',\r\n  '.popup-header-title',\r\n  '.popup-subheader',\r\n  '.rank-slider-display',\r\n  '.timeouts-container'\r\n];\r\n\r\nconst INTERACTIVE_SELECTORS = [\r\n  '.game-popup-button',\r\n  '.rank-slider-handle',\r\n  '.rank-slider-track',\r\n  '.rank-slider-range',\r\n  '.popup-header-qualification'\r\n];\r\n\r\n/**\r\n * Settings helper functions\r\n */\r\nconst settingsHelper = {\r\n  load() {\r\n    try {\r\n      return JSON.parse(localStorage.getItem(SETTINGS_KEY)) || {};\r\n    } catch (e) {\r\n      return {};\r\n    }\r\n  },\r\n\r\n  save(settings) {\r\n    try {\r\n      localStorage.setItem(SETTINGS_KEY, JSON.stringify(settings));\r\n    } catch (e) {\r\n      console.warn('Failed to save settings:', e);\r\n    }\r\n  },\r\n\r\n  getRankRange() {\r\n    const settings = this.load();\r\n    return settings.rankRange || [RANK_CONSTRAINTS.minFrom, RANK_CONSTRAINTS.maxTo];\r\n  },\r\n\r\n  saveRankRange(minIdx, maxIdx) {\r\n    const settings = this.load();\r\n    settings.rankRange = [minIdx, maxIdx];\r\n    this.save(settings);\r\n  },\r\n\r\n  getQualificationState() {\r\n    const settings = this.load();\r\n    return settings.qualificationEnabled !== undefined ? settings.qualificationEnabled : false;\r\n  },\r\n\r\n  saveQualificationState(enabled) {\r\n    const settings = this.load();\r\n    settings.qualificationEnabled = enabled;\r\n    this.save(settings);\r\n  }\r\n};\r\n\r\n/**\r\n * Clamp index to allowed range based on handle type\r\n */\r\nfunction clampIndex(idx, isMinHandle) {\r\n  if (isMinHandle) {\r\n    return Math.max(RANK_CONSTRAINTS.minFrom, Math.min(RANK_CONSTRAINTS.maxFrom, idx));\r\n  } else {\r\n    return Math.max(RANK_CONSTRAINTS.minTo, Math.min(RANK_CONSTRAINTS.maxTo, idx));\r\n  }\r\n}\r\n\r\n/**\r\n * Create a game-specific popup with links to all game types and all timeouts.\r\n * Shows every combination regardless of the current game parameters.\r\n * After the subheader for each type, a container for type buttons is created and each button is appended inside.\r\n * @param {Object} game - The game object containing parameters\r\n * @param {MouseEvent} event - The mouse event for positioning\r\n * @param {Object} gameManager - The GameManager instance to access its methods\r\n * @param {string} className - CSS class name for the popup (default: 'game-popup')\r\n * @returns {HTMLElement} The created popup element\r\n */\r\nfunction createGamePopup(game, event, gameManager, className = 'game-popup') {\r\n  (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_0__.hideTooltipElement)(); // Hide any existing tooltip\r\n\r\n  const existingPopup = document.querySelector(`.${className}`);\r\n  existingPopup && existingPopup.remove();\r\n\r\n  const popup = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { className });\r\n\r\n  const header = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { className: 'popup-header' });\r\n\r\n  const headerTitle = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', {\r\n    className: 'popup-header-title',\r\n    textContent: 'Выбрать'\r\n  });\r\n\r\n  const qualification = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createElement)('span', {\r\n    className: 'popup-header-qualification',\r\n    innerHTML: _icons_js__WEBPACK_IMPORTED_MODULE_3__.icons.qualification\r\n  });\r\n\r\n  // Set qualification visibility based on qualification setting\r\n  let qualificationEnabled = settingsHelper.getQualificationState();\r\n  qualification.classList.toggle('latest-games-disabled', !qualificationEnabled);\r\n  (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_0__.createCustomTooltip)(qualification, `Квалификация ${qualificationEnabled ? 'включена' : 'выключена'}`);\r\n\r\n  // Add click handler for qualification toggle\r\n  qualification.addEventListener('click', (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    qualificationEnabled = !qualificationEnabled;\r\n    settingsHelper.saveQualificationState(qualificationEnabled);\r\n\r\n    qualification.classList.toggle('latest-games-disabled', !qualificationEnabled);\r\n    (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_0__.createCustomTooltip)(qualification, `Квалификация ${qualificationEnabled ? 'включена' : 'выключена'}`);\r\n\r\n    // Update all button links with new qualification setting\r\n    updateButtonLinks();\r\n  });\r\n\r\n  header.append(headerTitle, qualification);\r\n  popup.appendChild(header);\r\n\r\n  // --- Dual-range slider for rank selection ---\r\n  const rankSliderContainer = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { className: 'rank-slider-container' });\r\n  const sliderTrack = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { className: 'rank-slider-track' });\r\n  const sliderRange = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { className: 'rank-slider-range' });\r\n  const sliderHandles = [\r\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { className: 'rank-slider-handle', tabIndex: 0 }),\r\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { className: 'rank-slider-handle', tabIndex: 0 })\r\n  ];\r\n  const rankDisplay = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { className: 'rank-slider-display' });\r\n\r\n  // Load saved range with proper clamping\r\n  let [minIdx, maxIdx] = settingsHelper.getRankRange();\r\n  minIdx = clampIndex(minIdx, true);\r\n  maxIdx = clampIndex(maxIdx, false);\r\n\r\n  // Ensure valid range relationship\r\n  if (minIdx > maxIdx) minIdx = maxIdx;\r\n  if (maxIdx < minIdx) maxIdx = minIdx;\r\n\r\n  // Store references to all button elements and their config\r\n  const buttonRefs = [];\r\n\r\n  function updateSliderUI() {\r\n    // Ensure indices are properly clamped\r\n    minIdx = clampIndex(minIdx, true);\r\n    maxIdx = clampIndex(maxIdx, false);\r\n\r\n    // Prevent invalid range relationships\r\n    if (minIdx > maxIdx) minIdx = maxIdx;\r\n    if (maxIdx < minIdx) maxIdx = minIdx;\r\n\r\n    const percent1 = (minIdx / (_definitions_js__WEBPACK_IMPORTED_MODULE_2__.ranks.length - 1)) * 100;\r\n    const percent2 = (maxIdx / (_definitions_js__WEBPACK_IMPORTED_MODULE_2__.ranks.length - 1)) * 100;\r\n\r\n    sliderHandles[0].style.left = percent1 + '%';\r\n    sliderHandles[1].style.left = percent2 + '%';\r\n    sliderRange.style.left = percent1 + '%';\r\n    sliderRange.style.width = (percent2 - percent1) + '%';\r\n\r\n    rankDisplay.textContent = _definitions_js__WEBPACK_IMPORTED_MODULE_2__.ranks[minIdx] + (minIdx === maxIdx ? '' : ' — ' + _definitions_js__WEBPACK_IMPORTED_MODULE_2__.ranks[maxIdx]);\r\n\r\n    // Handle overlap state\r\n    const isOverlap = minIdx === maxIdx;\r\n    const handleClasses = [\r\n      ['overlap', 'overlap-left'],\r\n      ['overlap', 'overlap-right']\r\n    ];\r\n\r\n    sliderHandles.forEach((handle, i) => {\r\n      handleClasses[i].forEach(className => handle.classList.toggle(className, isOverlap));\r\n    });\r\n\r\n    // Update all button links\r\n    updateButtonLinks();\r\n  }\r\n\r\n  function updateButtonLinks() {\r\n    const isRangeModified = minIdx !== RANK_CONSTRAINTS.minFrom || maxIdx !== RANK_CONSTRAINTS.maxTo;\r\n\r\n    buttonRefs.forEach(({ btn, type, timeout }) => {\r\n      const modifiedGame = {\r\n        ...game,\r\n        params: {\r\n          ...game.params,\r\n          type,\r\n          timeout,\r\n          level_from: isRangeModified ? minIdx + 1 : game.params.level_from,\r\n          level_to: isRangeModified ? maxIdx + 1 : game.params.level_to\r\n        }\r\n      };\r\n\r\n      // Add qualification parameter if enabled\r\n      if (qualificationEnabled) {\r\n        modifiedGame.params.qual = 1;\r\n      }\r\n\r\n      const link = gameManager.generateGameLink(modifiedGame);\r\n      btn.setAttribute('href', link);\r\n      btn.onclick = (e) => {\r\n        e.preventDefault();\r\n        window.location.href = link;\r\n      };\r\n    });\r\n  }\r\n\r\n  function saveRange() {\r\n    settingsHelper.saveRankRange(minIdx, maxIdx);\r\n  }\r\n\r\n  // Handle click on slider track\r\n  sliderTrack.addEventListener('click', (e) => {\r\n    const rect = sliderTrack.getBoundingClientRect();\r\n    const x = e.clientX - rect.left;\r\n    const percent = x / rect.width;\r\n    let idx = Math.round(percent * (_definitions_js__WEBPACK_IMPORTED_MODULE_2__.ranks.length - 1));\r\n\r\n    // Determine which handle to move based on proximity\r\n    if (Math.abs(idx - minIdx) < Math.abs(idx - maxIdx)) {\r\n      minIdx = Math.min(clampIndex(idx, true), maxIdx);\r\n    } else {\r\n      maxIdx = Math.max(clampIndex(idx, false), minIdx);\r\n    }\r\n\r\n    updateSliderUI();\r\n    saveRange();\r\n  });\r\n\r\n  // Handle dragging\r\n  sliderHandles.forEach((handle, i) => {\r\n    handle.addEventListener('mousedown', (e) => {\r\n      e.preventDefault();\r\n      let prev = i === 0 ? minIdx : maxIdx;\r\n\r\n      const onMove = ({ clientX }) => {\r\n        const { left, width } = sliderTrack.getBoundingClientRect();\r\n        let idx = Math.round(((clientX - left) / width) * (_definitions_js__WEBPACK_IMPORTED_MODULE_2__.ranks.length - 1));\r\n        idx = clampIndex(idx, i === 0);\r\n\r\n        // compute the new value for minIdx or maxIdx\r\n        const newVal = i === 0\r\n          ? Math.min(idx, maxIdx)\r\n          : Math.max(idx, minIdx);\r\n\r\n        if (newVal !== prev) {\r\n          prev = newVal;\r\n          if (i === 0) minIdx = newVal;\r\n          else maxIdx = newVal;\r\n          updateSliderUI();\r\n        }\r\n      };\r\n\r\n      const onUp = () => {\r\n        saveRange();\r\n        document.removeEventListener('mousemove', onMove);\r\n        document.removeEventListener('mouseup', onUp);\r\n      };\r\n\r\n      document.addEventListener('mousemove', onMove);\r\n      document.addEventListener('mouseup', onUp);\r\n    });\r\n  });\r\n\r\n  // Build slider UI\r\n  sliderTrack.appendChild(sliderRange);\r\n  sliderHandles.forEach(h => sliderTrack.appendChild(h));\r\n  rankSliderContainer.appendChild(rankDisplay);\r\n  rankSliderContainer.appendChild(sliderTrack);\r\n  popup.appendChild(rankSliderContainer);\r\n  updateSliderUI();\r\n\r\n  // Create game type sections\r\n  visibilityTypes.forEach(type => {\r\n    const groupHeader = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', {\r\n      className: 'popup-subheader',\r\n      textContent: _definitions_js__WEBPACK_IMPORTED_MODULE_2__.visibilities[type]\r\n    });\r\n    popup.appendChild(groupHeader);\r\n\r\n    const typeButtonsContainer = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { className: 'timeouts-container' });\r\n\r\n    _definitions_js__WEBPACK_IMPORTED_MODULE_2__.timeouts.forEach(timeout => {\r\n      // Skip 5-second timeout for the normal type\r\n      if (type === 'normal' && timeout === 5) return;\r\n\r\n      const isRangeModified = minIdx !== RANK_CONSTRAINTS.minFrom || maxIdx !== RANK_CONSTRAINTS.maxTo;\r\n      const modifiedGame = {\r\n        ...game,\r\n        params: {\r\n          ...game.params,\r\n          type: type,\r\n          timeout: timeout,\r\n          level_from: isRangeModified ? minIdx + 1 : game.params.level_from,\r\n          level_to: isRangeModified ? maxIdx + 1 : game.params.level_to\r\n        }\r\n      };\r\n\r\n      // Add qualification parameter if enabled\r\n      if (qualificationEnabled) {\r\n        modifiedGame.params.qual = 1;\r\n      }\r\n\r\n      const link = gameManager.generateGameLink(modifiedGame);\r\n      const btn = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createElement)('a', {\r\n        href: link,\r\n        className: 'game-popup-button',\r\n        textContent: timeout\r\n      });\r\n\r\n      btn.addEventListener('click', (e) => {\r\n        e.preventDefault();\r\n        window.location.href = link;\r\n      });\r\n\r\n      buttonRefs.push({ btn, type, timeout });\r\n      typeButtonsContainer.appendChild(btn);\r\n    });\r\n\r\n    popup.appendChild(typeButtonsContainer);\r\n  });\r\n\r\n  // Setup popup positioning, drag functionality, and event handlers\r\n  setupPopupPositioning(popup, event);\r\n\r\n  return popup;\r\n}\r\n\r\n/**\r\n * Handle popup positioning and tooltip setup, then delegate drag functionality\r\n */\r\nfunction setupPopupPositioning(popup, event) {\r\n  // Add tooltips for truncated links\r\n  popup.querySelectorAll('a').forEach(a => {\r\n    if (a.scrollWidth > a.clientWidth) {\r\n      (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_0__.createCustomTooltip)(a, a.textContent);\r\n    }\r\n  });\r\n\r\n  // Setup drag functionality with specific selectors for this popup\r\n  (0,_drag_popupDrag_js__WEBPACK_IMPORTED_MODULE_4__.setupPopupDrag)(popup, event, {\r\n    draggableSelectors: DRAGGABLE_SELECTORS,\r\n    interactiveSelectors: INTERACTIVE_SELECTORS\r\n  });\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/gamePopup.js?");

/***/ }),

/***/ "./src/gameStatsApi.js":
/*!*****************************!*\
  !*** ./src/gameStatsApi.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GameStatsApi: () => (/* binding */ GameStatsApi),\n/* harmony export */   gameStatsApi: () => (/* binding */ gameStatsApi)\n/* harmony export */ });\n/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./definitions.js */ \"./src/definitions.js\");\n\r\n\r\nclass GameStatsApi {\r\n  constructor() {\r\n    this.cache = new Map(); // Cache API responses\r\n  }\r\n\r\n  /**\r\n   * Extract user ID from avatar image\r\n   * @returns {string|null} User ID or null if not found\r\n   */\r\n  getUserId() {\r\n    const avatarImg = document.querySelector('.userpanel .user-block .name img');\r\n    if (!avatarImg) return null;\r\n\r\n    const src = avatarImg.src;\r\n    const match = src.match(/\\/avatars\\/(\\d+)_/);\r\n    return match ? match[1] : null;\r\n  }\r\n\r\n  /**\r\n   * Parse game parameters from anchor href\r\n   * @param {HTMLAnchorElement} anchor \r\n   * @returns {Object} Parsed parameters\r\n   */\r\n  parseGameParams(anchor) {\r\n    const href = anchor.href;\r\n    const url = new URL(href);\r\n    const params = {};\r\n\r\n    for (const [key, value] of url.searchParams) {\r\n      params[key] = value;\r\n    }\r\n\r\n    return params;\r\n  }\r\n\r\n  /**\r\n   * Get game ID from anchor URL (voc ID for voc games, or gametype for others)\r\n   * @param {HTMLAnchorElement} anchor \r\n   * @returns {string|null} Game ID or null if not found\r\n   */\r\n  getGameId(anchor) {\r\n    const params = this.parseGameParams(anchor);\r\n\r\n    if (params.gametype === 'voc' && params.voc) {\r\n      return params.voc; // Return voc ID for voc games\r\n    } else if (params.gametype) {\r\n      return params.gametype; // Return gametype for other games\r\n    }\r\n\r\n    return 'normal'; // Default fallback\r\n  }\r\n\r\n  /**\r\n   * Build API URL based on game type and parameters\r\n   * @param {string} userId \r\n   * @param {Object} gameParams \r\n   * @returns {string} API URL\r\n   */\r\n  buildApiUrl(userId, gameParams) {\r\n    const baseUrl = 'https://klavogonki.ru/api/profile/get-stats-details';\r\n    const params = new URLSearchParams({\r\n      userId: userId\r\n    });\r\n\r\n    // Valid game types that the API supports (using imported gameTypes)\r\n    const validApiGameTypes = Object.keys(_definitions_js__WEBPACK_IMPORTED_MODULE_0__.gameTypes);\r\n\r\n    if (gameParams.gametype === 'voc' && gameParams.voc) {\r\n      params.append('gametype', `voc-${gameParams.voc}`);\r\n    } else if (gameParams.gametype && validApiGameTypes.includes(gameParams.gametype)) {\r\n      params.append('gametype', gameParams.gametype);\r\n    } else {\r\n      // For unsupported game types, default to 'normal'\r\n      console.warn(`Unsupported gametype \"${gameParams.gametype}\", defaulting to \"normal\"`);\r\n      params.append('gametype', 'normal');\r\n    }\r\n\r\n    return `${baseUrl}?${params.toString()}`;\r\n  }\r\n\r\n  /**\r\n   * Fetch game stats from API\r\n   * @param {string} apiUrl \r\n   * @returns {Promise<Object|null>} API response or null if failed\r\n   */\r\n  async fetchGameStats(apiUrl) {\r\n    // Check cache first\r\n    if (this.cache.has(apiUrl)) {\r\n      return this.cache.get(apiUrl);\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(apiUrl);\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      // Cache the response\r\n      this.cache.set(apiUrl, data);\r\n\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Failed to fetch game stats:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Format time from seconds to MM:SS format\r\n   * @param {number} seconds \r\n   * @returns {string} Formatted time\r\n   */\r\n  formatTime(seconds) {\r\n    if (!seconds) return 'N/A';\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${minutes}:${secs.toString().padStart(2, '0')}`;\r\n  }\r\n\r\n  /**\r\n   * Format date to Russian locale\r\n   * @param {string} dateString \r\n   * @returns {string} Formatted date\r\n   */\r\n  formatDate(dateString) {\r\n    if (!dateString) return 'N/A';\r\n    try {\r\n      return new Date(dateString).toLocaleDateString('ru-RU', {\r\n        year: 'numeric',\r\n        month: '2-digit',\r\n        day: '2-digit',\r\n        hour: '2-digit',\r\n        minute: '2-digit'\r\n      });\r\n    } catch (error) {\r\n      return dateString;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Format game stats for tooltip display with bracket formatting\r\n   * @param {Object} statsData \r\n   * @param {string} gameId \r\n   * @param {Object} gameParams \r\n   * @returns {string} Formatted tooltip content\r\n   */\r\n  formatStats(statsData, gameId, gameParams) {\r\n    if (!statsData || !statsData.ok) {\r\n      return `Данные отсутствуют`;\r\n    }\r\n\r\n    const { gametype, info } = statsData;\r\n    let content = '';\r\n\r\n    content += '## Информация';\r\n\r\n    // Game type information\r\n    if (gametype) {\r\n      if (gametype.name) content += `[Название] ${gametype.name}`;\r\n      if (gametype.id) content += `[ID словаря] ${gametype.id}`;\r\n      if (gametype.type) {\r\n        const categoryName = _definitions_js__WEBPACK_IMPORTED_MODULE_0__.gameCategories[gametype.type] || gametype.type;\r\n        content += `[Категория] ${categoryName}`;\r\n      }\r\n      if (gametype.symbols) content += `[Символов] ${gametype.symbols.toLocaleString()}`;\r\n      if (gametype.rows) content += `[Строк] ${gametype.rows.toLocaleString()}`;\r\n    }\r\n\r\n    content += '## Статистика';\r\n\r\n    // User performance information\r\n    if (info) {\r\n      if (info.num_races) content += `[Заездов] ${info.num_races}`;\r\n      if (info.avg_speed) content += `[Средняя скорость] ${Math.round(info.avg_speed)} зн/мин`;\r\n      if (info.best_speed) content += `[Лучшая скорость] ${info.best_speed} зн/мин`;\r\n      if (info.avg_error !== undefined) content += `[Средний % ошибок] ${info.avg_error.toFixed(2)}%`;\r\n      if (info.qual !== undefined) content += `[Квалификация] ${info.qual === 0 ? 'Нет' : 'Да'}`;\r\n\r\n      // Total time (seconds)\r\n      if (info.haul && info.haul.total) {\r\n        content += `[Общее время] ${this.formatTime(info.haul.total)}`;\r\n      }\r\n\r\n      // Time breakdown (hours/minutes)\r\n      if (info.haul) {\r\n        const parts = [];\r\n        if (info.haul.hour) parts.push(`${info.haul.hour}ч`);\r\n        if (info.haul.min) parts.push(`${info.haul.min}м`);\r\n        if (parts.length) {\r\n          content += `[Время в игре] ${parts.join(' ')}`;\r\n        }\r\n      }\r\n    }\r\n\r\n    return content.trim();\r\n  }\r\n\r\n  /**\r\n   * Get complete game stats for tooltip\r\n   * @param {HTMLElement} element \r\n   * @returns {Promise<string>} Formatted tooltip content\r\n   */\r\n  async getGameStats(element) {\r\n    // Find the anchor element to get game parameters\r\n    const anchor = element.closest('li').querySelector('a');\r\n    if (!anchor) {\r\n      return '[Ошибка] Не удалось найти параметры игры';\r\n    }\r\n\r\n    const gameId = this.getGameId(anchor);\r\n    if (!gameId) {\r\n      return '[Ошибка] Не удалось получить ID игры';\r\n    }\r\n\r\n    const userId = this.getUserId();\r\n    if (!userId) {\r\n      return `[Game ID] ${gameId} [Ошибка] Не удалось получить ID пользователя`;\r\n    }\r\n\r\n    const gameParams = this.parseGameParams(anchor);\r\n    const apiUrl = this.buildApiUrl(userId, gameParams);\r\n\r\n    // Fetch data asynchronously\r\n    try {\r\n      const statsData = await this.fetchGameStats(apiUrl);\r\n      return this.formatStats(statsData, gameId, gameParams);\r\n    } catch (error) {\r\n      console.error('Error getting game stats:', error);\r\n      return `[Game ID] ${gameId} [Ошибка] Ошибка загрузки статистики`;\r\n    }\r\n  }\r\n}\r\n\r\n// Create singleton instance\r\nconst gameStatsApi = new GameStatsApi();\r\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/gameStatsApi.js?");

/***/ }),

/***/ "./src/icons.js":
/*!**********************!*\
  !*** ./src/icons.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   icons: () => (/* binding */ icons)\n/* harmony export */ });\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\r\n\r\nconst icons = {\r\n  sun: `\r\n    <svg xmlns=\"${SVG_NS}\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\"\r\n    stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n      <circle cx=\"12\" cy=\"12\" r=\"5\"></circle>\r\n      <line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\"></line>\r\n      <line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\"></line>\r\n      <line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\"></line>\r\n      <line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\"></line>\r\n      <line x1=\"1\" y1=\"12\" x2=\"3\" y2=\"12\"></line>\r\n      <line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\"></line>\r\n      <line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\"></line>\r\n      <line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\"></line>\r\n    </svg>\r\n  `,\r\n\r\n  moon: `\r\n    <svg xmlns=\"${SVG_NS}\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\"\r\n    stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n      <path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"></path>\r\n    </svg>\r\n  `,\r\n\r\n  delete: `\r\n    <svg xmlns=\"${SVG_NS}\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\"\r\n    stroke-width=\"2.4\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n      <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n      <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n    </svg>\r\n  `,\r\n\r\n  decrease: `\r\n    <svg xmlns=\"${SVG_NS}\" viewBox=\"0 0 24 24\">\r\n      <path d=\"M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z\" fill=\"currentColor\"/>\r\n    </svg>\r\n  `,\r\n\r\n  increase: `\r\n    <svg xmlns=\"${SVG_NS}\" viewBox=\"0 0 24 24\">\r\n      <path d=\"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z\" fill=\"currentColor\"/>\r\n    </svg>\r\n  `,\r\n\r\n  play: `\r\n    <svg xmlns=\"${SVG_NS}\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\"\r\n    stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n      <polyline points=\"9 18 15 12 9 6\"></polyline>\r\n    </svg>\r\n  `,\r\n\r\n  replay: `\r\n    <svg xmlns=\"${SVG_NS}\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\"\r\n    stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n      <polyline points=\"13 17 18 12 13 7\"></polyline>\r\n      <polyline points=\"6 17 11 12 6 7\"></polyline>\r\n    </svg>\r\n  `,\r\n\r\n  replayImmediately: `\r\n    <svg xmlns=\"${SVG_NS}\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\"\r\n    stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n      <polyline points=\"15 17 20 12 15 7\"></polyline>\r\n      <polyline points=\"9.5 17 14.5 12 9.5 7\"></polyline>\r\n      <polyline points=\"4 17 9 12 4 7\"></polyline>\r\n    </svg>\r\n  `,\r\n\r\n  replayMore: `\r\n    <svg xmlns=\"${SVG_NS}\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\"\r\n    stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n      <path d=\"M4 15s1-1 4-1 5 2 8 2 4-1 4-1V3s-1 1-4 1-5-2-8-2-4 1-4 1z\"></path>\r\n      <line x1=\"4\" y1=\"22\" x2=\"4\" y2=\"15\"></line>\r\n    </svg>\r\n  `,\r\n\r\n  pin: `\r\n    <svg xmlns=\"${SVG_NS}\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\"\r\n    stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n      <rect x=\"3\" y=\"11\" width=\"18\" height=\"11\" rx=\"2\" ry=\"2\"></rect>\r\n      <path d=\"M7 11V7a5 5 0 0 1 10 0v4\"></path>\r\n    </svg>\r\n  `,\r\n\r\n  unpin: `\r\n    <svg xmlns=\"${SVG_NS}\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\"\r\n    stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n      <rect x=\"3\" y=\"11\" width=\"18\" height=\"11\" rx=\"2\" ry=\"2\"></rect>\r\n      <path d=\"M7 11V7a5 5 0 0 1 9.9-1\"></path>\r\n    </svg>\r\n  `,\r\n\r\n  sort: `\r\n    <svg xmlns=\"${SVG_NS}\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\"\r\n    stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n      <polyline points=\"16 3 21 3 21 8\"></polyline>\r\n      <line x1=\"4\" y1=\"20\" x2=\"21\" y2=\"3\"></line>\r\n      <polyline points=\"21 16 21 21 16 21\"></polyline>\r\n      <line x1=\"15\" y1=\"15\" x2=\"21\" y2=\"21\"></line>\r\n      <line x1=\"4\" y1=\"4\" x2=\"9\" y2=\"9\"></line>\r\n    </svg>\r\n  `,\r\n\r\n  import: `\r\n    <svg xmlns=\"${SVG_NS}\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\"\r\n    stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n      <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"></path>\r\n      <polyline points=\"7 10 12 15 17 10\"></polyline>\r\n      <line x1=\"12\" y1=\"15\" x2=\"12\" y2=\"3\"></line>\r\n    </svg>\r\n  `,\r\n\r\n  export: `\r\n    <svg xmlns=\"${SVG_NS}\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\"\r\n    stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n      <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"></path>\r\n      <polyline points=\"17 8 12 3 7 8\"></polyline>\r\n      <line x1=\"12\" y1=\"3\" x2=\"12\" y2=\"15\"></line>\r\n    </svg>\r\n  `,\r\n\r\n  trashNothing: `\r\n    <svg xmlns=\"${SVG_NS}\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n      <polyline points=\"3 6 5 6 21 6\"></polyline>\r\n      <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path>\r\n    </svg>\r\n  `,\r\n\r\n  trashSomething: `\r\n    <svg xmlns=\"${SVG_NS}\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\"\r\n    stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n      <polyline points=\"3 6 5 6 21 6\"></polyline>\r\n      <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path>\r\n      <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"></line>\r\n      <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"></line>\r\n    </svg>\r\n  `,\r\n\r\n  wrap: `\r\n    <svg xmlns=\"${SVG_NS}\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\"\r\n    stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n      <rect x=\"3\" y=\"3\" width=\"7\" height=\"7\"/>\r\n      <rect x=\"14\" y=\"3\" width=\"7\" height=\"7\"/>\r\n      <rect x=\"14\" y=\"14\" width=\"7\" height=\"7\"/>\r\n      <rect x=\"3\" y=\"14\" width=\"7\" height=\"7\"/>\r\n    </svg>\r\n  `,\r\n\r\n  scroll: `\r\n    <svg xmlns=\"${SVG_NS}\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\"\r\n    stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n      <rect x=\"2\" y=\"2\" width=\"20\" height=\"20\" rx=\"2\"/>\r\n      <line x1=\"2\" y1=\"8\" x2=\"22\" y2=\"8\"/>\r\n      <line x1=\"2\" y1=\"16\" x2=\"22\" y2=\"16\"/>\r\n    </svg>\r\n  `,\r\n\r\n  addGroup: `\r\n    <svg xmlns=\"${SVG_NS}\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\"\r\n    stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n      <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\r\n      <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\r\n    </svg>\r\n  `,\r\n\r\n  renameGroup: `\r\n    <svg xmlns=\"${SVG_NS}\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\"\r\n    stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n      <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\"></path>\r\n    </svg>\r\n  `,\r\n\r\n  qualification: `\r\n    <svg xmlns=\"${SVG_NS}\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"var(--rg-qualification-icon)\"\r\n    stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n      <circle cx=\"12\" cy=\"8\" r=\"7\"></circle>\r\n      <polyline points=\"8.21 13.89 7 23 12 20 17 23 15.79 13.88\"></polyline>\r\n    </svg>\r\n  `,\r\n\r\n  panelToggleClosed: `\r\n    <svg xmlns=\"${SVG_NS}\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\"\r\n    stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n      <path d=\"M4 19.5A2.5 2.5 0 0 1 6.5 17H20\"></path>\r\n      <path d=\"M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z\"></path>\r\n    </svg>\r\n  `,\r\n\r\n  panelToggleOpened: `\r\n    <svg xmlns=\"${SVG_NS}\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\"\r\n    stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n      <path d=\"M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z\"></path>\r\n      <path d=\"M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z\"></path>\r\n    </svg>\r\n  `,\r\n\r\n  broom: `\r\n    <svg xmlns=\"${SVG_NS}\" viewBox=\"0 0 24 24\" fill=\"none\"\r\n    stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n      <line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"8.5\"/>\r\n      <path d=\"M12 8.5c3.63,0 6.61,2.76 6.96,6.3 0.02,0.18 -0.03,0.35 -0.16,0.49 -0.12,0.14 -0.29,0.21 -0.47,0.21l-12.66 0c-0.18,0 -0.35,-0.07 -0.47,-0.21 -0.13,-0.14 -0.18,-0.31 -0.16,-0.49 0.35,-3.54 3.33,-6.3 6.96,-6.3z\"/>\r\n      <path d=\"M5 15.5l14 0 1.04 5.74c0.03,0.2 -0.02,0.38 -0.14,0.53 -0.13,0.15 -0.3,0.23 -0.49,0.23l-14.81 0c-0.2,0 -0.37,-0.08 -0.49,-0.23 -0.13,-0.15 -0.18,-0.33 -0.14,-0.53l1.03 -5.74z\"/>\r\n    </svg>\r\n  `,\r\n\r\n  checkmark: `\r\n    <svg xmlns=\"${SVG_NS}\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\"\r\n    stroke=\"#4caf50\" stroke-width=\"4\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n      <polyline points=\"20 6 9 17 4 12\"></polyline>\r\n    </svg>\r\n  `,\r\n\r\n  dragToggle: `\r\n    <svg xmlns=\"${SVG_NS}\" viewBox=\"0 0 24 24\" fill=\"none\"\r\n    stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n      <polyline points=\"5 9 2 12 5 15\"></polyline>\r\n      <polyline points=\"9 5 12 2 15 5\"></polyline>\r\n      <polyline points=\"15 19 12 22 9 19\"></polyline>\r\n      <polyline points=\"19 9 22 12 19 15\"></polyline>\r\n      <line x1=\"2\" y1=\"12\" x2=\"22\" y2=\"12\"></line>\r\n      <line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"22\"></line>\r\n    </svg>\r\n  `,\r\n\r\n  search: `\r\n    <svg xmlns=\"${SVG_NS}\" viewBox=\"0 0 24 24\" fill=\"none\"\r\n    stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n      <circle cx=\"11\" cy=\"11\" r=\"8\"></circle>\r\n      <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line>\r\n    </svg>\r\n  `,\r\n\r\n  info: `\r\n    <svg xmlns=\"${SVG_NS}\" viewBox=\"0 0 24 24\" fill=\"none\"\r\n    stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n      <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n      <line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"12\"></line>\r\n      <line x1=\"12\" y1=\"8\" x2=\"12.01\" y2=\"8\"></line>\r\n    </svg>\r\n  `,\r\n\r\n  help: `\r\n    <svg xmlns=\"${SVG_NS}\" viewBox=\"0 0 24 24\" fill=\"none\"\r\n    stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n      <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n      <path d=\"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3\"></path>\r\n      <line x1=\"12\" y1=\"17\" x2=\"12.01\" y2=\"17\"></line>\r\n    </svg>\r\n  `,\r\n\r\n  parameters: `\r\n    <svg xmlns=\"${SVG_NS}\" viewBox=\"0 0 24 24\" fill=\"none\"\r\n    stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n      <line x1=\"4\" y1=\"21\" x2=\"4\" y2=\"14\"></line>\r\n      <line x1=\"4\" y1=\"10\" x2=\"4\" y2=\"3\"></line>\r\n      <line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"12\"></line>\r\n      <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"3\"></line>\r\n      <line x1=\"20\" y1=\"21\" x2=\"20\" y2=\"16\"></line>\r\n      <line x1=\"20\" y1=\"12\" x2=\"20\" y2=\"3\"></line>\r\n      <line x1=\"1\" y1=\"14\" x2=\"7\" y2=\"14\"></line>\r\n      <line x1=\"9\" y1=\"8\" x2=\"15\" y2=\"8\"></line>\r\n      <line x1=\"17\" y1=\"16\" x2=\"23\" y2=\"16\"></line>\r\n    </svg>\r\n  `,\r\n\r\n  refresh: `\r\n    <svg xmlns=\"${SVG_NS}\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\"\r\n    stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n      <polyline points=\"1 4 1 10 7 10\"></polyline>\r\n      <polyline points=\"23 20 23 14 17 14\"></polyline>\r\n      <path d=\"M20.49 9A9 9 0 0 0 5.64 5.64L1 10m22 4l-4.64 4.36A9 9 0 0 1 3.51 15\"></path>\r\n    </svg>\r\n  `,\r\n\r\n  reset: `\r\n    <svg xmlns=\"${SVG_NS}\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\"\r\n    stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n      <path d=\"M21 4H8l-7 8 7 8h13a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z\"></path>\r\n      <line x1=\"18\" y1=\"9\" x2=\"12\" y2=\"15\"></line>\r\n      <line x1=\"12\" y1=\"9\" x2=\"18\" y2=\"15\"></line>\r\n    </svg>\r\n  `,\r\n\r\n  paused: `\r\n    <svg xmlns=\"${SVG_NS}\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n      <rect x=\"6\" y=\"4\" width=\"4\" height=\"16\"></rect>\r\n      <rect x=\"14\" y=\"4\" width=\"4\" height=\"16\"></rect>\r\n    </svg>\r\n  `,\r\n\r\n  playing: `\r\n    <svg xmlns=\"${SVG_NS}\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n      <polygon points=\"5 3 19 12 5 21 5 3\"></polygon>\r\n    </svg>\r\n  `,\r\n};\r\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/icons.js?");

/***/ }),

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _styles_styles_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./styles/styles.scss */ \"./src/styles/styles.scss\");\n/* harmony import */ var _font_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./font.js */ \"./src/font.js\");\n/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./definitions.js */ \"./src/definitions.js\");\n/* harmony import */ var _managers_ThemeManager_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./managers/ThemeManager.js */ \"./src/managers/ThemeManager.js\");\n/* harmony import */ var _managers_SettingsManager_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./managers/SettingsManager.js */ \"./src/managers/SettingsManager.js\");\n/* harmony import */ var _managers_GroupsManager_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./managers/GroupsManager.js */ \"./src/managers/GroupsManager.js\");\n/* harmony import */ var _managers_ViewManager_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./managers/ViewManager.js */ \"./src/managers/ViewManager.js\");\n/* harmony import */ var _managers_PageHandler_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./managers/PageHandler.js */ \"./src/managers/PageHandler.js\");\n/* harmony import */ var _managers_UIManager_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./managers/UIManager.js */ \"./src/managers/UIManager.js\");\n/* harmony import */ var _managers_GamesManager_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./managers/GamesManager.js */ \"./src/managers/GamesManager.js\");\n\r\n\r\n\r\n\r\n// Managers\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass LatestGamesManager {\r\n  constructor() {\r\n    this.initializeDefaults();\r\n    this.initializeManagers();\r\n    this.init();\r\n  }\r\n\r\n  initializeDefaults() {\r\n    Object.assign(this, _definitions_js__WEBPACK_IMPORTED_MODULE_2__.DEFAULTS);\r\n  }\r\n\r\n  initializeManagers() {\r\n    this.themeManager = new _managers_ThemeManager_js__WEBPACK_IMPORTED_MODULE_3__.ThemeManager(this);\r\n    this.settingsManager = new _managers_SettingsManager_js__WEBPACK_IMPORTED_MODULE_4__.SettingsManager(this);\r\n    this.groupsManager = new _managers_GroupsManager_js__WEBPACK_IMPORTED_MODULE_5__.GroupsManager(this);\r\n    this.viewManager = new _managers_ViewManager_js__WEBPACK_IMPORTED_MODULE_6__.ViewManager(this);\r\n    this.pageHandler = new _managers_PageHandler_js__WEBPACK_IMPORTED_MODULE_7__.PageHandler(this);\r\n    this.uiManager = new _managers_UIManager_js__WEBPACK_IMPORTED_MODULE_8__.UIManager(this);\r\n    this.gamesManager = new _managers_GamesManager_js__WEBPACK_IMPORTED_MODULE_9__.GamesManager(this);\r\n  }\r\n\r\n  init() {\r\n    this.settingsManager.loadSettings();\r\n    this.gamesManager.loadGameData();\r\n    this.groupsManager.initializeGroups();\r\n    this.uiManager.createHoverArea();\r\n    this.uiManager.createContainer();\r\n    this.alwaysVisiblePanel && this.uiManager.showContainer();\r\n    this.uiManager.createPanelToggleButton();\r\n    this.pageHandler.handlePageSpecificLogic();\r\n    this.exposeGlobalFunctions();\r\n    this.themeManager.applyTheme();\r\n  }\r\n\r\n  exposeGlobalFunctions() {\r\n    window.latestGamesManager = this;\r\n  }\r\n}\r\n\r\n(0,_font_js__WEBPACK_IMPORTED_MODULE_1__.setupFonts)();\r\n\r\n// Initialize the LatestGamesManager instance\r\nwindow.latestGamesManager ??= new LatestGamesManager();\r\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/main.js?");

/***/ }),

/***/ "./src/managers/GamesManager.js":
/*!**************************************!*\
  !*** ./src/managers/GamesManager.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GamesManager: () => (/* binding */ GamesManager)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"./src/utils.js\");\n/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../definitions.js */ \"./src/definitions.js\");\n/* harmony import */ var _icons_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../icons.js */ \"./src/icons.js\");\n\r\n\r\n\r\nclass GamesManager {\r\n  constructor(mainManager) {\r\n    this.mainManager = mainManager;\r\n  }\r\n\r\n  // Game parsing and generation utilities\r\n  parseGameParams(span, descText) {\r\n    const gameType = span.className.split('-').pop();\r\n    const vocName = gameType === 'voc' ? span.textContent.replace(/[«»]/g, '') : '';\r\n\r\n    let vocId = '';\r\n    if (gameType === 'voc') {\r\n      const vocLink = span.querySelector('a');\r\n      if (vocLink) {\r\n        const match = vocLink.href.match(/vocs\\/(\\d+)/);\r\n        vocId = match ? parseInt(match[1], 10) : '';\r\n      }\r\n    }\r\n\r\n    let type = 'normal';\r\n    if (/одиночный/.test(descText)) {\r\n      type = 'practice';\r\n    } else if (/друзьями/.test(descText)) {\r\n      type = 'private';\r\n    }\r\n\r\n    let levelFrom = 1;\r\n    let levelTo = 9;\r\n    const levelMatches = descText.match(/для (\\S+)–(\\S+),/);\r\n    if (levelMatches) {\r\n      levelFrom = _definitions_js__WEBPACK_IMPORTED_MODULE_1__.ranksMap[levelMatches[1]] || 1;\r\n      levelTo = _definitions_js__WEBPACK_IMPORTED_MODULE_1__.ranksMap[levelMatches[2]] || 9;\r\n    }\r\n\r\n    const timeoutMatches = descText.match(/таймаут\\s(\\d+)\\s(сек|мин)/);\r\n    const timeout = timeoutMatches\r\n      ? (timeoutMatches[2] === 'сек' ? parseInt(timeoutMatches[1], 10) : parseInt(timeoutMatches[1], 10) * 60)\r\n      : 60;\r\n\r\n    const qualification = /квалификация/.test(descText) ? 1 : 0;\r\n\r\n    const result = {\r\n      gametype: gameType,\r\n      vocName,\r\n      vocId,\r\n      type,\r\n      level_from: levelFrom,\r\n      level_to: levelTo,\r\n      timeout,\r\n      qual: qualification,\r\n      premium_abra: 0\r\n    };\r\n\r\n    return result;\r\n  }\r\n\r\n  generateGameName(game, opts = {}) {\r\n    const gameType = _definitions_js__WEBPACK_IMPORTED_MODULE_1__.gameTypes[game.params.gametype];\r\n    const { vocName, timeout, type: visibility, level_from, level_to, qual } = game.params;\r\n\r\n    // Determine if we need to show a state icon (paused/playing)\r\n    let stateIcon = '';\r\n    if (opts && opts.stateIcon) {\r\n      stateIcon = opts.stateIcon;\r\n    }\r\n\r\n    const nameSpan = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createElement)('span', {\r\n      className: `latest-game-name gametype-${game.params.gametype}`\r\n    });\r\n    nameSpan.appendChild(document.createTextNode(vocName === '' ? gameType : `«${vocName}»`));\r\n    if (stateIcon) {\r\n      const iconSpan = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createElement)('span', {\r\n        className: 'latest-game-state-icon',\r\n        innerHTML: stateIcon\r\n      });\r\n      nameSpan.appendChild(iconSpan);\r\n    }\r\n\r\n    // Only create the description span if the setting is enabled\r\n    let descSpan = null;\r\n    if (this.mainManager.showButtonDescriptions) {\r\n      descSpan = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createElement)('span', {\r\n        className: 'latest-game-description'\r\n      });\r\n    }\r\n\r\n    const qualSpan = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createElement)('span', {\r\n      className: 'latest-game-qual',\r\n      innerHTML: qual ? _icons_js__WEBPACK_IMPORTED_MODULE_2__.icons.qualification : ''\r\n    });\r\n\r\n    let levelText = '';\r\n    if (level_from !== 1 || level_to !== 9) {\r\n      const levelFromName = _definitions_js__WEBPACK_IMPORTED_MODULE_1__.ranks[level_from - 1];\r\n      const levelToName = _definitions_js__WEBPACK_IMPORTED_MODULE_1__.ranks[level_to - 1];\r\n      levelText = ` ${levelFromName} - ${levelToName}`;\r\n    }\r\n\r\n    const levelsSpan = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createElement)('span', {\r\n      className: 'latest-game-levels',\r\n      textContent: levelText\r\n    });\r\n\r\n    if (descSpan) {\r\n      descSpan.textContent = `${_definitions_js__WEBPACK_IMPORTED_MODULE_1__.visibilities[visibility]}, ${timeout} секунд`;\r\n      descSpan.appendChild(qualSpan);\r\n      if (levelText) {\r\n        descSpan.appendChild(levelsSpan);\r\n      }\r\n    }\r\n\r\n    const container = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createElement)('div');\r\n    container.appendChild(nameSpan);\r\n    if (descSpan) container.appendChild(descSpan);\r\n\r\n    return container.innerHTML;\r\n  }\r\n\r\n  generateGameLink(game) {\r\n    const { gametype, vocId, type, level_from, level_to, timeout, qual } = game.params;\r\n\r\n    const params = new URLSearchParams({\r\n      gametype,\r\n      type,\r\n      timeout: timeout.toString(),\r\n      submit: '1'\r\n    });\r\n\r\n    // Only add level_from and level_to for normal type\r\n    if (type !== 'practice' && type !== 'private') {\r\n      params.set('level_from', level_from.toString());\r\n      params.set('level_to', level_to.toString());\r\n    }\r\n\r\n    if (vocId !== '') {\r\n      params.set('voc', vocId);\r\n    }\r\n\r\n    if (qual) {\r\n      params.set('qual', '1');\r\n    }\r\n\r\n    return `${location.protocol}//klavogonki.ru/create/?${params.toString()}`;\r\n  }\r\n\r\n  // Game data management methods\r\n  loadGameData() {\r\n    try {\r\n      let data = localStorage.getItem('latestGamesData');\r\n      if (data) {\r\n        data = JSON.parse(data);\r\n        if (Array.isArray(data)) {\r\n          const groupId = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.generateUniqueId)(data);\r\n          const groups = [{ id: groupId, title: 'Группа-1', games: data }];\r\n          const currentGroupId = groups[0].id;\r\n          this.mainManager.groupsManager.setGroups(groups, currentGroupId);\r\n          this.latestGamesData = {};\r\n        } else if (data && Array.isArray(data.groups)) {\r\n          this.mainManager.groupsManager.setGroups(data.groups, data.currentGroupId);\r\n          this.latestGamesData = { previousGameId: data.previousGameId, latestGroupAddedGameId: data.latestGroupAddedGameId };\r\n        } else {\r\n          this.mainManager.groupsManager.setGroups([], null);\r\n          this.latestGamesData = {};\r\n        }\r\n      } else {\r\n        this.mainManager.groupsManager.setGroups([], null);\r\n        this.latestGamesData = {};\r\n      }\r\n      this.migrateOldGameData();\r\n      this.assignGameIds();\r\n    } catch (error) {\r\n      console.warn('Could not load game data from localStorage:', error);\r\n      this.mainManager.groupsManager.setGroups([], null);\r\n      this.latestGamesData = {};\r\n    }\r\n  }\r\n\r\n  saveGameData() {\r\n    try {\r\n      const data = {\r\n        groups: this.mainManager.groupsManager.groups,\r\n        currentGroupId: this.mainManager.groupsManager.currentGroupId,\r\n        previousGameId: this.latestGamesData?.previousGameId,\r\n        latestGroupAddedGameId: this.latestGamesData?.latestGroupAddedGameId\r\n      };\r\n      localStorage.setItem('latestGamesData', JSON.stringify(data));\r\n    } catch (error) {\r\n      console.warn('Could not save game data to localStorage:', error);\r\n    }\r\n  }\r\n\r\n  migrateOldGameData() {\r\n    this.mainManager.groupsManager.groups.forEach(group => {\r\n      group.games = group.games.map(game => {\r\n        if (game.params.qual === 'on' || game.params.qual === '') {\r\n          game.params.qual = game.params.qual === 'on' ? 1 : 0;\r\n        }\r\n        return game;\r\n      });\r\n    });\r\n  }\r\n\r\n  assignGameIds() {\r\n    // Collect all existing ids to avoid duplicates\r\n    const allGameIds = new Set();\r\n    this.mainManager.groupsManager.groups.forEach(group => {\r\n      group.games.forEach(game => {\r\n        if (game.id) allGameIds.add(game.id);\r\n      });\r\n    });\r\n    this.mainManager.groupsManager.groups.forEach(group => {\r\n      group.games = group.games.map(game => {\r\n        // Only assign a new id if missing or invalid\r\n        if (!game.id || game.id === -1) {\r\n          const newId = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.generateUniqueId)(this.mainManager.groupsManager.groups);\r\n          allGameIds.add(newId);\r\n          return { ...game, id: newId };\r\n        } else {\r\n          // Keep existing id if valid\r\n          allGameIds.add(game.id);\r\n          return game;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  updateGameOrderFromDOM() {\r\n    const currentGroup = this.mainManager.groupsManager.getCurrentGroup(\r\n      this.mainManager.groupsManager.groups,\r\n      this.mainManager.groupsManager.currentGroupId\r\n    );\r\n    if (!currentGroup) return;\r\n\r\n    const gameElements = Array.from(document.querySelectorAll('#latest-games .latest-game'));\r\n    currentGroup.games = gameElements.map(element => {\r\n      const id = element.id.replace('latest-game-', '');\r\n      return currentGroup.games.find(g => g.id === id);\r\n    }).filter(game => game !== undefined);\r\n\r\n    this.saveGameData();\r\n  }\r\n\r\n  findGameIndex(id) {\r\n    for (const group of this.mainManager.groupsManager.groups) {\r\n      const index = group.games.findIndex(game => game.id == id);\r\n      if (index !== -1) return { group, index };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  findGameById(id) {\r\n    for (const group of this.mainManager.groupsManager.groups) {\r\n      const game = group.games.find(g => g.id === id);\r\n      if (game) return game;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  deleteGame(id) {\r\n    const result = this.findGameIndex(id);\r\n    if (!result) return null;\r\n\r\n    const { group, index } = result;\r\n    const deletedGame = group.games.splice(index, 1)[0];\r\n\r\n    this.assignGameIds();\r\n    this.saveGameData();\r\n    this.mainManager.uiManager.refreshContainer();\r\n\r\n    return deletedGame;\r\n  }\r\n\r\n  pinGame(id) {\r\n    const result = this.findGameIndex(id);\r\n    if (!result) return;\r\n\r\n    const { group, index } = result;\r\n    const game = group.games[index];\r\n    game.pin = game.pin ? 0 : 1;\r\n\r\n    // Sort games: pinned (pin=1) first, unpinned (pin=0) after\r\n    group.games.sort((a, b) => b.pin - a.pin);\r\n\r\n    this.assignGameIds();\r\n    this.saveGameData();\r\n    this.mainManager.uiManager.refreshContainer();\r\n  }\r\n\r\n  changeGameCount(delta) {\r\n    if (delta < 0 && this.mainManager.maxGameCount > 0) {\r\n      this.mainManager.maxGameCount--;\r\n    } else if (delta > 0) {\r\n      this.mainManager.maxGameCount++;\r\n    }\r\n\r\n    this.mainManager.uiManager.updateGameCountDisplay();\r\n    this.mainManager.settingsManager.saveSettings();\r\n    this.mainManager.uiManager.refreshContainer();\r\n  }\r\n\r\n  getPreviousGameId() {\r\n    return this.latestGamesData && this.latestGamesData.previousGameId\r\n      ? this.latestGamesData.previousGameId\r\n      : null;\r\n  }\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/managers/GamesManager.js?");

/***/ }),

/***/ "./src/managers/GroupsManager.js":
/*!***************************************!*\
  !*** ./src/managers/GroupsManager.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GroupsManager: () => (/* binding */ GroupsManager)\n/* harmony export */ });\n/* harmony import */ var _icons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../icons.js */ \"./src/icons.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ \"./src/utils.js\");\n/* harmony import */ var _tooltip_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tooltip.js */ \"./src/tooltip.js\");\n\r\n\r\n\r\n\r\nclass GroupsManager {\r\n  constructor(main) {\r\n    this.main = main;\r\n    this.groups = [];\r\n    this.currentGroupId = null;\r\n    this.groupViewMode = 'tabs';\r\n  }\r\n\r\n  createGroup(title) {\r\n    let groupTitle;\r\n    if (title && title.trim()) {\r\n      groupTitle = title.trim();\r\n    } else {\r\n      let counter = 1;\r\n      let candidate;\r\n      do {\r\n        candidate = `Группа-${counter++}`;\r\n      } while (this.groups.some(g => g.title === candidate));\r\n      groupTitle = candidate;\r\n    }\r\n    return {\r\n      id: (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.generateUniqueId)(this.groups),\r\n      title: groupTitle,\r\n      games: []\r\n    };\r\n  }\r\n\r\n  // Rename group by ID (replaces renameGroup from groups.js)\r\n  renameGroup(groupId, newTitle) {\r\n    const group = this.groups.find(g => g.id === groupId);\r\n    if (group) group.title = newTitle;\r\n  }\r\n\r\n  // Remove group by ID (replaces removeGroup from groups.js)\r\n  removeGroup(groupId) {\r\n    const index = this.groups.findIndex(g => g.id === groupId);\r\n    if (index !== -1) this.groups.splice(index, 1);\r\n    return this.groups;\r\n  }\r\n\r\n  // Initialize groups data (uses createGroup for default group)\r\n  initializeGroups() {\r\n    if (this.groups.length === 0) {\r\n      const defaultGroup = this.createGroup();\r\n      this.groups = [defaultGroup];\r\n      this.currentGroupId = defaultGroup.id;\r\n    } else if (!this.currentGroupId || !this.groups.some(g => g.id === this.currentGroupId)) {\r\n      this.currentGroupId = this.groups[0].id;\r\n    }\r\n  }\r\n\r\n  getCurrentGroup() {\r\n    return this.groups.find(g => g.id === this.currentGroupId) || null;\r\n  }\r\n\r\n  // Set groups data\r\n  setGroups(groups, currentGroupId) {\r\n    this.groups = groups;\r\n    this.currentGroupId = currentGroupId;\r\n  }\r\n\r\n  // Set group view mode\r\n  setGroupViewMode(mode) {\r\n    this.groupViewMode = mode;\r\n  }\r\n\r\n  // Get group view mode\r\n  getGroupViewMode() {\r\n    return this.groupViewMode;\r\n  }\r\n\r\n  // Create group view toggle button\r\n  createGroupViewToggle() {\r\n    const toggleButton = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', {\r\n      className: 'group-view-toggle control-button'\r\n    });\r\n    toggleButton.innerHTML = this.groupViewMode === 'tabs' ? _icons_js__WEBPACK_IMPORTED_MODULE_0__.icons.wrap : _icons_js__WEBPACK_IMPORTED_MODULE_0__.icons.scroll;\r\n    (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_2__.createCustomTooltip)(toggleButton, this.groupViewMode === 'tabs'\r\n      ? 'Переключить в единый вид со всеми играми'\r\n      : 'Переключить в режим вкладок по группам');\r\n\r\n    toggleButton.addEventListener('click', () => {\r\n      this.groupViewMode = this.groupViewMode === 'tabs' ? 'unified' : 'tabs';\r\n      this.main.settingsManager.saveSettings();\r\n      this.updateGroupViewToggle(toggleButton);\r\n      this.main.uiManager.refreshContainer();\r\n    });\r\n    return toggleButton;\r\n  }\r\n\r\n  // Update group view toggle button\r\n  updateGroupViewToggle(toggleButton) {\r\n    toggleButton.innerHTML = this.groupViewMode === 'tabs' ? _icons_js__WEBPACK_IMPORTED_MODULE_0__.icons.wrap : _icons_js__WEBPACK_IMPORTED_MODULE_0__.icons.scroll;\r\n    (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_2__.createCustomTooltip)(toggleButton, this.groupViewMode === 'tabs'\r\n      ? 'Переключить в единый вид со всеми играми'\r\n      : 'Переключить в режим вкладок по группам');\r\n  }\r\n\r\n  // Move group in specified direction\r\n  moveGroup(direction) {\r\n    const currentIndex = this.groups.findIndex(group => group.id === this.currentGroupId);\r\n    if (currentIndex === -1) return;\r\n\r\n    const newIndex = currentIndex + direction;\r\n    if (newIndex < 0 || newIndex >= this.groups.length) return;\r\n\r\n    const temp = this.groups[currentIndex];\r\n    this.groups[currentIndex] = this.groups[newIndex];\r\n    this.groups[newIndex] = temp;\r\n\r\n    this.main.gamesManager.saveGameData();\r\n    this.main.uiManager.refreshContainer();\r\n  }\r\n\r\n  // Update group control states (enable/disable move buttons)\r\n  updateGroupControlStates() {\r\n    const moveLeftButton = document.querySelector('.move-group-left');\r\n    const moveRightButton = document.querySelector('.move-group-right');\r\n    if (moveLeftButton && moveRightButton) {\r\n      const currentIndex = this.groups.findIndex(group => group.id === this.currentGroupId);\r\n      const isFirst = currentIndex === 0;\r\n      const isLast = currentIndex === this.groups.length - 1;\r\n      moveLeftButton.classList.toggle('latest-games-disabled', isFirst);\r\n      moveRightButton.classList.toggle('latest-games-disabled', isLast);\r\n    }\r\n  }\r\n\r\n  // Create group header (used in unified view)\r\n  createGroupHeader(group) {\r\n    const header = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', {\r\n      className: this.getGroupClass(group, 'group-header'),\r\n      textContent: group.title,\r\n      dataset: { groupId: group.id }\r\n    });\r\n    header.addEventListener('click', () => this.selectGroup(group.id));\r\n    return header;\r\n  }\r\n\r\n  // Helper to create a group tab element\r\n  createGroupTab(group) {\r\n    const tab = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createElement)('span', {\r\n      className: this.getGroupClass(group, 'group-tab'),\r\n      textContent: group.title,\r\n      dataset: { groupId: group.id }\r\n    });\r\n    tab.addEventListener('click', () => this.selectGroup(group.id));\r\n    return tab;\r\n  }\r\n\r\n  // Helper to get group class string for tab/header\r\n  getGroupClass(group, baseClass = '') {\r\n    const isActive = group.id === this.currentGroupId;\r\n    const previousGameId = this.main.gamesManager.latestGamesData?.previousGameId;\r\n    const hasPreviousGame = group.games.some(game => game.id === previousGameId);\r\n    return `${baseClass}${isActive ? ' active' : ''}${hasPreviousGame && !isActive ? ' previous-game-group' : ''}`.trim();\r\n  }\r\n\r\n  // Create the entire groups container with controls and tabs\r\n  createGroupsContainer() {\r\n    const groupsContainer = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { id: 'latest-games-groups' });\r\n\r\n    // Create group controls (persistent across both view modes)\r\n    const groupControls = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', {\r\n      className: 'group-controls' + (this.groupViewMode === 'unified' ? ' unified-controls' : '')\r\n    });\r\n\r\n    const addButton = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createElement)('span', {\r\n      className: 'add-group control-button',\r\n      innerHTML: _icons_js__WEBPACK_IMPORTED_MODULE_0__.icons.addGroup\r\n    });\r\n    (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_2__.createCustomTooltip)(addButton, 'Добавить группу');\r\n    addButton.addEventListener('click', () => this.addGroup());\r\n\r\n    const renameButton = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createElement)('span', {\r\n      className: 'rename-group control-button',\r\n      innerHTML: _icons_js__WEBPACK_IMPORTED_MODULE_0__.icons.renameGroup\r\n    });\r\n    (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_2__.createCustomTooltip)(renameButton, 'Переименовать группу');\r\n    renameButton.addEventListener('click', () => this.renameActiveGroup());\r\n\r\n    const removeButton = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createElement)('span', {\r\n      className: 'remove-group control-button',\r\n      innerHTML: _icons_js__WEBPACK_IMPORTED_MODULE_0__.icons.trashNothing\r\n    });\r\n    (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_2__.createCustomTooltip)(removeButton, `\r\n      [Клик] Удалить группу и сделать предыдущую активной\r\n      [Shift + Клик] Удалить группу и сделать следующую активной\r\n    `);\r\n    removeButton.addEventListener('click', (e) => this.removeActiveGroup(e));\r\n\r\n    const groupViewToggle = this.createGroupViewToggle();\r\n\r\n    const moveLeftButton = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createElement)('span', {\r\n      className: 'move-group-left control-button',\r\n      innerHTML: _icons_js__WEBPACK_IMPORTED_MODULE_0__.icons.decrease\r\n    });\r\n    (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_2__.createCustomTooltip)(moveLeftButton, 'Переместить вкладку назад');\r\n    moveLeftButton.addEventListener('click', () => {\r\n      if (!moveLeftButton.classList.contains('latest-games-disabled')) {\r\n        this.moveGroup(-1);\r\n      }\r\n    });\r\n\r\n    const moveRightButton = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createElement)('span', {\r\n      className: 'move-group-right control-button',\r\n      innerHTML: _icons_js__WEBPACK_IMPORTED_MODULE_0__.icons.increase\r\n    });\r\n    (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_2__.createCustomTooltip)(moveRightButton, 'Переместить вкладку вперёд');\r\n    moveRightButton.addEventListener('click', () => {\r\n      if (!moveRightButton.classList.contains('latest-games-disabled')) {\r\n        this.moveGroup(1);\r\n      }\r\n    });\r\n\r\n    groupControls.append(addButton, renameButton, removeButton, groupViewToggle, moveLeftButton, moveRightButton);\r\n\r\n    groupsContainer.appendChild(groupControls);\r\n\r\n    // Create tabs-container for group tabs only\r\n    const tabsContainer = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { className: 'tabs-container' });\r\n    this.groups.forEach(group => {\r\n      const tab = this.createGroupTab(group);\r\n      tabsContainer.appendChild(tab);\r\n    });\r\n\r\n    // Hide tabs-container in unified view\r\n    if (this.groupViewMode === 'unified') {\r\n      tabsContainer.classList.add('latest-games-hidden');\r\n    }\r\n\r\n    groupsContainer.appendChild(tabsContainer);\r\n    return groupsContainer;\r\n  }\r\n\r\n  // Select a group by ID\r\n  selectGroup(id) {\r\n    if (this.groups.some(group => group.id === id)) {\r\n      this.currentGroupId = id;\r\n      this.main.gamesManager.saveGameData();\r\n      this.updateActiveGroup();\r\n      this.main.uiManager.refreshContainer();\r\n    }\r\n  }\r\n\r\n  // Update active group visual states\r\n  updateActiveGroup() {\r\n    // Update group headers (only present in unified mode)\r\n    document.querySelectorAll('.group-header').forEach(header =>\r\n      header.classList.toggle('active', header.dataset.groupId === this.currentGroupId)\r\n    );\r\n    // Update tabs (present in both modes, but hidden in unified)\r\n    document.querySelectorAll('.group-tab').forEach(tab =>\r\n      tab.classList.toggle('active', tab.dataset.groupId === this.currentGroupId)\r\n    );\r\n  }\r\n\r\n  // Add a new group\r\n  addGroup() {\r\n    const title = prompt('Введите название группы:');\r\n    if (title === null) return; // User cancelled prompt\r\n    const newGroup = this.createGroup(title?.trim() || null);\r\n    this.groups.push(newGroup);\r\n    this.currentGroupId = newGroup.id;\r\n    this.main.gamesManager.saveGameData();\r\n    this.main.uiManager.refreshContainer();\r\n  }\r\n\r\n  // Rename the active group\r\n  renameActiveGroup() {\r\n    const activeGroup = this.getCurrentGroup();\r\n    const newTitle = prompt('Введите новое название группы:', activeGroup?.title)?.trim();\r\n    if (newTitle) {\r\n      this.renameGroup(this.currentGroupId, newTitle);\r\n      this.main.gamesManager.saveGameData();\r\n      this.main.uiManager.refreshContainer();\r\n    }\r\n  }\r\n\r\n  // Remove the active group\r\n  removeActiveGroup(event) {\r\n    if (this.groups.length <= 1) {\r\n      alert('Нельзя удалить последнюю группу.');\r\n      return;\r\n    }\r\n    const currentIdx = this.groups.findIndex(g => g.id === this.currentGroupId);\r\n    this.removeGroup(this.currentGroupId);\r\n    let newIdx;\r\n    // Make next group active\r\n    if (event && event.shiftKey) {\r\n      newIdx = currentIdx >= this.groups.length ? this.groups.length - 1 : currentIdx;\r\n      // make previous group active\r\n    } else {\r\n      newIdx = currentIdx - 1;\r\n      if (newIdx < 0) newIdx = 0;\r\n    }\r\n    this.currentGroupId = this.groups[newIdx].id;\r\n    this.main.gamesManager.saveGameData();\r\n    this.main.uiManager.refreshContainer();\r\n  }\r\n\r\n  // Refresh groups container in the DOM\r\n  refreshGroupsContainer() {\r\n    const groupsContainer = document.getElementById('latest-games-groups');\r\n    if (groupsContainer) {\r\n      // Update groupControls class based on view mode\r\n      const groupControls = groupsContainer.querySelector('.group-controls');\r\n      if (groupControls) {\r\n        groupControls.className = 'group-controls' + (this.groupViewMode === 'unified' ? ' unified-controls' : '');\r\n      }\r\n\r\n      // Update tabs-container\r\n      const tabsContainer = groupsContainer.querySelector('.tabs-container');\r\n      if (tabsContainer) {\r\n        tabsContainer.innerHTML = ''; // Clear existing tabs\r\n        if (this.groupViewMode === 'tabs') {\r\n          // Populate tabs and show tabs-container\r\n          this.groups.forEach(group => {\r\n            const tab = this.createGroupTab(group);\r\n            tabsContainer.appendChild(tab);\r\n          });\r\n          tabsContainer.classList.remove('latest-games-hidden');\r\n        } else {\r\n          // Hide tabs-container in unified mode\r\n          tabsContainer.classList.add('latest-games-hidden');\r\n        }\r\n      }\r\n    }\r\n    this.updateGroupControlStates();\r\n  }\r\n\r\n  isCyrillic(char) {\r\n    const code = char.charCodeAt(0);\r\n    return (code >= 1040 && code <= 1103) || code === 1025 || code === 1105;\r\n  }\r\n\r\n  compareGameNames(a, b) {\r\n    const nameA = this.main.gamesManager.generateGameName(a).toLowerCase();\r\n    const nameB = this.main.gamesManager.generateGameName(b).toLowerCase();\r\n    const isCyrillicA = this.isCyrillic(nameA[0]);\r\n    const isCyrillicB = this.isCyrillic(nameB[0]);\r\n    if (isCyrillicA && !isCyrillicB) return -1;\r\n    if (!isCyrillicA && isCyrillicB) return 1;\r\n    return nameA.localeCompare(nameB, 'ru');\r\n  }\r\n\r\n  // Sort games in active group alphabetically\r\n  sortActiveGroupGames() {\r\n    const activeGroup = this.getCurrentGroup();\r\n    if (!activeGroup) return;\r\n    const pinnedGames = activeGroup.games.filter(game => game.pin);\r\n    const unpinnedGames = activeGroup.games.filter(game => !game.pin);\r\n    pinnedGames.sort((a, b) => this.compareGameNames(a, b));\r\n    unpinnedGames.sort((a, b) => this.compareGameNames(a, b));\r\n    activeGroup.games = [...pinnedGames, ...unpinnedGames];\r\n    this.main.gamesManager.saveGameData();\r\n    this.main.uiManager.refreshContainer();\r\n  }\r\n\r\n  // Get pinned game count for active group\r\n  getPinnedGameCount() {\r\n    const activeGroup = this.getCurrentGroup();\r\n    return activeGroup ? activeGroup.games.filter(game => game.pin).length : 0;\r\n  }\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/managers/GroupsManager.js?");

/***/ }),

/***/ "./src/managers/PageHandler.js":
/*!*************************************!*\
  !*** ./src/managers/PageHandler.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PageHandler: () => (/* binding */ PageHandler)\n/* harmony export */ });\n/* harmony import */ var _vocabularyChecker_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vocabularyChecker.js */ \"./src/vocabularyChecker.js\");\n/* harmony import */ var _vocabularyCreation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../vocabularyCreation.js */ \"./src/vocabularyCreation.js\");\n/* harmony import */ var _vocabularyParser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../vocabularyParser.js */ \"./src/vocabularyParser.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils.js */ \"./src/utils.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nclass PageHandler {\r\n  constructor(main) {\r\n    this.main = main;\r\n    // Initialize the games data container\r\n    this.gamesDataContainer = null;\r\n    // Initialize sleep indicators and timers\r\n    this.replaySleep = null;\r\n    this.startSleep = null;\r\n    // Create indicators for start and replay actions\r\n    this.startIndicator = null;\r\n    this.replayIndicator = null;\r\n    // Initialize timers for start and replay actions\r\n    this.startTimer = null;\r\n    this.replayTimer = null;\r\n    // Flag to track if hovering over latest games container\r\n    this.isHoveringLatestGames = false;\r\n    this.remainingReplayCount = this.main.replayNextGameCount;\r\n  } // End of constructor\r\n\r\n  createGamesDataContainer() {\r\n    const container = document.createElement('div');\r\n    container.className = 'games-data-container';\r\n    document.body.appendChild(container);\r\n    this.gamesDataContainer = container;\r\n    this.createRemainingCountIndicator();\r\n  }\r\n\r\n  createRemainingCountIndicator() {\r\n    // No need to create indicator if replay more is not enabled\r\n    if (!this.main.shouldReplayMore) return;\r\n    // Ensure the games data container exists\r\n    if (!this.gamesDataContainer) this.createGamesDataContainer();\r\n\r\n    const indicator = document.createElement('div');\r\n    indicator.className = 'remaining-count-indicator';\r\n    indicator.textContent = `${this.main.remainingReplayCount}`;\r\n    this.gamesDataContainer.appendChild(indicator);\r\n  } // End of createRemainingCountIndicator\r\n\r\n  createSleepIndicator(type, totalMs) {\r\n    // Ensure the games data container exists\r\n    if (!this.gamesDataContainer) this.createGamesDataContainer();\r\n\r\n    const indicator = document.createElement('div');\r\n    indicator.className = type === 'start' ? 'sleep-start-indicator' : 'sleep-replay-indicator';\r\n    this.gamesDataContainer.insertBefore(indicator, this.gamesDataContainer.firstChild);\r\n\r\n    let remainingMs = totalMs;\r\n    const startTime = Date.now();\r\n\r\n    const updateTimer = () => {\r\n      const elapsed = Date.now() - startTime;\r\n      remainingMs = Math.max(0, totalMs - elapsed);\r\n\r\n      const seconds = Math.floor(remainingMs / 1000);\r\n      const milliseconds = Math.floor((remainingMs % 1000) / 10); // Show 2 decimal places\r\n      indicator.textContent = `${seconds.toString().padStart(2, '0')}:${milliseconds.toString().padStart(2, '0')}`;\r\n\r\n      if (remainingMs > 0) {\r\n        const timerId = requestAnimationFrame(updateTimer);\r\n        if (type === 'start') {\r\n          this.startTimer = timerId;\r\n        } else {\r\n          this.replayTimer = timerId;\r\n        }\r\n      }\r\n    };\r\n\r\n    updateTimer();\r\n    return indicator;\r\n  } // End of createSleepIndicator\r\n\r\n  removeSleepIndicator(type) {\r\n    if (type === 'start') {\r\n      if (this.startTimer) {\r\n        cancelAnimationFrame(this.startTimer);\r\n        this.startTimer = null;\r\n      }\r\n      if (this.startIndicator) {\r\n        this.startIndicator.remove();\r\n        this.startIndicator = null;\r\n      }\r\n    } else if (type === 'replay') {\r\n      if (this.replayTimer) {\r\n        cancelAnimationFrame(this.replayTimer);\r\n        this.replayTimer = null;\r\n      }\r\n      if (this.replayIndicator) {\r\n        this.replayIndicator.remove();\r\n        this.replayIndicator = null;\r\n      }\r\n    }\r\n  } // End of removeSleepIndicator\r\n\r\n  handlePageSpecificLogic() {\r\n    const { href } = location;\r\n    if (/https?:\\/\\/klavogonki\\.ru\\/g\\/\\?gmid=/.test(href)) {\r\n      this.setupHoverListeners();\r\n\r\n      const startObserver = new MutationObserver(() => {\r\n        const gameDescription = document.querySelector('#gamedesc');\r\n        if (gameDescription && gameDescription.textContent) {\r\n          startObserver.disconnect();\r\n          this.saveCurrentGameParams();\r\n          this.handleStartAction();\r\n        }\r\n      });\r\n      startObserver.observe(document.body, { childList: true, subtree: true });\r\n\r\n      // Choose which element to observe based on replayWithoutWaiting setting\r\n      const elementToObserve = this.main.replayWithoutWaiting\r\n        ? document.querySelector('#typeblock #bookinfo')\r\n        : document.querySelector('#status-inner #finished');\r\n\r\n      if (elementToObserve) {\r\n        const finishObserver = new MutationObserver(() => {\r\n          finishObserver.disconnect();\r\n          this.handleReplayAction();\r\n        });\r\n        finishObserver.observe(elementToObserve, { attributes: true });\r\n      }\r\n    }\r\n\r\n    // Highlight vocabularies and attach vocabulary creation popup on supported pages\r\n    if ((0,_vocabularyCreation_js__WEBPACK_IMPORTED_MODULE_1__.isVocabularyCreationSupported)()) {\r\n      (0,_vocabularyChecker_js__WEBPACK_IMPORTED_MODULE_0__.highlightExistingVocabularies)(this.main.groupsManager.groups);\r\n      (0,_vocabularyCreation_js__WEBPACK_IMPORTED_MODULE_1__.attachVocabularyCreation)(this.main.groupsManager.groups, this.main);\r\n      (0,_vocabularyParser_js__WEBPACK_IMPORTED_MODULE_2__.attachVocabularyParser)();\r\n    }\r\n  } // End of handlePageSpecificLogic\r\n\r\n  setupHoverListeners() {\r\n    const latestGamesContainer = document.querySelector('#latest-games-container');\r\n    if (latestGamesContainer) {\r\n      latestGamesContainer.addEventListener('mouseenter', () => {\r\n        this.isHoveringLatestGames = true;\r\n        // ONLY cancel replay sleep when hovering - start should be unaffected\r\n        if (this.replaySleep && typeof this.replaySleep.cancel === 'function') {\r\n          this.replaySleep.cancel();\r\n          this.replaySleep = null;\r\n          this.removeSleepIndicator('replay');\r\n        }\r\n      });\r\n\r\n      latestGamesContainer.addEventListener('mouseleave', () => {\r\n        this.isHoveringLatestGames = false;\r\n        // If not hovering, re-check and handle replay action\r\n        this.handleReplayAction();\r\n      });\r\n    }\r\n  } // End of setupHoverListeners\r\n\r\n  saveCurrentGameParams() {\r\n    const gameDesc = document.querySelector('#gamedesc');\r\n    if (!gameDesc) throw new Error('#gamedesc element not found.');\r\n    const span = gameDesc.querySelector('span');\r\n    if (!span) throw new Error('#gamedesc span element not found.');\r\n    const descText = gameDesc.textContent;\r\n    if (/соревнование/.test(descText) || !this.main.maxGameCount || this.main.shouldAutoSave === false) return false;\r\n    const gameParams = this.main.gamesManager.parseGameParams(span, descText);\r\n    const gameParamsString = JSON.stringify(gameParams);\r\n    const currentGroup = this.main.groupsManager.getCurrentGroup(this.main.groupsManager.groups, this.main.groupsManager.currentGroupId);\r\n    if (!currentGroup) return;\r\n    // Check if a game with the same parameters already exists (pinned or unpinned)\r\n    const gameExists = currentGroup.games.some(game => JSON.stringify(game.params) === gameParamsString);\r\n    if (gameExists) {\r\n      return;\r\n    }\r\n    // Create new game object (unpinned)\r\n    const newGame = { params: gameParams, id: (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.generateUniqueId)(this.main.groupsManager.groups), pin: 0 };\r\n    // Insert after pinned games\r\n    const pinnedCount = currentGroup.games.filter(g => g.pin).length;\r\n    currentGroup.games.splice(pinnedCount, 0, newGame);\r\n    // Enforce the limit: remove excess unpinned games from the end\r\n    const maxGamesToKeep = pinnedCount + this.main.maxGameCount;\r\n    if (currentGroup.games.length > maxGamesToKeep) {\r\n      currentGroup.games.splice(maxGamesToKeep, currentGroup.games.length - maxGamesToKeep);\r\n    }\r\n    this.main.gamesManager.assignGameIds();\r\n    this.main.gamesManager.saveGameData();\r\n  } // End of saveCurrentGameParams\r\n\r\n  handleStartAction() {\r\n    // Handle auto-start - NEVER affected by hover state\r\n    if (this.main.shouldStart) {\r\n      const pausedElement = document.querySelector('#status-inner #paused');\r\n      if (pausedElement && pausedElement.style.display !== 'none') {\r\n        if (typeof game !== 'undefined' && game.hostStart) {\r\n          // Remove existing start indicator if any\r\n          this.removeSleepIndicator('start');\r\n\r\n          this.startIndicator = this.createSleepIndicator('start', this.main.startDelay);\r\n          this.startSleep = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.sleep)(this.main.startDelay);\r\n          this.startSleep.then(() => {\r\n            this.removeSleepIndicator('start');\r\n            game.hostStart();\r\n          }).catch(() => {\r\n            this.removeSleepIndicator('start');\r\n            this.startSleep = null;\r\n          });\r\n        }\r\n      }\r\n    }\r\n  } // End of handleStartAction\r\n\r\n  // Create and start the next game from the current group\r\n  replayNextGame() {\r\n    const groupsManager = this.main.groupsManager; // Access the groups manager from main\r\n    const gamesManager = this.main.gamesManager; // Access the games manager from main\r\n    const currentGroup = groupsManager.getCurrentGroup(groupsManager.groups, groupsManager.currentGroupId);\r\n    // Ensure currentGroup is valid and has games\r\n    if (!currentGroup || !Array.isArray(currentGroup.games) || currentGroup.games.length === 0) return;\r\n    // Find the next game based on the previousGameId\r\n    const prevGameId = gamesManager.latestGamesData?.previousGameId;\r\n    // If no previousGameId, start from the first game\r\n    let idx = currentGroup.games.findIndex(g => g.id === prevGameId);\r\n    // If latest game already played set idx to first game\r\n    if (idx === -1) idx = 0;\r\n    // If idx is the last game, loop to the first game\r\n    else idx = (idx + 1) % currentGroup.games.length;\r\n    // Ensure the next game exists\r\n    const nextGame = currentGroup.games[idx];\r\n    if (!nextGame) return;\r\n    // Update latestGamesData with the next game ID\r\n    gamesManager.latestGamesData.previousGameId = nextGame.id;\r\n    gamesManager.saveGameData();\r\n    // Create new race (not replay)\r\n    const url = gamesManager.generateGameLink(nextGame);\r\n    window.location.href = url;\r\n  } // End of replayNextGame\r\n\r\n  handleReplayAction() {\r\n    // Handle auto-replay - affected by hover state\r\n    if (this.main.shouldReplay) {\r\n      // Check the appropriate element based on replayWithoutWaiting setting\r\n      const elementToCheck = this.main.replayWithoutWaiting\r\n        ? document.querySelector('#typeblock #bookinfo')\r\n        : document.querySelector('#status-inner #finished');\r\n\r\n      if (elementToCheck && elementToCheck.style.display !== 'none') {\r\n        const gameIdMatch = location.href.match(/gmid=(\\d+)/);\r\n        if (gameIdMatch) {\r\n          const gameId = gameIdMatch[1];\r\n\r\n          // Only start replay timer if not hovering over latest games container\r\n          if (!this.isHoveringLatestGames) {\r\n            // Remove existing replay indicator if any\r\n            this.removeSleepIndicator('replay');\r\n\r\n            this.replayIndicator = this.createSleepIndicator('replay', this.main.replayDelay);\r\n            this.replaySleep = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.sleep)(this.main.replayDelay);\r\n            this.replaySleep.then(() => {\r\n              this.removeSleepIndicator('replay');\r\n\r\n              // —— NEW: “replay more” repeat-count logic ——\r\n              if (this.main.shouldReplayMore) {\r\n                // if there are still repeats left, decrement and replay the same game\r\n                if (this.main.remainingReplayCount > 1) {\r\n                  this.main.remainingReplayCount--;\r\n                  this.main.settingsManager.saveSettings();\r\n                  window.location.href = `https://klavogonki.ru/g/${gameId}.replay`;\r\n                } else {\r\n                  // counter exhausted → reset it and then advance (or replay) as usual\r\n                  this.main.remainingReplayCount = this.main.replayNextGameCount;\r\n                  this.main.settingsManager.saveSettings();\r\n                  if (this.main.replayNextGame) {\r\n                    this.replayNextGame();\r\n                  } else {\r\n                    window.location.href = `https://klavogonki.ru/g/${gameId}.replay`;\r\n                  }\r\n                }\r\n              } else {\r\n                // Default behavior: either replay next game or same\r\n                if (this.main.replayNextGame) {\r\n                  this.replayNextGame();\r\n                } else {\r\n                  window.location.href = `https://klavogonki.ru/g/${gameId}.replay`;\r\n                }\r\n              }\r\n              // —— end “replay more” logic ——\r\n            }).catch(() => {\r\n              // Promise was cancelled, just clean up\r\n              this.removeSleepIndicator('replay');\r\n              this.replaySleep = null;\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  } // End of handleReplayAction\r\n\r\n}\r\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/managers/PageHandler.js?");

/***/ }),

/***/ "./src/managers/SettingsManager.js":
/*!*****************************************!*\
  !*** ./src/managers/SettingsManager.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SettingsManager: () => (/* binding */ SettingsManager)\n/* harmony export */ });\nclass SettingsManager {\r\n  constructor(main) {\r\n    this.main = main;\r\n  }\r\n\r\n  loadSettings() {\r\n    try {\r\n      const settings = JSON.parse(localStorage.getItem('latestGamesSettings') || '{}');\r\n\r\n      this.main.maxGameCount = settings.maxGameCount ?? this.main.maxGameCount;\r\n      this.main.currentTheme = settings.currentTheme ?? this.main.currentTheme;\r\n      this.main.displayMode = settings.displayMode ?? this.main.displayMode;\r\n      this.main.groupsManager.groupViewMode = settings.groupViewMode ?? this.main.groupsManager.groupViewMode;\r\n      this.main.previousScrollPosition = settings.previousScrollPosition ?? this.main.previousScrollPosition;\r\n      this.main.enableDragging = settings.enableDragging ?? this.main.enableDragging;\r\n      this.main.shouldAutoSave = settings.shouldAutoSave ?? this.main.shouldAutoSave;\r\n      this.main.hidePanelDelay = settings.hidePanelDelay ?? this.main.hidePanelDelay;\r\n      this.main.shouldStart = settings.shouldStart ?? this.main.shouldStart;\r\n      this.main.startDelay = settings.startDelay ?? this.main.startDelay;\r\n      this.main.shouldReplay = settings.shouldReplay ?? this.main.shouldReplay;\r\n      this.main.replayDelay = settings.replayDelay ?? this.main.replayDelay;\r\n      this.main.replayNextGame = settings.replayNextGame ?? this.main.replayNextGame;\r\n      this.main.shouldReplayMore = settings.shouldReplayMore ?? this.main.shouldReplayMore;\r\n      this.main.replayNextGameCount = settings.replayNextGameCount ?? this.main.replayNextGameCount;\r\n\r\n      // Replay more counter for the next game\r\n      this.main.remainingReplayCount =\r\n        settings.remainingReplayCount != null\r\n          ? settings.remainingReplayCount\r\n          : this.main.replayNextGameCount;\r\n\r\n      this.main.replayWithoutWaiting = settings.replayWithoutWaiting ?? this.main.replayWithoutWaiting;\r\n      this.main.showSearchBox = settings.showSearchBox ?? this.main.showSearchBox;\r\n      this.main.showButtonDescriptions = settings.showButtonDescriptions ?? this.main.showButtonDescriptions;\r\n      this.main.showHelpTooltips = settings.showHelpTooltips ?? this.main.showHelpTooltips;\r\n\r\n      // Handle panelYPosition and alwaysVisiblePanel as objects (per-page)\r\n      if (settings.panelYPosition && typeof settings.panelYPosition === 'object') {\r\n        this.main.panelYPosition = {\r\n          ...this.main.panelYPosition,\r\n          ...settings.panelYPosition\r\n        };\r\n      }\r\n\r\n      // Handle panelWidth and panelHeight as objects (per-page)\r\n      if (settings.panelWidths && typeof settings.panelWidths === 'object') {\r\n        this.main.panelWidths = {\r\n          ...this.main.panelWidths,\r\n          ...settings.panelWidths\r\n        };\r\n      }\r\n\r\n      if (settings.panelHeights && typeof settings.panelHeights === 'object') {\r\n        this.main.panelHeights = {\r\n          ...this.main.panelHeights,\r\n          ...settings.panelHeights\r\n        };\r\n      }\r\n\r\n      // Ensure alwaysVisiblePanel is an object and merge settings\r\n      if (settings.alwaysVisiblePanel && typeof settings.alwaysVisiblePanel === 'object') {\r\n        this.main.alwaysVisiblePanel = {\r\n          ...this.main.alwaysVisiblePanel,\r\n          ...settings.alwaysVisiblePanel\r\n        };\r\n      }\r\n\r\n    } catch (error) {\r\n      console.warn('Could not load settings from localStorage:', error);\r\n    }\r\n  }\r\n\r\n  saveSettings() {\r\n    try {\r\n      const settings = {\r\n        maxGameCount: this.main.maxGameCount,\r\n        currentTheme: this.main.currentTheme,\r\n        displayMode: this.main.displayMode,\r\n        groupViewMode: this.main.groupsManager.groupViewMode,\r\n        previousScrollPosition: this.main.previousScrollPosition,\r\n        panelWidths: this.main.panelWidths,\r\n        panelHeights: this.main.panelHeights,\r\n        panelYPosition: this.main.panelYPosition,\r\n        enableDragging: this.main.enableDragging,\r\n        shouldAutoSave: this.main.shouldAutoSave,\r\n        hidePanelDelay: this.main.hidePanelDelay,\r\n        shouldStart: this.main.shouldStart,\r\n        startDelay: this.main.startDelay,\r\n        shouldReplay: this.main.shouldReplay,\r\n        replayDelay: this.main.replayDelay,\r\n        replayNextGame: this.main.replayNextGame,\r\n        shouldReplayMore: this.main.shouldReplayMore,\r\n        replayNextGameCount: this.main.replayNextGameCount,\r\n        remainingReplayCount: this.main.remainingReplayCount,\r\n        replayWithoutWaiting: this.main.replayWithoutWaiting,\r\n        showSearchBox: this.main.showSearchBox,\r\n        showButtonDescriptions: this.main.showButtonDescriptions,\r\n        showHelpTooltips: this.main.showHelpTooltips,\r\n        alwaysVisiblePanel: this.main.alwaysVisiblePanel\r\n      };\r\n\r\n      localStorage.setItem('latestGamesSettings', JSON.stringify(settings));\r\n    } catch (error) {\r\n      console.warn('Could not save settings to localStorage:', error);\r\n    }\r\n  }\r\n\r\n  async importSettings(main) {\r\n    const input = document.createElement('input');\r\n    input.type = 'file';\r\n    input.accept = '.json,application/json';\r\n    input.style.display = 'none';\r\n    input.onchange = async (e) => {\r\n      const file = e.target.files[0];\r\n      if (!file) return;\r\n      try {\r\n        const text = await file.text();\r\n        const data = JSON.parse(text);\r\n        if (typeof data === 'object' && data !== null) {\r\n          if (data.latestGamesSettings) localStorage.setItem('latestGamesSettings', JSON.stringify(data.latestGamesSettings));\r\n          if (data.latestGamesData) localStorage.setItem('latestGamesData', JSON.stringify(data.latestGamesData));\r\n          main.settingsManager.loadSettings();\r\n          main.gamesManager.loadGameData();\r\n          main.uiManager.refreshContainer();\r\n          main.themeManager.applyTheme();\r\n        } else {\r\n          alert('Файл не содержит валидный JSON настроек.');\r\n        }\r\n      } catch (err) {\r\n        alert('Ошибка при импорте: ' + err);\r\n      }\r\n    };\r\n    document.body.appendChild(input);\r\n    input.click();\r\n    setTimeout(() => input.remove(), 1000);\r\n  }\r\n\r\n  exportSettings(main) {\r\n    const all = {\r\n      latestGamesSettings: JSON.parse(localStorage.getItem('latestGamesSettings') || '{}'),\r\n      latestGamesData: { groups: main.groupsManager.groups, currentGroupId: main.groupsManager.currentGroupId }\r\n    };\r\n    const blob = new Blob([JSON.stringify(all, null, 2)], { type: 'application/json' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = 'kg-latest-games-settings.json';\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    setTimeout(() => {\r\n      URL.revokeObjectURL(url);\r\n      a.remove();\r\n    }, 1000);\r\n  }\r\n\r\n  removeAllSettings(main) {\r\n    localStorage.removeItem('latestGamesSettings');\r\n    localStorage.removeItem('latestGamesData');\r\n    main.groupsManager.groups = [main.groupsManager.createGroup('Группа-1')];\r\n    main.groupsManager.currentGroupId = main.groupsManager.groups[0].id;\r\n    main.gamesManager.saveGameData();\r\n    main.uiManager.refreshContainer();\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/managers/SettingsManager.js?");

/***/ }),

/***/ "./src/managers/ThemeManager.js":
/*!**************************************!*\
  !*** ./src/managers/ThemeManager.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ThemeManager: () => (/* binding */ ThemeManager)\n/* harmony export */ });\n/* harmony import */ var _icons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../icons.js */ \"./src/icons.js\");\n/* harmony import */ var _tooltip_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tooltip.js */ \"./src/tooltip.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ \"./src/utils.js\");\n\r\n\r\n\r\n\r\nclass ThemeManager {\r\n  constructor(main) {\r\n    this.main = main;\r\n  }\r\n\r\n  applyTheme() {\r\n    document.documentElement.classList.remove('latest-games-light-theme', 'latest-games-dark-theme');\r\n    document.documentElement.classList.add(\r\n      this.main.currentTheme === 'light' ? 'latest-games-light-theme' : 'latest-games-dark-theme'\r\n    );\r\n    this.updateThemeIcon();\r\n  }\r\n\r\n  updateThemeIcon() {\r\n    const toggleThemeButton = document.querySelector('#latest-games-container .theme-toggle');\r\n    if (toggleThemeButton) {\r\n      toggleThemeButton.innerHTML = this.main.currentTheme === 'light' ? _icons_js__WEBPACK_IMPORTED_MODULE_0__.icons.sun : _icons_js__WEBPACK_IMPORTED_MODULE_0__.icons.moon;\r\n    }\r\n  }\r\n\r\n  toggleTheme(button) {\r\n    this.main.currentTheme = this.main.currentTheme === 'light' ? 'dark' : 'light';\r\n    (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_1__.createCustomTooltip)(button, `Изменить тему на ${this.main.currentTheme === 'light' ? 'тёмную' : 'светлую'}`);\r\n    this.main.settingsManager.saveSettings();\r\n    this.applyTheme();\r\n  }\r\n\r\n  createThemeToggle() {\r\n    const toggleThemeButton = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.createElement)('div', {\r\n      className: 'theme-toggle control-button'\r\n    });\r\n    toggleThemeButton.innerHTML = this.main.currentTheme === 'light' ? _icons_js__WEBPACK_IMPORTED_MODULE_0__.icons.sun : _icons_js__WEBPACK_IMPORTED_MODULE_0__.icons.moon;\r\n    toggleThemeButton.addEventListener('click', () => this.toggleTheme(toggleThemeButton));\r\n    (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_1__.createCustomTooltip)(toggleThemeButton, `Изменить тему на ${this.main.currentTheme === 'light' ? 'тёмную' : 'светлую'}`);\r\n    return toggleThemeButton;\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/managers/ThemeManager.js?");

/***/ }),

/***/ "./src/managers/UIHelpers/controls.js":
/*!********************************************!*\
  !*** ./src/managers/UIHelpers/controls.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createControls: () => (/* binding */ createControls)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils.js */ \"./src/utils.js\");\n/* harmony import */ var _tooltip_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tooltip.js */ \"./src/tooltip.js\");\n/* harmony import */ var _icons_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../icons.js */ \"./src/icons.js\");\n/* harmony import */ var _search_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./search.js */ \"./src/managers/UIHelpers/search.js\");\n/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../definitions.js */ \"./src/definitions.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nfunction createControls(main) {\r\n  const controlsContainer = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'latest-games-controls' });\r\n\r\n  const controlsLimiter = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'controls-limiter' });\r\n  const controlsButtons = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'controls-buttons' });\r\n  controlsContainer.append(controlsLimiter, controlsButtons);\r\n\r\n  // Create the options section with buttons to adjust game count\r\n  const options = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createElement)('span', { id: 'latest-games-options' });\r\n  controlsLimiter.appendChild(options);\r\n\r\n  const decreaseBtn = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createElement)('span', {\r\n    id: 'latest-games-count-dec',\r\n    className: 'control-button',\r\n    innerHTML: _icons_js__WEBPACK_IMPORTED_MODULE_2__.icons.decrease\r\n  });\r\n  (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_1__.createCustomTooltip)(decreaseBtn, 'Уменьшить количество сохраняемых игр');\r\n\r\n  const countDisplay = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createElement)('span', {\r\n    id: 'latest-games-count',\r\n    className: main.shouldAutoSave === false ? 'latest-games-disabled' : '',\r\n    textContent: main.maxGameCount.toString()\r\n  });\r\n  (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_1__.createCustomTooltip)(countDisplay,\r\n    main.shouldAutoSave\r\n      ? 'Автосохранение включено'\r\n      : 'Автосохранение отключено'\r\n  );\r\n\r\n  countDisplay.addEventListener('click', () => {\r\n    main.shouldAutoSave = !main.shouldAutoSave;\r\n    main.uiManager.updateGameCountDisplay();\r\n    main.settingsManager.saveSettings();\r\n    main.uiManager.refreshContainer();\r\n  });\r\n\r\n  const increaseBtn = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createElement)('span', {\r\n    id: 'latest-games-count-inc',\r\n    className: 'control-button',\r\n    innerHTML: _icons_js__WEBPACK_IMPORTED_MODULE_2__.icons.increase\r\n  });\r\n  (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_1__.createCustomTooltip)(increaseBtn, 'Увеличить количество сохраняемых игр');\r\n\r\n  decreaseBtn.addEventListener('click', () => main.gamesManager.changeGameCount(-1));\r\n  increaseBtn.addEventListener('click', () => main.gamesManager.changeGameCount(1));\r\n\r\n  options.append(decreaseBtn, countDisplay, increaseBtn);\r\n\r\n  // Function to update the tooltip text based on button state\r\n  const updateTooltip = (button, isEnabled, texts, delay) => {\r\n    // texts: { click, shift, ctrl, alt }\r\n    const clickText = typeof texts.click === 'function' ? texts.click(isEnabled) : texts.click;\r\n    const shiftText = typeof texts.shift === 'function' ? texts.shift(isEnabled) : texts.shift;\r\n    const ctrlText = texts.ctrl ? (typeof texts.ctrl === 'function' ? texts.ctrl(isEnabled) : texts.ctrl) : '';\r\n    const altText = texts.alt ? (typeof texts.alt === 'function' ? texts.alt(isEnabled) : texts.alt) : '';\r\n    (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_1__.createCustomTooltip)(button, `\r\n      [Клик] ${clickText}\r\n      [Shift + Клик] ${shiftText}${delay ? ` (${delay} мс)` : ''}\r\n      ${ctrlText ? `[Ctrl + Клик] ${ctrlText}` : ''}\r\n      ${altText ? `[Alt + Клик] ${altText}` : ''}\r\n    `);\r\n  };\r\n\r\n  const setupControlButton = (button, context, property, delayProperty, texts) => {\r\n    const isInitiallyEnabled = context[property];\r\n    button.classList.toggle('latest-games-disabled', !isInitiallyEnabled);\r\n    updateTooltip(button, isInitiallyEnabled, texts, context[delayProperty]);\r\n\r\n    button.onclick = (e) => {\r\n      if (e.ctrlKey && button === replayBtn) {\r\n        main.replayNextGame = !main.replayNextGame;\r\n        main.settingsManager.saveSettings();\r\n        button.classList.toggle('replay-next-game', main.replayNextGame);\r\n        button.innerHTML = getReplayIcon();\r\n        updateTooltip(button, context[property], texts, context[delayProperty]);\r\n        return;\r\n      }\r\n      if (e.altKey && button === replayBtn) {\r\n        main.replayWithoutWaiting = !main.replayWithoutWaiting;\r\n        main.settingsManager.saveSettings();\r\n        button.classList.toggle('replay-without-waiting', main.replayWithoutWaiting);\r\n        button.innerHTML = getReplayIcon();\r\n        updateTooltip(button, context[property], texts, context[delayProperty]);\r\n        return;\r\n      }\r\n      const shiftText = typeof texts.shift === 'function' ? texts.shift(context[property]) : texts.shift;\r\n      if (e.shiftKey) {\r\n        const newDelay = prompt(shiftText, \"\");\r\n        if (newDelay !== null) {\r\n          const delayValue = parseInt(newDelay, 10);\r\n          if (!isNaN(delayValue) && delayValue >= 0) {\r\n            context[delayProperty] = delayValue;\r\n            main.settingsManager.saveSettings();\r\n            updateTooltip(button, context[property], texts, delayValue);\r\n          } else {\r\n            alert(texts.delayErrorText);\r\n          }\r\n        }\r\n      } else {\r\n        context[property] = !context[property];\r\n        main.settingsManager.saveSettings();\r\n        button.classList.toggle('latest-games-disabled', !context[property]);\r\n        updateTooltip(button, context[property], texts, context[delayProperty]);\r\n      }\r\n    };\r\n  };\r\n\r\n  // Add refresh IDs button\r\n  const refreshIdsBtn = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createElement)('span', {\r\n    className: 'latest-games-refresh-ids control-button',\r\n    innerHTML: _icons_js__WEBPACK_IMPORTED_MODULE_2__.icons.refresh\r\n  });\r\n  (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_1__.createCustomTooltip)(refreshIdsBtn, 'Сгенерировать новые уникальные ID для всех групп и игр');\r\n  refreshIdsBtn.addEventListener('click', () => {\r\n    if (!confirm('Вы уверены, что хотите сгенерировать новые уникальные ID для всех групп и игр? Это действие нельзя отменить.')) return;\r\n\r\n    // Save previous group and game IDs\r\n    const previousGroupId = main.groupsManager.currentGroupId;\r\n    const previousGameId = main.gamesManager.latestGamesData?.previousGameId;\r\n\r\n    // Store old IDs before regeneration\r\n    main.groupsManager.groups.forEach(group => {\r\n      group._oldId = group.id;\r\n      group.games.forEach(game => {\r\n        game._oldId = game.id;\r\n      });\r\n    });\r\n\r\n    // Regenerate all IDs\r\n    main.groupsManager.groups.forEach(group => {\r\n      group.id = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.generateUniqueId)(main.groupsManager.groups);\r\n      group.games.forEach(game => {\r\n        game.id = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.generateUniqueId)(main.groupsManager.groups);\r\n      });\r\n    });\r\n\r\n    // Restore currentGroupId if possible\r\n    if (previousGroupId) {\r\n      const foundGroup = main.groupsManager.groups.find(g => g._oldId === previousGroupId);\r\n      if (foundGroup) main.groupsManager.currentGroupId = foundGroup.id;\r\n    }\r\n    // Restore previousGameId if possible\r\n    if (previousGameId) {\r\n      for (const group of main.groupsManager.groups) {\r\n        const found = group.games.find(g => g._oldId === previousGameId);\r\n        if (found) {\r\n          main.gamesManager.latestGamesData.previousGameId = found.id;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    // Remove temporary _oldId properties\r\n    main.groupsManager.groups.forEach(group => {\r\n      delete group._oldId;\r\n      group.games.forEach(game => delete game._oldId);\r\n    });\r\n    main.gamesManager.saveGameData();\r\n    main.uiManager.refreshContainer();\r\n    alert('Все ID для групп и игр были обновлены!');\r\n  });\r\n\r\n  // Add button to reset panel individual page settings to defaults\r\n  const resetButton = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createElement)('span', {\r\n    className: 'latest-games-reset-panels control-button',\r\n    innerHTML: _icons_js__WEBPACK_IMPORTED_MODULE_2__.icons.reset\r\n  });\r\n\r\n  (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_1__.createCustomTooltip)(resetButton, 'Сбросить настройки панели на значения по умолчанию');\r\n\r\n  resetButton.addEventListener('click', () => {\r\n    if (!confirm('Вы уверены, что хотите сбросить настройки панели на значения по умолчанию? Это действие нельзя отменить.')) return;\r\n    resetPanelSettings(main);\r\n  });\r\n\r\n  function resetPanelSettings(main) {\r\n    // Reset panel-specific settings to defaults\r\n    main.panelWidths = { ..._definitions_js__WEBPACK_IMPORTED_MODULE_4__.DEFAULTS.panelWidths };\r\n    main.panelHeights = { ..._definitions_js__WEBPACK_IMPORTED_MODULE_4__.DEFAULTS.panelHeights };\r\n    main.panelYPosition = { ..._definitions_js__WEBPACK_IMPORTED_MODULE_4__.DEFAULTS.panelYPosition };\r\n    main.alwaysVisiblePanel = { ..._definitions_js__WEBPACK_IMPORTED_MODULE_4__.DEFAULTS.alwaysVisiblePanel };\r\n\r\n    // Save the updated settings\r\n    main.settingsManager.saveSettings();\r\n\r\n    // If there's a UI refresh method, call it to apply changes immediately\r\n    if (main.uiManager && main.uiManager.refreshContainer) {\r\n      main.uiManager.refreshContainer();\r\n    }\r\n  }\r\n\r\n  // Add button to toggle auto-start of games\r\n  const playBtn = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createElement)('span', {\r\n    className: 'latest-games-play control-button',\r\n    innerHTML: _icons_js__WEBPACK_IMPORTED_MODULE_2__.icons.play\r\n  });\r\n  setupControlButton(playBtn, main, 'shouldStart', 'startDelay', {\r\n    click: (isEnabled) => isEnabled\r\n      ? 'Отключить автозапуск игры'\r\n      : 'Включить автозапуск игры',\r\n    shift: () => 'Изменить задержку запуска в миллисекундах',\r\n    delayErrorText: 'Пожалуйста, введите корректное значение задержки запуска.'\r\n  });\r\n\r\n  // Add button to toggle replay in game\r\n  const getReplayIcon = () => main.replayWithoutWaiting ? _icons_js__WEBPACK_IMPORTED_MODULE_2__.icons.replayImmediately : _icons_js__WEBPACK_IMPORTED_MODULE_2__.icons.replay;\r\n  const replayBtn = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createElement)('span', {\r\n    className: 'latest-games-replay control-button'\r\n      + (main.replayNextGame ? ' replay-next-game' : '')\r\n      + (main.replayWithoutWaiting ? ' replay-without-waiting' : ''),\r\n    innerHTML: getReplayIcon()\r\n  });\r\n  setupControlButton(replayBtn, main, 'shouldReplay', 'replayDelay', {\r\n    click: (isEnabled) => isEnabled\r\n      ? 'Отключить автоповтор игры'\r\n      : 'Включить автоповтор игры',\r\n    shift: () => 'Изменить задержку автосоздания в миллисекундах:',\r\n    ctrl: () => main.replayNextGame ? 'Режим создания следующей игры' : 'Режим повтора текущей игры',\r\n    alt: () => main.replayWithoutWaiting ? 'Режим создания без ожидания игроков' : 'Режим создания с ожиданием игроков',\r\n    delayErrorText: 'Пожалуйста, введите корректное значение задержки автоповтора.'\r\n  });\r\n\r\n  // Add button to toggle replay more functionality with count setting\r\n  const replayMoreBtn = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createElement)('span', {\r\n    className: 'latest-games-replay-more control-button' + (main.shouldReplayMore === false ? ' latest-games-disabled' : ''),\r\n    innerHTML: _icons_js__WEBPACK_IMPORTED_MODULE_2__.icons.replayMore\r\n  });\r\n\r\n  const updateReplayMoreTooltip = () => {\r\n    (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_1__.createCustomTooltip)(replayMoreBtn, `\r\n      [Клик] ${main.shouldReplayMore ? 'Отключить многократный повтор игры' : 'Включить многократный повтор игры'}\r\n      [Shift + Клик] Изменить количество повторов (${main.replayNextGameCount})\r\n    `);\r\n  };\r\n\r\n  updateReplayMoreTooltip();\r\n\r\n  replayMoreBtn.onclick = (e) => {\r\n    if (e.shiftKey) {\r\n      let countInput;\r\n      do {\r\n        countInput = prompt('Введите количество повторов игры:', main.replayNextGameCount.toString());\r\n        if (countInput === null) return; // User cancelled\r\n        \r\n        const countValue = parseInt(countInput, 10);\r\n        if (!isNaN(countValue) && countValue >= 1) {\r\n          main.replayNextGameCount = countValue;\r\n          main.settingsManager.saveSettings();\r\n          updateReplayMoreTooltip();\r\n          return;\r\n        } else {\r\n          alert('Пожалуйста, введите корректное число (больше или равно 1).');\r\n        }\r\n      } while (true);\r\n    } else {\r\n      main.shouldReplayMore = !main.shouldReplayMore;\r\n      main.settingsManager.saveSettings();\r\n      replayMoreBtn.classList.toggle('latest-games-disabled', !main.shouldReplayMore);\r\n      updateReplayMoreTooltip();\r\n    }\r\n  };\r\n\r\n  // Add button to pin all games in the current group or all groups\r\n  const pinAllBtn = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createElement)('span', {\r\n    className: 'latest-games-pinall control-button',\r\n    innerHTML: _icons_js__WEBPACK_IMPORTED_MODULE_2__.icons.pin\r\n  });\r\n  (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_1__.createCustomTooltip)(pinAllBtn, `\r\n    [Клик] Закрепить все игры в текущей группе\r\n    [Shift + Клик] Закрепить все игры во всех группах\r\n  `);\r\n  pinAllBtn.onclick = (e) => {\r\n    if (e.shiftKey) {\r\n      main.groupsManager.groups.forEach(group => group.games.forEach(game => game.pin = 1));\r\n    } else {\r\n      const currentGroup = main.groupsManager.getCurrentGroup(main.groupsManager.groups, main.groupsManager.currentGroupId);\r\n      if (currentGroup) {\r\n        currentGroup.games.forEach(game => game.pin = 1);\r\n      }\r\n    }\r\n    main.gamesManager.saveGameData();\r\n    main.uiManager.refreshContainer();\r\n  };\r\n\r\n  // Add button to unpin all games in the current group or all groups\r\n  const unpinAllBtn = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createElement)('span', {\r\n    className: 'latest-games-unpinall control-button',\r\n    innerHTML: _icons_js__WEBPACK_IMPORTED_MODULE_2__.icons.unpin\r\n  });\r\n  (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_1__.createCustomTooltip)(unpinAllBtn, `\r\n    [Клик] Открепить все игры в текущей группе\r\n    [Shift + Клик] Открепить все игры во всех группах\r\n  `);\r\n  unpinAllBtn.onclick = (e) => {\r\n    if (e.shiftKey) {\r\n      main.groupsManager.groups.forEach(group => group.games.forEach(game => game.pin = 0));\r\n    } else {\r\n      const currentGroup = main.groupsManager.getCurrentGroup(main.groupsManager.groups, main.groupsManager.currentGroupId);\r\n      if (currentGroup) {\r\n        currentGroup.games.forEach(game => game.pin = 0);\r\n      }\r\n    }\r\n    main.gamesManager.saveGameData();\r\n    main.uiManager.refreshContainer();\r\n  };\r\n\r\n  // Add button to sort games in the current group alphabetically\r\n  const sortBtn = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createElement)('span', {\r\n    className: 'latest-games-sort control-button',\r\n    innerHTML: _icons_js__WEBPACK_IMPORTED_MODULE_2__.icons.sort\r\n  });\r\n  (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_1__.createCustomTooltip)(sortBtn, 'Сортировать игры в текущей группе по алфавиту');\r\n  sortBtn.addEventListener('click', () => main.groupsManager.sortActiveGroupGames());\r\n\r\n  // Add button to import settings from a JSON file\r\n  const importBtn = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createElement)('span', {\r\n    className: 'latest-games-import control-button',\r\n    innerHTML: _icons_js__WEBPACK_IMPORTED_MODULE_2__.icons.import\r\n  });\r\n  (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_1__.createCustomTooltip)(importBtn, 'Импортировать настройки из JSON файла');\r\n  importBtn.onclick = () => main.settingsManager.importSettings(main);\r\n\r\n  // Add button to export all settings to a JSON file\r\n  const exportBtn = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createElement)('span', {\r\n    className: 'latest-games-export control-button',\r\n    innerHTML: _icons_js__WEBPACK_IMPORTED_MODULE_2__.icons.export\r\n  });\r\n  (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_1__.createCustomTooltip)(exportBtn, 'Экспортировать все настройки в JSON файл');\r\n  exportBtn.onclick = () => main.settingsManager.exportSettings(main);\r\n\r\n  // Add button to remove all settings\r\n  const removeAllBtn = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createElement)('span', {\r\n    className: 'latest-games-removeall control-button',\r\n    innerHTML: _icons_js__WEBPACK_IMPORTED_MODULE_2__.icons.trashNothing\r\n  });\r\n  (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_1__.createCustomTooltip)(removeAllBtn, 'Удалить все настройки');\r\n  removeAllBtn.onclick = () => main.settingsManager.removeAllSettings(main);\r\n\r\n  // Add button to remove all unpinned games in the current group or all groups\r\n  const removeUnpinnedBtn = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createElement)('span', {\r\n    className: 'latest-games-remove-unpinned control-button',\r\n    innerHTML: _icons_js__WEBPACK_IMPORTED_MODULE_2__.icons.broom\r\n  });\r\n  (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_1__.createCustomTooltip)(removeUnpinnedBtn, `\r\n    [Клик] Удалить все незакреплённые игры в текущей группе\r\n    [Shift + Клик] Удалить все незакреплённые игры во всех группах\r\n  `);\r\n  removeUnpinnedBtn.onclick = (e) => {\r\n    if (e.shiftKey) {\r\n      main.groupsManager.groups.forEach(group => {\r\n        group.games = group.games.filter(game => game.pin);\r\n      });\r\n    } else {\r\n      const currentGroup = main.groupsManager.getCurrentGroup(main.groupsManager.groups, main.groupsManager.currentGroupId);\r\n      if (currentGroup) {\r\n        currentGroup.games = currentGroup.games.filter(game => game.pin);\r\n      }\r\n    }\r\n    main.gamesManager.saveGameData();\r\n    main.uiManager.refreshContainer();\r\n  };\r\n\r\n  // Add drag toggle button\r\n  const dragToggleBtn = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createElement)('span', {\r\n    className: 'latest-games-drag-toggle control-button',\r\n    innerHTML: _icons_js__WEBPACK_IMPORTED_MODULE_2__.icons.dragToggle\r\n  });\r\n  (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_1__.createCustomTooltip)(\r\n    dragToggleBtn,\r\n    main.enableDragging\r\n      ? 'Перетаскивание включено'\r\n      : 'Перетаскивание отключено'\r\n  );\r\n  dragToggleBtn.classList.toggle('latest-games-disabled', !main.enableDragging);\r\n  dragToggleBtn.onclick = () => {\r\n    main.enableDragging = !main.enableDragging;\r\n    main.settingsManager.saveSettings();\r\n    main.uiManager.refreshContainer();\r\n    (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_1__.createCustomTooltip)(\r\n      dragToggleBtn,\r\n      main.enableDragging\r\n        ? 'Перетаскивание включено'\r\n        : 'Перетаскивание отключено'\r\n    );\r\n    dragToggleBtn.classList.toggle('latest-games-disabled', !main.enableDragging);\r\n  };\r\n\r\n  // Add description toggle button\r\n  const descToggleBtn = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createElement)('span', {\r\n    className: 'latest-games-desc-toggle control-button',\r\n    innerHTML: _icons_js__WEBPACK_IMPORTED_MODULE_2__.icons.info\r\n  });\r\n  (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_1__.createCustomTooltip)(\r\n    descToggleBtn,\r\n    main.showButtonDescriptions\r\n      ? 'Скрыть описания кнопок'\r\n      : 'Показать описания кнопок'\r\n  );\r\n  descToggleBtn.classList.toggle('latest-games-disabled', !main.showButtonDescriptions);\r\n\r\n  descToggleBtn.onclick = () => {\r\n    main.showButtonDescriptions = !main.showButtonDescriptions;\r\n    main.settingsManager.saveSettings();\r\n    descToggleBtn.classList.toggle('latest-games-disabled', !main.showButtonDescriptions);\r\n    (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_1__.createCustomTooltip)(\r\n      descToggleBtn,\r\n      main.showButtonDescriptions\r\n        ? 'Скрыть описания кнопок'\r\n        : 'Показать описания кнопок'\r\n    );\r\n    // Refresh the container so that game descriptions are re-rendered according to the setting\r\n    main.uiManager.refreshContainer();\r\n    // Scroll controls to bottom after refresh to ensure all buttons are accessible\r\n    setTimeout(() => {\r\n      const controlsArea = document.querySelector('.latest-games-controls');\r\n      if (controlsArea) controlsArea.scrollTop = controlsArea.scrollHeight;\r\n    }, 0);\r\n  };\r\n\r\n  // Add help toggle button\r\n  const helpToggleBtn = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createElement)('span', {\r\n    className: 'latest-games-help-toggle control-button' + (main.showHelpTooltips ? '' : ' latest-games-disabled'),\r\n    innerHTML: _icons_js__WEBPACK_IMPORTED_MODULE_2__.icons.help\r\n  });\r\n  const updateHelpTooltip = () => {\r\n    (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_1__.createCustomTooltip)(\r\n      helpToggleBtn,\r\n      main.showHelpTooltips\r\n        ? 'Скрыть подсказки'\r\n        : 'Показать подсказки',\r\n      'help'\r\n    );\r\n    helpToggleBtn.classList.toggle('latest-games-disabled', !main.showHelpTooltips);\r\n  }\r\n  updateHelpTooltip();\r\n  helpToggleBtn.addEventListener('click', () => {\r\n    (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_1__.refreshTooltipSettings)();\r\n    main.showHelpTooltips = !main.showHelpTooltips;\r\n    main.settingsManager.saveSettings();\r\n    updateHelpTooltip();\r\n    // Refresh the container to update tooltips\r\n    main.uiManager.refreshContainer();\r\n  });\r\n\r\n  // Add search button\r\n  const searchBtn = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createElement)('span', {\r\n    className: 'latest-games-search-btn control-button' + (main.showSearchBox ? '' : ' latest-games-disabled'),\r\n    innerHTML: _icons_js__WEBPACK_IMPORTED_MODULE_2__.icons.search\r\n  });\r\n  const updateSearchTooltip = () => {\r\n    (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_1__.createCustomTooltip)(\r\n      searchBtn,\r\n      main.showSearchBox\r\n        ? 'Скрыть строку поиска'\r\n        : 'Показать строку поиска'\r\n    );\r\n    searchBtn.classList.toggle('latest-games-disabled', !main.showSearchBox);\r\n  };\r\n  updateSearchTooltip();\r\n  searchBtn.addEventListener('click', () => {\r\n    (0,_search_js__WEBPACK_IMPORTED_MODULE_3__.toggleSearchBox)(main);\r\n    updateSearchTooltip();\r\n  });\r\n\r\n  controlsButtons.append(\r\n    main.themeManager.createThemeToggle(),\r\n    main.viewManager.createDisplayModeToggle(),\r\n    refreshIdsBtn, resetButton, playBtn, replayBtn, replayMoreBtn,\r\n    pinAllBtn, unpinAllBtn, sortBtn, importBtn,\r\n    exportBtn, removeAllBtn, removeUnpinnedBtn,\r\n    dragToggleBtn, descToggleBtn, helpToggleBtn, searchBtn\r\n  );\r\n\r\n  return controlsContainer;\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/managers/UIHelpers/controls.js?");

/***/ }),

/***/ "./src/managers/UIHelpers/gameButton.js":
/*!**********************************************!*\
  !*** ./src/managers/UIHelpers/gameButton.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createGameElement: () => (/* binding */ createGameElement)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils.js */ \"./src/utils.js\");\n/* harmony import */ var _tooltip_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tooltip.js */ \"./src/tooltip.js\");\n/* harmony import */ var _drag_gameButtonDrag_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../drag/gameButtonDrag.js */ \"./src/drag/gameButtonDrag.js\");\n/* harmony import */ var _icons_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../icons.js */ \"./src/icons.js\");\n/* harmony import */ var _gameStatsApi_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../gameStatsApi.js */ \"./src/gameStatsApi.js\");\n/* harmony import */ var _gameInfo_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../gameInfo.js */ \"./src/gameInfo.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction createGameElement(main, game, id) {\r\n  const previousGameId = main.gamesManager.getPreviousGameId();\r\n  const pinGame = game.pin ? 'pin-game' : '';\r\n  const gametypeClass = game.params && game.params.gametype ? `pin-gametype-${game.params.gametype}` : '';\r\n  const previousClass = id === previousGameId ? 'previous-game' : '';\r\n\r\n  // Determine state icon for previous game\r\n  let stateIcon = '';\r\n\r\n  if (id === previousGameId) {\r\n    if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentPage)() === 'game') {\r\n      stateIcon = _icons_js__WEBPACK_IMPORTED_MODULE_3__.icons.playing;\r\n    } else {\r\n      stateIcon = _icons_js__WEBPACK_IMPORTED_MODULE_3__.icons.paused;\r\n    }\r\n  }\r\n\r\n  const li = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createElement)('li', {\r\n    className: `latest-game ${pinGame} ${gametypeClass} ${previousClass}`.trim(),\r\n    id: `latest-game-${id}`\r\n  });\r\n\r\n  let buttonTimeout;\r\n  const gameActionButtons = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'latest-game-buttons' });\r\n\r\n  li.addEventListener('mouseenter', () => {\r\n    buttonTimeout = setTimeout(() => {\r\n      gameActionButtons.style.visibility = 'visible';\r\n    }, 400);\r\n  });\r\n\r\n  li.addEventListener('mouseleave', () => {\r\n    clearTimeout(buttonTimeout);\r\n    gameActionButtons.style.visibility = 'hidden';\r\n  });\r\n\r\n  const pinButton = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\r\n    className: 'latest-game-pin',\r\n    innerHTML: game.pin ? _icons_js__WEBPACK_IMPORTED_MODULE_3__.icons.unpin : _icons_js__WEBPACK_IMPORTED_MODULE_3__.icons.pin\r\n  });\r\n\r\n  (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_1__.createCustomTooltip)(pinButton, game.pin\r\n    ? '[Клик] Открепить с подтверждением. [Shift + Клик] Открепить без подтверждения.'\r\n    : '[Клик] Закрепить с подтверждением. [Shift + Клик] Закрепить без подтверждения.'\r\n  );\r\n\r\n  pinButton.addEventListener('click', (e) => {\r\n    if (e.shiftKey || confirm(game.pin ? 'Открепить игру?' : 'Закрепить игру?')) {\r\n      main.gamesManager.pinGame(id);\r\n    }\r\n  });\r\n\r\n  const deleteButton = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\r\n    className: 'latest-game-delete',\r\n    innerHTML: _icons_js__WEBPACK_IMPORTED_MODULE_3__.icons.delete\r\n  });\r\n\r\n  (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_1__.createCustomTooltip)(deleteButton,\r\n    '[Клик] Удалить с подтверждением. [Shift + Клик] Удалить без подтверждения.'\r\n  );\r\n\r\n  deleteButton.addEventListener('click', (e) => {\r\n    if (e.shiftKey || confirm('Удалить игру?')) {\r\n      main.gamesManager.deleteGame(id);\r\n    }\r\n  });\r\n\r\n  // Add info button for all game types\r\n  const infoButton = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\r\n    className: 'latest-game-info',\r\n    innerHTML: _icons_js__WEBPACK_IMPORTED_MODULE_3__.icons.info\r\n  });\r\n\r\n  const tooltipText = game.params.gametype === 'voc' && game.params.vocId\r\n    ? 'Показать информацию о словаре'\r\n    : 'Показать информацию об игре';\r\n\r\n  (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_1__.createCustomTooltip)(infoButton, tooltipText);\r\n\r\n  infoButton.addEventListener('click', (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    (0,_gameInfo_js__WEBPACK_IMPORTED_MODULE_5__.createGameInfoPopup)(e, game);\r\n  });\r\n\r\n  gameActionButtons.append(infoButton, pinButton, deleteButton);\r\n\r\n  const link = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createElement)('a', {\r\n    href: main.gamesManager.generateGameLink(game),\r\n    innerHTML: main.gamesManager.generateGameName(game, { stateIcon })\r\n  });\r\n\r\n  link.addEventListener('click', (e) => {\r\n    if (main.wasDragging) {\r\n      e.preventDefault();\r\n      main.wasDragging = false;\r\n    }\r\n    // Save previousGameId on link click, preserving all other data\r\n    try {\r\n      const li = link.closest('li');\r\n      if (li && li.id && li.id.startsWith('latest-game-')) {\r\n        const id = li.id.replace('latest-game-', '');\r\n        const data = JSON.parse(localStorage.getItem('latestGamesData')) || {};\r\n        data.previousGameId = id;\r\n        localStorage.setItem('latestGamesData', JSON.stringify(data));\r\n      }\r\n    } catch (err) { }\r\n  });\r\n\r\n  // Default tooltip content\r\n  const defaultTooltipContent = `\r\n    [Shift + Клик] Перейти к игре с альтернативными параметрами\r\n    [Удерживание (ЛКМ)] аналогично (Shift + Клик)\r\n    [Shift + Наведение] Показать статистику игры\r\n  `;\r\n\r\n  // Shift + hover event for game stats\r\n  link.addEventListener('mouseover', async (e) => {\r\n    if (e.shiftKey) {\r\n      // Set loading content immediately\r\n      (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_1__.updateTooltipContent)(link, '[Loading] Загрузка статистики...', 'stats');\r\n      try {\r\n        const statsContent = await _gameStatsApi_js__WEBPACK_IMPORTED_MODULE_4__.gameStatsApi.getGameStats(link);\r\n        (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_1__.updateTooltipContent)(link, statsContent, 'stats');\r\n      } catch (error) {\r\n        console.error('Error loading game stats:', error);\r\n        (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_1__.updateTooltipContent)(link, '[Ошибка] Не удалось загрузить статистику', 'stats');\r\n      }\r\n    } else {\r\n      // Set default content\r\n      (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_1__.updateTooltipContent)(link, defaultTooltipContent, 'info');\r\n    }\r\n  });\r\n\r\n  li.appendChild(gameActionButtons);\r\n  li.appendChild(link);\r\n\r\n  if (game.pin && main.enableDragging) (0,_drag_gameButtonDrag_js__WEBPACK_IMPORTED_MODULE_2__.addDragFunctionality)(main, li);\r\n\r\n  return li;\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/managers/UIHelpers/gameButton.js?");

/***/ }),

/***/ "./src/managers/UIHelpers/panelToggle.js":
/*!***********************************************!*\
  !*** ./src/managers/UIHelpers/panelToggle.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createPanelToggleButton: () => (/* binding */ createPanelToggleButton)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils.js */ \"./src/utils.js\");\n/* harmony import */ var _tooltip_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tooltip.js */ \"./src/tooltip.js\");\n/* harmony import */ var _icons_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../icons.js */ \"./src/icons.js\");\n/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../definitions.js */ \"./src/definitions.js\");\n\r\n\r\n\r\n\r\n\r\nfunction generatePanelToggleTooltipText(main) {\r\n  const container = document.getElementById('latest-games-container');\r\n  const currentPage = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentPage)();\r\n  const isAlwaysVisible = main.alwaysVisiblePanel[currentPage] ?? false;\r\n  const showHideText = container && container.classList.contains('visible') ? 'Скрыть' : 'Показать';\r\n  const pinUnpinText = isAlwaysVisible ? 'Открепить' : 'Закрепить';\r\n  \r\n  return `\r\n    [Клик] ${showHideText} панель\r\n    [Shift + Клик] ${pinUnpinText} панель\r\n    [Ctrl + Клик] Изменить задержку скрытия панели\r\n    (${main.hidePanelDelay ?? _definitions_js__WEBPACK_IMPORTED_MODULE_3__.DEFAULTS.hidePanelDelay} мс)\r\n  `;\r\n}\r\n\r\nfunction createPanelToggleButton(main) {\r\n  if (document.getElementById('latest-games-panel-toggle')) return;\r\n  \r\n  const currentPage = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentPage)();\r\n  const isAlwaysVisible = main.alwaysVisiblePanel[currentPage] ?? false;\r\n  \r\n  const btn = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createElement)('button', {\r\n    id: 'latest-games-panel-toggle',\r\n    className: 'latest-games-panel-toggle',\r\n    type: 'button',\r\n    innerHTML: isAlwaysVisible ? _icons_js__WEBPACK_IMPORTED_MODULE_2__.icons.panelToggleOpened : _icons_js__WEBPACK_IMPORTED_MODULE_2__.icons.panelToggleClosed,\r\n  });\r\n  \r\n  const container = document.getElementById('latest-games-container');\r\n  \r\n  const updatePanelToggleTooltip = () => {\r\n    (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_1__.updateTooltipContent)(btn, generatePanelToggleTooltipText(main));\r\n  };\r\n  \r\n  btn.addEventListener('mouseenter', updatePanelToggleTooltip);\r\n  \r\n  (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_1__.createCustomTooltip)(btn, generatePanelToggleTooltipText(main));\r\n  \r\n  if (isAlwaysVisible) btn.classList.add('always-visible');\r\n  \r\n  // Set initial panel visibility\r\n  if (container) {\r\n    container.classList.toggle('visible', isAlwaysVisible);\r\n    if (!isAlwaysVisible) main.viewManager.updateContainerLeftOffset();\r\n  }\r\n  \r\n  btn.addEventListener('click', (e) => {\r\n    const container = document.getElementById('latest-games-container');\r\n    if (!container) return;\r\n    \r\n    const currentPage = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentPage)();\r\n    if (e.ctrlKey) {\r\n      const currentDelay = main.hidePanelDelay ?? _definitions_js__WEBPACK_IMPORTED_MODULE_3__.DEFAULTS.hidePanelDelay;\r\n      const input = prompt('Изменить задержку автоскрытия панели в миллисекундах:', currentDelay);\r\n      const delay = parseInt(input, 10);\r\n      if (!isNaN(delay) && delay >= 0) {\r\n        main.hidePanelDelay = delay;\r\n        main.settingsManager.saveSettings();\r\n      } else if (input !== null) {\r\n        alert('Пожалуйста, введите корректное значение задержки.');\r\n      }\r\n      return;\r\n    }\r\n    \r\n    if (e.shiftKey) {\r\n      // Toggle visibility setting for the current page\r\n      main.alwaysVisiblePanel[currentPage] = !main.alwaysVisiblePanel[currentPage];\r\n      const isAlwaysVisible = main.alwaysVisiblePanel[currentPage];\r\n      btn.classList.toggle('always-visible', isAlwaysVisible);\r\n      btn.innerHTML = isAlwaysVisible ? _icons_js__WEBPACK_IMPORTED_MODULE_2__.icons.panelToggleOpened : _icons_js__WEBPACK_IMPORTED_MODULE_2__.icons.panelToggleClosed;\r\n      container.classList.toggle('visible', isAlwaysVisible);\r\n      if (!isAlwaysVisible) main.viewManager.updateContainerLeftOffset();\r\n      main.settingsManager.saveSettings();\r\n      updatePanelToggleTooltip();\r\n    } else {\r\n      // Normal click toggles visibility without changing settings\r\n      const isVisible = container.classList.contains('visible');\r\n      if (isVisible) {\r\n        if (main.hoverTimeout) {\r\n          clearTimeout(main.hoverTimeout);\r\n          main.hoverTimeout = null;\r\n        }\r\n        container.classList.remove('visible');\r\n        main.viewManager.updateContainerLeftOffset();\r\n      } else {\r\n        main.uiManager.showContainer();\r\n      }\r\n      updatePanelToggleTooltip();\r\n    }\r\n  });\r\n  \r\n  document.body.appendChild(btn);\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/managers/UIHelpers/panelToggle.js?");

/***/ }),

/***/ "./src/managers/UIHelpers/search.js":
/*!******************************************!*\
  !*** ./src/managers/UIHelpers/search.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createSearchBox: () => (/* binding */ createSearchBox),\n/* harmony export */   handleSearch: () => (/* binding */ handleSearch),\n/* harmony export */   toggleSearchBox: () => (/* binding */ toggleSearchBox)\n/* harmony export */ });\n/* harmony import */ var _icons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../icons.js */ \"./src/icons.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils.js */ \"./src/utils.js\");\n/* harmony import */ var _tooltip_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../tooltip.js */ \"./src/tooltip.js\");\n\r\n\r\n\r\n\r\nconst SEARCH_STORAGE_KEY = 'latestGamesSearchQuery';\r\n\r\nfunction fuzzyScore(text, query) {\r\n  const textLower = text.toLowerCase(), queryLower = query.toLowerCase();\r\n  if (!queryLower) return 0;\r\n  if (textLower === queryLower) return -1000;\r\n  if (textLower.startsWith(queryLower)) return -500;\r\n  if (textLower.includes(queryLower)) return -100;\r\n\r\n  let textIndex = 0, queryIndex = 0, gaps = 0;\r\n  while (textIndex < textLower.length && queryIndex < queryLower.length) {\r\n    if (textLower[textIndex] === queryLower[queryIndex]) queryIndex++;\r\n    else gaps++;\r\n    textIndex++;\r\n  }\r\n  return queryIndex === queryLower.length ? gaps : Infinity;\r\n}\r\n\r\n// Function to save search query to localStorage\r\nfunction saveSearchQuery(query) {\r\n  try {\r\n    if (query && query.trim()) {\r\n      localStorage.setItem(SEARCH_STORAGE_KEY, query.trim());\r\n    } else {\r\n      localStorage.removeItem(SEARCH_STORAGE_KEY);\r\n    }\r\n  } catch (e) {\r\n    console.warn('Failed to save search query:', e);\r\n  }\r\n}\r\n\r\n// Function to load search query from localStorage\r\nfunction loadSearchQuery() {\r\n  try {\r\n    return localStorage.getItem(SEARCH_STORAGE_KEY) || '';\r\n  } catch (e) {\r\n    console.warn('Failed to load search query:', e);\r\n    return '';\r\n  }\r\n}\r\n\r\n// Function to clear saved search query\r\nfunction clearSavedSearchQuery() {\r\n  try {\r\n    localStorage.removeItem(SEARCH_STORAGE_KEY);\r\n  } catch (e) {\r\n    console.warn('Failed to clear search query:', e);\r\n  }\r\n}\r\n\r\n// Function to calculate text width\r\nfunction getTextWidth(text, font) {\r\n  const canvas = document.createElement('canvas');\r\n  const context = canvas.getContext('2d');\r\n  context.font = font;\r\n  return context.measureText(text).width;\r\n}\r\n\r\n// Function to get computed font style from element\r\nfunction getFontStyle(element) {\r\n  const style = window.getComputedStyle(element);\r\n  return `${style.fontWeight} ${style.fontSize} ${style.fontFamily}`;\r\n}\r\n\r\n// Function to update clear button position\r\nfunction updateClearButtonPosition(searchBox, clearButton) {\r\n  const text = searchBox.value;\r\n  if (!text) {\r\n    clearButton.style.left = '';\r\n    return;\r\n  }\r\n\r\n  const font = getFontStyle(searchBox);\r\n  const textWidth = getTextWidth(text, font);\r\n\r\n  const marginLeft = 20;\r\n\r\n  // Position the clear button at the end of the text\r\n  const leftPosition = textWidth + marginLeft;\r\n  clearButton.style.left = `${leftPosition}px`;\r\n\r\n  // Get the actual width of the clear button\r\n  const buttonWidth = clearButton.offsetWidth || 24; // fallback to 24px if not rendered yet\r\n\r\n  // Calculate if the button would fit within the input boundaries\r\n  const inputWidth = searchBox.offsetWidth;\r\n  // Assume paddingRight and borderRight are small/fixed, or set a safe value\r\n  const inputContentEnd = inputWidth - 8;\r\n  const buttonEndPosition = leftPosition + buttonWidth;\r\n\r\n  // Hide button if it would extend beyond the input's content area\r\n  if (buttonEndPosition > inputContentEnd) {\r\n    clearButton.classList.remove('visible');\r\n  }\r\n}\r\n\r\nfunction createSearchBox(main) {\r\n  const searchContainer = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', {\r\n    className: `latest-games-search-container ${main.showSearchBox ? '' : 'latest-games-hidden'}`\r\n  });\r\n\r\n  const searchBox = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createElement)('input', {\r\n    type: 'search',\r\n    id: 'latest-games-search-input',\r\n  });\r\n\r\n  const clearButton = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', {\r\n    id: 'latest-games-clear-button',\r\n    className: 'latest-games-clear-btn',\r\n    innerHTML: _icons_js__WEBPACK_IMPORTED_MODULE_0__.icons.delete\r\n  });\r\n\r\n  // Make sure the search container has relative positioning for absolute positioning of clear button\r\n  searchContainer.style.position = 'relative';\r\n\r\n  // Restore saved search query on creation\r\n  const savedQuery = loadSearchQuery();\r\n  if (savedQuery) {\r\n    searchBox.value = savedQuery;\r\n    requestAnimationFrame(() => {\r\n      updateClearButtonVisibility(clearButton, savedQuery);\r\n      updateClearButtonPosition(searchBox, clearButton);\r\n      handleSearch(main, savedQuery);\r\n    });\r\n  }\r\n\r\n  // Handle input events\r\n  searchBox.addEventListener('input', (e) => {\r\n    const value = e.target.value.trim();\r\n    handleSearch(main, value);\r\n    updateClearButtonVisibility(clearButton, value);\r\n    updateClearButtonPosition(searchBox, clearButton);\r\n\r\n    // Save search query (or remove if empty)\r\n    saveSearchQuery(value);\r\n  });\r\n\r\n  // Handle clear button click\r\n  clearButton.addEventListener('click', () => {\r\n    searchBox.value = '';\r\n    searchBox.focus();\r\n    handleSearch(main, '');\r\n    updateClearButtonVisibility(clearButton, '');\r\n    updateClearButtonPosition(searchBox, clearButton);\r\n\r\n    // Clear saved search query when explicitly cleared\r\n    clearSavedSearchQuery();\r\n  });\r\n\r\n  // Handle keyboard events to detect explicit clearing\r\n  searchBox.addEventListener('keydown', (e) => {\r\n    // If backspace or delete is pressed and the input becomes empty, clear saved query\r\n    if ((e.key === 'Backspace' || e.key === 'Delete') && searchBox.value.length === 1) {\r\n      // The input will be empty after this keypress\r\n      if (!searchBox.value.trim()) clearSavedSearchQuery();\r\n    }\r\n  });\r\n\r\n  // Initial setup\r\n  updateClearButtonVisibility(clearButton, searchBox.value);\r\n  updateClearButtonPosition(searchBox, clearButton);\r\n\r\n  searchContainer.appendChild(searchBox);\r\n  searchContainer.appendChild(clearButton);\r\n\r\n  return searchContainer;\r\n}\r\n\r\nfunction updateClearButtonVisibility(clearButton, value) {\r\n  clearButton.classList.toggle('visible', !!value);\r\n}\r\n\r\nfunction handleSearch(main, query, showAll = false) {\r\n  const gamesList = document.getElementById('latest-games');\r\n  if (!gamesList) return;\r\n\r\n  gamesList.innerHTML = '';\r\n\r\n  if (!query) {\r\n    main.uiManager.populateGamesList(gamesList);\r\n    return;\r\n  }\r\n\r\n  const results = [];\r\n  main.groupsManager.groups.forEach(group => {\r\n    group.games.forEach(game => {\r\n      const name = main.gamesManager.generateGameName(game);\r\n      const score = fuzzyScore(name, query);\r\n      if (score !== Infinity) {\r\n        results.push({ group, game, score });\r\n      }\r\n    });\r\n  });\r\n\r\n  if (results.length === 0) {\r\n    const noResults = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createElement)('li', {\r\n      className: 'latest-games-search-noresults',\r\n      textContent: 'Ничего не найдено'\r\n    });\r\n    gamesList.appendChild(noResults);\r\n    return;\r\n  }\r\n\r\n  results.sort((a, b) => a.score - b.score);\r\n\r\n  const maxResultsLimit = 50;\r\n  const maxResults = showAll ? results.length : maxResultsLimit;\r\n  const displayedResults = results.slice(0, maxResults);\r\n  const hiddenCount = results.length - maxResults;\r\n\r\n  displayedResults.forEach(({ group, game }) => {\r\n    const listItem = main.uiManager.createGameElement(game, game.id);\r\n    listItem.classList.add('latest-games-search-result');\r\n    listItem.addEventListener('click', () => {\r\n      main.groupsManager.currentGroupId = group.id;\r\n      main.uiManager.refreshContainer();\r\n      setTimeout(() => {\r\n        const element = document.getElementById(`latest-game-${game.id}`);\r\n        if (element) element.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n      }, 100);\r\n    });\r\n    gamesList.appendChild(listItem);\r\n  });\r\n\r\n  if (hiddenCount > 0) {\r\n    const hiddenMessage = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createElement)('li', {\r\n      className: 'latest-games-search-more',\r\n      textContent: `Ещё ${hiddenCount} результатов скрыто`,\r\n    });\r\n\r\n    (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_2__.createCustomTooltip)(hiddenMessage, 'Нажмите для показа всех результатов');\r\n    \r\n    hiddenMessage.addEventListener('click', () => {\r\n      handleSearch(main, query, true); // Show all results when clicked\r\n    });\r\n    gamesList.appendChild(hiddenMessage);\r\n  }\r\n}\r\n\r\nfunction toggleSearchBox(main) {\r\n  const searchContainer = document.querySelector('.latest-games-search-container');\r\n  if (!searchContainer) return;\r\n\r\n  const isHidden = searchContainer.classList.toggle('latest-games-hidden');\r\n  main.showSearchBox = !isHidden;\r\n\r\n  if (main.settingsManager && typeof main.settingsManager.saveSettings === 'function') {\r\n    main.settingsManager.saveSettings();\r\n  }\r\n\r\n  if (!isHidden) {\r\n    const searchBox = document.getElementById('latest-games-search-input');\r\n    if (searchBox) {\r\n      searchBox.focus();\r\n      searchBox.select();\r\n    }\r\n  }\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/managers/UIHelpers/search.js?");

/***/ }),

/***/ "./src/managers/UIHelpers/visibility.js":
/*!**********************************************!*\
  !*** ./src/managers/UIHelpers/visibility.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createHoverArea: () => (/* binding */ createHoverArea),\n/* harmony export */   hideContainer: () => (/* binding */ hideContainer),\n/* harmony export */   showContainer: () => (/* binding */ showContainer)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils.js */ \"./src/utils.js\");\n\r\n\r\nfunction createHoverArea(main) {\r\n  const hoverArea = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { id: 'latest-games-hover-area' });\r\n  hoverArea.addEventListener('mouseenter', () => showContainer(main));\r\n  hoverArea.addEventListener('mouseleave', () => hideContainer(main));\r\n  document.body.appendChild(hoverArea);\r\n}\r\n\r\nfunction showContainer(main) {\r\n  main.isHovered = true;\r\n  if (main.hoverTimeout) clearTimeout(main.hoverTimeout);\r\n  main.hoverTimeout = null;\r\n  const container = document.getElementById('latest-games-container');\r\n  if (container) {\r\n    const wasVisible = container.classList.contains('visible');\r\n    container.classList.add('visible');\r\n    container.style.left = '0';\r\n    if (main.viewManager.getDisplayMode() === 'wrap') {\r\n      container.style.top = `${main.panelYPosition}vh`;\r\n    }\r\n    container.scrollTop = main.previousScrollPosition;\r\n    // Only retrigger animation if panel was hidden before\r\n    if (!wasVisible) {\r\n      const previousGame = container.querySelector('.latest-game.previous-game');\r\n      if (previousGame) {\r\n        previousGame.style.animation = 'none';\r\n        setTimeout(() => previousGame.style.animation = '', 10);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction hideContainer(main) {\r\n  const currentPage = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentPage)();\r\n  const isAlwaysVisible = main.alwaysVisiblePanel[currentPage] ?? false;\r\n  \r\n  if (isAlwaysVisible) return;\r\n  \r\n  main.isHovered = false;\r\n  if (main.hoverTimeout) clearTimeout(main.hoverTimeout);\r\n  main.hoverTimeout = setTimeout(() => {\r\n    if (!main.isHovered) {\r\n      const container = document.getElementById('latest-games-container');\r\n      if (container) {\r\n        container.classList.remove('visible');\r\n        main.viewManager.updateContainerLeftOffset();\r\n      }\r\n    }\r\n  }, main.hidePanelDelay);\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/managers/UIHelpers/visibility.js?");

/***/ }),

/***/ "./src/managers/UIManager.js":
/*!***********************************!*\
  !*** ./src/managers/UIManager.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UIManager: () => (/* binding */ UIManager)\n/* harmony export */ });\n/* harmony import */ var _icons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../icons.js */ \"./src/icons.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ \"./src/utils.js\");\n/* harmony import */ var _vocabularyMigration_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../vocabularyMigration.js */ \"./src/vocabularyMigration.js\");\n/* harmony import */ var _gamePopup_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../gamePopup.js */ \"./src/gamePopup.js\");\n/* harmony import */ var _panel_panelResize_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../panel/panelResize.js */ \"./src/panel/panelResize.js\");\n/* harmony import */ var _panel_panelPosition_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../panel/panelPosition.js */ \"./src/panel/panelPosition.js\");\n/* harmony import */ var _UIHelpers_gameButton_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./UIHelpers/gameButton.js */ \"./src/managers/UIHelpers/gameButton.js\");\n/* harmony import */ var _UIHelpers_controls_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./UIHelpers/controls.js */ \"./src/managers/UIHelpers/controls.js\");\n/* harmony import */ var _UIHelpers_search_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./UIHelpers/search.js */ \"./src/managers/UIHelpers/search.js\");\n/* harmony import */ var _UIHelpers_visibility_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./UIHelpers/visibility.js */ \"./src/managers/UIHelpers/visibility.js\");\n/* harmony import */ var _UIHelpers_panelToggle_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./UIHelpers/panelToggle.js */ \"./src/managers/UIHelpers/panelToggle.js\");\n/* harmony import */ var _tooltip_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../tooltip.js */ \"./src/tooltip.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass UIManager {\r\n  constructor(main) {\r\n    this.main = main;\r\n    // Bind helper functions with main pre-applied\r\n    this.createGameElement = _UIHelpers_gameButton_js__WEBPACK_IMPORTED_MODULE_6__.createGameElement.bind(null, this.main);\r\n    this.createControls = _UIHelpers_controls_js__WEBPACK_IMPORTED_MODULE_7__.createControls.bind(null, this.main);\r\n    this.createSearchBox = _UIHelpers_search_js__WEBPACK_IMPORTED_MODULE_8__.createSearchBox.bind(null, this.main);\r\n    this.createHoverArea = _UIHelpers_visibility_js__WEBPACK_IMPORTED_MODULE_9__.createHoverArea.bind(null, this.main);\r\n    this.showContainer = _UIHelpers_visibility_js__WEBPACK_IMPORTED_MODULE_9__.showContainer.bind(null, this.main);\r\n    this.hideContainer = _UIHelpers_visibility_js__WEBPACK_IMPORTED_MODULE_9__.hideContainer.bind(null, this.main);\r\n    this.createPanelToggleButton = _UIHelpers_panelToggle_js__WEBPACK_IMPORTED_MODULE_10__.createPanelToggleButton.bind(null, this.main);\r\n  }\r\n\r\n  scrollToPreviousGame() {\r\n    const content = document.getElementById('latest-games-content');\r\n    const el = document.querySelector('.previous-game');\r\n    if (!content || !el) return;\r\n    const cRect = content.getBoundingClientRect();\r\n    const eRect = el.getBoundingClientRect();\r\n    const offsetInside = eRect.top - cRect.top;\r\n    const scrollTo = offsetInside - (cRect.height / 2) + (eRect.height / 2);\r\n    content.scrollTop += scrollTo;\r\n  }\r\n\r\n  createContainer() {\r\n    const container = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { id: 'latest-games-container' });\r\n\r\n    container.addEventListener('mouseenter', () => {\r\n      this.showContainer();\r\n      requestAnimationFrame(() => this.scrollToPreviousGame());\r\n    });\r\n\r\n    const contentContainer = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { id: 'latest-games-content' });\r\n    const searchBox = this.createSearchBox();\r\n    contentContainer.appendChild(searchBox);\r\n\r\n    const groupsContainer = this.main.groupsManager.createGroupsContainer();\r\n    contentContainer.appendChild(groupsContainer);\r\n\r\n    const gamesList = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createElement)('ul', { id: 'latest-games' });\r\n    this.populateGamesList(gamesList);\r\n    contentContainer.appendChild(gamesList);\r\n\r\n    const controls = this.createControls();\r\n    container.append(controls, contentContainer);\r\n\r\n    // Move scroll event listener to the content container\r\n    contentContainer.addEventListener('scroll', () => {\r\n      this.main.previousScrollPosition = contentContainer.scrollTop;\r\n      this.main.settingsManager.saveSettings();\r\n    });\r\n\r\n    container.addEventListener('mouseenter', () => this.showContainer());\r\n    container.addEventListener('mouseleave', () => this.hideContainer());\r\n\r\n    let longPressTimer = null;\r\n    let suppressClick = false;\r\n\r\n    const showGamePopupHandler = (e) => {\r\n      const gameElement = e.target.closest('.latest-game');\r\n      if (!gameElement) return;\r\n      const gameId = gameElement.id.replace('latest-game-', '');\r\n      const game = this.main.gamesManager.findGameById(gameId);\r\n      if (game && !this.main.enableDragging) (0,_gamePopup_js__WEBPACK_IMPORTED_MODULE_3__.createGamePopup)(game, e, this.main.gamesManager);\r\n    };\r\n\r\n    gamesList.addEventListener('mousedown', (e) => {\r\n      if (e.button !== 0) return;\r\n      // Prevent popup if Shift+Click on a button inside .latest-game-buttons\r\n      if (e.shiftKey && e.target.closest('.latest-game-buttons')) {\r\n        suppressClick = false;\r\n        return;\r\n      }\r\n      if (e.shiftKey) {\r\n        suppressClick = true;\r\n        e.preventDefault();\r\n        showGamePopupHandler(e);\r\n      } else {\r\n        longPressTimer = setTimeout(() => {\r\n          suppressClick = true;\r\n          e.preventDefault();\r\n          showGamePopupHandler(e);\r\n        }, 300);\r\n      }\r\n    });\r\n\r\n    gamesList.addEventListener('mouseup', () => {\r\n      clearTimeout(longPressTimer);\r\n    });\r\n\r\n    gamesList.addEventListener('click', (e) => {\r\n      if (suppressClick) {\r\n        e.stopImmediatePropagation();\r\n        e.preventDefault();\r\n        suppressClick = false;\r\n      }\r\n    }, { capture: true });\r\n\r\n    gamesList.addEventListener('contextmenu', (e) => {\r\n      const gameElement = e.target.closest('.latest-game');\r\n      if (gameElement) {\r\n        e.preventDefault();\r\n        const gameId = gameElement.id.replace('latest-game-', '');\r\n        (0,_vocabularyMigration_js__WEBPACK_IMPORTED_MODULE_2__.showMigrationPopup)(this.main, this.main.groupsManager.groups, this.main.groupsManager.currentGroupId, e, gameId);\r\n      }\r\n    });\r\n\r\n    // Append resize handles\r\n    let hHandle = container.querySelector('.resize-handle-horizontal');\r\n    if (!hHandle) {\r\n      hHandle = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { className: 'resize-handle-horizontal' });\r\n      container.appendChild(hHandle);\r\n    }\r\n\r\n    let vHandleBot = container.querySelector('.resize-handle-vertical-bottom');\r\n    if (!vHandleBot) {\r\n      vHandleBot = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { className: 'resize-handle-vertical resize-handle-vertical-bottom' });\r\n      container.appendChild(vHandleBot);\r\n    }\r\n\r\n    let vHandleTop = container.querySelector('.resize-handle-vertical-top');\r\n    if (!vHandleTop) {\r\n      vHandleTop = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { className: 'resize-handle-vertical resize-handle-vertical-top' });\r\n      container.appendChild(vHandleTop);\r\n    }\r\n\r\n    (0,_panel_panelResize_js__WEBPACK_IMPORTED_MODULE_4__.setupResizeHandle)(this, container, hHandle, vHandleBot, vHandleTop);\r\n    (0,_panel_panelPosition_js__WEBPACK_IMPORTED_MODULE_5__.setupYPositioning)(this, container);\r\n\r\n    document.body.appendChild(container);\r\n\r\n    this.main.groupsManager.updateGroupControlStates();\r\n    this.main.viewManager.updateDisplayModeClass();\r\n\r\n    const allTabs = container.querySelectorAll('.group-tab');\r\n    allTabs.forEach(tab => {\r\n      if (tab.getBoundingClientRect().width >= 300) {\r\n        (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_11__.createCustomTooltip)(tab, tab.textContent);\r\n      }\r\n    });\r\n\r\n    const origUpdateDisplayModeClass = this.main.viewManager.updateDisplayModeClass.bind(this.main.viewManager);\r\n    this.main.viewManager.updateDisplayModeClass = (...args) => {\r\n      origUpdateDisplayModeClass(...args);\r\n      (0,_panel_panelResize_js__WEBPACK_IMPORTED_MODULE_4__.setupResizeHandle)(this, container, hHandle, vHandleBot, vHandleTop);\r\n      (0,_panel_panelPosition_js__WEBPACK_IMPORTED_MODULE_5__.setupYPositioning)(this, container);\r\n    };\r\n\r\n    this.updateRemoveIcons();\r\n    // Scroll to the previous game if it exists or restore the last scroll position\r\n    setTimeout(() => requestAnimationFrame(() => this.scrollToPreviousGame()), 100);\r\n  }\r\n\r\n  updateGameCountDisplay() {\r\n    const countDisplay = document.getElementById('latest-games-count');\r\n    if (countDisplay) {\r\n      countDisplay.textContent = this.main.maxGameCount.toString();\r\n      countDisplay.classList.toggle('latest-games-disabled', this.main.shouldAutoSave === false);\r\n      (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_11__.createCustomTooltip)(countDisplay, this.main.shouldAutoSave ? 'Автосохранение включено' : 'Автосохранение отключено');\r\n    }\r\n  }\r\n\r\n  populateGamesList(gamesList) {\r\n    gamesList.innerHTML = '';\r\n\r\n    if (this.main.groupsManager.getGroupViewMode() === 'tabs') {\r\n      const currentGroup = this.main.groupsManager.getCurrentGroup();\r\n      if (!currentGroup) return;\r\n      const pinnedCount = this.main.groupsManager.getPinnedGameCount();\r\n      const maxGamesToShow = Math.min(currentGroup.games.length, this.main.maxGameCount + pinnedCount);\r\n      for (let i = 0; i < maxGamesToShow; i++) {\r\n        const game = currentGroup.games[i];\r\n        const gameElement = this.createGameElement(game, game.id);\r\n        gamesList.appendChild(gameElement);\r\n      }\r\n    } else {\r\n      this.main.groupsManager.groups.forEach(group => {\r\n        if (group.games.length > 0) {\r\n          const groupHeader = this.main.groupsManager.createGroupHeader(group);\r\n          gamesList.appendChild(groupHeader);\r\n          const pinnedCount = group.games.filter(game => game.pin).length;\r\n          const maxGamesToShow = Math.min(group.games.length, this.main.maxGameCount + pinnedCount);\r\n          for (let i = 0; i < maxGamesToShow; i++) {\r\n            const game = group.games[i];\r\n            const gameElement = this.createGameElement(game, game.id);\r\n            gamesList.appendChild(gameElement);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  updateRemoveIcons() {\r\n    const currentGroup = this.main.groupsManager.getCurrentGroup(this.main.groupsManager.groups, this.main.groupsManager.currentGroupId);\r\n    const removeGroupBtn = document.querySelector('.group-controls .remove-group.control-button');\r\n    if (removeGroupBtn) {\r\n      removeGroupBtn.innerHTML =\r\n        currentGroup && currentGroup.games && currentGroup.games.length > 0\r\n          ? _icons_js__WEBPACK_IMPORTED_MODULE_0__.icons.trashSomething\r\n          : _icons_js__WEBPACK_IMPORTED_MODULE_0__.icons.trashNothing;\r\n    }\r\n    const removeAllBtn = document.querySelector('.latest-games-removeall.control-button');\r\n    const hasAnyData = this.main.groupsManager.groups.some(group => group.games && group.games.length > 0);\r\n    if (removeAllBtn) {\r\n      removeAllBtn.innerHTML = hasAnyData ? _icons_js__WEBPACK_IMPORTED_MODULE_0__.icons.trashSomething : _icons_js__WEBPACK_IMPORTED_MODULE_0__.icons.trashNothing;\r\n    }\r\n  }\r\n\r\n  refreshContainer() {\r\n    this.main.groupsManager.refreshGroupsContainer();\r\n    const gamesList = document.getElementById('latest-games');\r\n    if (gamesList) {\r\n      this.populateGamesList(gamesList);\r\n      this.main.viewManager.updateDisplayModeClass();\r\n    }\r\n    this.updateRemoveIcons();\r\n    this.updateGameCountDisplay();\r\n    // Scroll to the previous game after refresh\r\n    requestAnimationFrame(() => this.scrollToPreviousGame());\r\n  }\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/managers/UIManager.js?");

/***/ }),

/***/ "./src/managers/ViewManager.js":
/*!*************************************!*\
  !*** ./src/managers/ViewManager.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ViewManager: () => (/* binding */ ViewManager)\n/* harmony export */ });\n/* harmony import */ var _icons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../icons.js */ \"./src/icons.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ \"./src/utils.js\");\n/* harmony import */ var _tooltip_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tooltip.js */ \"./src/tooltip.js\");\n/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../definitions.js */ \"./src/definitions.js\");\n\r\n\r\n\r\n\r\n\r\nclass ViewManager {\r\n  constructor(main) {\r\n    this.main = main;\r\n  }\r\n\r\n  getDisplayMode() {\r\n    return this.main.displayMode;\r\n  }\r\n\r\n  setDisplayMode(mode) {\r\n    this.main.displayMode = mode;\r\n    this.main.settingsManager.saveSettings();\r\n  }\r\n\r\n  createDisplayModeToggle() {\r\n    const toggleButton = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', {\r\n      className: 'display-mode-toggle control-button'\r\n    });\r\n    toggleButton.innerHTML = this.getDisplayMode() === 'wrap' ? _icons_js__WEBPACK_IMPORTED_MODULE_0__.icons.wrap : _icons_js__WEBPACK_IMPORTED_MODULE_0__.icons.scroll;\r\n    (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_2__.createCustomTooltip)(toggleButton, this.getDisplayMode() === 'wrap'\r\n      ? 'Переключить режим отображения в вертикальный вид'\r\n      : 'Переключить режим отображения в горизонтальный вид');\r\n\r\n    toggleButton.addEventListener('click', () => {\r\n      const newMode = this.getDisplayMode() === 'scroll' ? 'wrap' : 'scroll';\r\n      this.setDisplayMode(newMode);\r\n      toggleButton.innerHTML = newMode === 'wrap' ? _icons_js__WEBPACK_IMPORTED_MODULE_0__.icons.wrap : _icons_js__WEBPACK_IMPORTED_MODULE_0__.icons.scroll;\r\n      this.updateDisplayModeClass();\r\n      (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_2__.createCustomTooltip)(toggleButton, newMode === 'wrap'\r\n        ? 'Переключить режим отображения в вертикальный вид'\r\n        : 'Переключить режим отображения в горизонтальный вид');\r\n      if (newMode === 'scroll') {\r\n        const c = document.getElementById('latest-games-container');\r\n        if (c) setTimeout(() => c.scrollTop = c.scrollHeight, 0);\r\n      }\r\n    });\r\n    return toggleButton;\r\n  }\r\n\r\n  updateDisplayModeClass() {\r\n    const container = document.getElementById('latest-games-container');\r\n    const gamesList = document.getElementById('latest-games');\r\n    if (!container || !gamesList) return;\r\n    const mode = this.getDisplayMode();\r\n    container.classList.toggle('display-mode-wrap', mode === 'wrap');\r\n    gamesList.classList.toggle('display-mode-wrap', mode === 'wrap');\r\n    this.updateContainerLeftOffset();\r\n  }\r\n\r\n  updateContainerLeftOffset() {\r\n    const container = document.getElementById('latest-games-container');\r\n    if (!container) return;\r\n    const mode = this.getDisplayMode();\r\n    if (mode === 'wrap') {\r\n      // Use the current panelWidth (in vw or px), fallback to DEFAULTS if needed\r\n      const width = this.main.panelWidth || _definitions_js__WEBPACK_IMPORTED_MODULE_3__.DEFAULTS.panelWidth;\r\n      container.style.left = `calc(-1 * (${width} - 100px))`;\r\n    } else {\r\n      container.style.left = '-330px';\r\n    }\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/managers/ViewManager.js?");

/***/ }),

/***/ "./src/menuPopup.js":
/*!**************************!*\
  !*** ./src/menuPopup.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createPopup: () => (/* binding */ createPopup)\n/* harmony export */ });\n/* harmony import */ var _tooltip_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tooltip.js */ \"./src/tooltip.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"./src/utils.js\");\n\r\n\r\n\r\n/**\r\n * Create a popup with buttons that stays within screen boundaries\r\n * @param {Array} buttonConfigs - Array of button configuration objects\r\n * @param {MouseEvent} event - The mouse event for positioning\r\n * @param {string} className - CSS class name for the popup\r\n * @param {string} header - Optional header text to display at the top\r\n * @returns {HTMLElement} The created popup element\r\n */\r\nfunction createPopup(buttonConfigs, event, className = 'popup', header) {\r\n  // Remove any existing popup with the same class\r\n  const existingPopup = document.querySelector(`.${className}`);\r\n  if (existingPopup) existingPopup.remove();\r\n\r\n  const popup = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', { className });\r\n\r\n  // Add header if provided\r\n  if (header) {\r\n    const headerElem = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', {\r\n      className: 'popup-header',\r\n      textContent: header\r\n    });\r\n    popup.appendChild(headerElem);\r\n  }\r\n\r\n  // Create buttons from configurations\r\n  buttonConfigs.forEach(config => {\r\n    const button = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createElement)('button', {\r\n      className: config.className || 'popup-button',\r\n      textContent: config.text,\r\n      ...(config.dataset && { dataset: config.dataset })\r\n    });\r\n\r\n    if (config.onClick) {\r\n      button.addEventListener('click', () => {\r\n        config.onClick();\r\n        popup.remove();\r\n      });\r\n    }\r\n\r\n    popup.appendChild(button);\r\n  });\r\n\r\n  // Add popup to body temporarily to measure dimensions\r\n  popup.style.visibility = 'hidden';\r\n  document.body.appendChild(popup);\r\n\r\n  // Add title to buttons if they are too wide\r\n  popup.querySelectorAll('button').forEach(btn => {\r\n    const isEllipsed = btn.scrollWidth > btn.clientWidth;\r\n    isEllipsed && (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_0__.createCustomTooltip)(btn, btn.textContent);\r\n  });\r\n\r\n  // Calculate and set position\r\n  const popupRect = popup.getBoundingClientRect();\r\n  const viewportWidth = window.innerWidth;\r\n  const viewportHeight = window.innerHeight;\r\n  const margin = 10;\r\n\r\n  let left = Math.max(margin, Math.min(event.clientX, viewportWidth - popupRect.width - margin));\r\n  let top = Math.max(margin, Math.min(event.clientY, viewportHeight - popupRect.height - margin));\r\n\r\n  popup.style.left = `${left}px`;\r\n  popup.style.top = `${top}px`;\r\n  popup.style.visibility = 'visible';\r\n\r\n  // Define a function to hide popup and remove event listeners\r\n  const hidePopup = (e) => {\r\n    if (e && e.type === 'keydown' && e.key !== 'Escape') return;\r\n    popup.remove();\r\n    document.removeEventListener('click', clickOutsideHandler);\r\n    document.removeEventListener('keydown', keydownHandler);\r\n  };\r\n\r\n  const clickOutsideHandler = (e) => {\r\n    if (!popup.contains(e.target)) {\r\n      hidePopup(e);\r\n    }\r\n  };\r\n\r\n  const keydownHandler = (e) => {\r\n    if (e.key === 'Escape') {\r\n      hidePopup(e);\r\n    }\r\n  };\r\n\r\n  requestAnimationFrame(() => {\r\n    document.addEventListener('click', clickOutsideHandler);\r\n    document.addEventListener('keydown', keydownHandler);\r\n  });\r\n\r\n  return popup;\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/menuPopup.js?");

/***/ }),

/***/ "./src/panel/panelPosition.js":
/*!************************************!*\
  !*** ./src/panel/panelPosition.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setupYPositioning: () => (/* binding */ setupYPositioning)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils */ \"./src/utils.js\");\n\r\n\r\n// Handles Y positioning logic for LatestGamesManager panel\r\nfunction setupYPositioning(uiManager, container) {\r\n  const mode = uiManager.main.viewManager.getDisplayMode();\r\n  \r\n  if (mode === 'wrap') {\r\n    const currentPage = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getCurrentPage)();\r\n    \r\n    // Restore last saved Y position for current page\r\n    const pageYPosition = uiManager.main.panelYPosition[currentPage] ?? 0;\r\n    if (typeof pageYPosition === 'number' && pageYPosition >= 0 && pageYPosition <= 100) {\r\n      container.style.top = `${pageYPosition}vh`;\r\n    }\r\n    \r\n    let isDraggingY = false, startY, startTop;\r\n\r\n    const onMouseMoveY = (e) => {\r\n      if (!isDraggingY) return;\r\n      \r\n      const dy = e.clientY - startY;\r\n      const newTopVh = startTop + (dy / window.innerHeight) * 100;\r\n      const containerHeight = container.offsetHeight;\r\n      const maxTopVh = Math.max(0, ((window.innerHeight - containerHeight) / window.innerHeight) * 100);\r\n      const clampedTopVh = Math.max(0, Math.min(newTopVh, maxTopVh));\r\n      const roundedTopVh = Math.round(clampedTopVh * 10) / 10;\r\n      \r\n      container.style.top = `${roundedTopVh}vh`;\r\n    };\r\n\r\n    const onMouseUpY = () => {\r\n      if (!isDraggingY) return;\r\n      \r\n      isDraggingY = false;\r\n      document.removeEventListener('mousemove', onMouseMoveY);\r\n      document.removeEventListener('mouseup', onMouseUpY);\r\n      \r\n      const currentPage = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getCurrentPage)();\r\n      const finalRect = container.getBoundingClientRect();\r\n      const finalYPosition = Math.round(((finalRect.top / window.innerHeight) * 100) * 10) / 10;\r\n      \r\n      // Save Y position for current page\r\n      uiManager.main.panelYPosition[currentPage] = finalYPosition;\r\n      uiManager.main.settingsManager.saveSettings();\r\n    };\r\n\r\n    const enableYDrag = (e) => {\r\n      if (e.button !== 0) return;\r\n      \r\n      const ignoreSelectors = [\r\n        '.latest-game',\r\n        '.group-tab',\r\n        '.control-button',\r\n        '.resize-handle-horizontal',\r\n        '.resize-handle-vertical',\r\n        '#latest-games-search-input'\r\n      ];\r\n      \r\n      if (ignoreSelectors.some(selector => e.target.closest(selector))) return;\r\n      \r\n      isDraggingY = true;\r\n      startY = e.clientY;\r\n      const rect = container.getBoundingClientRect();\r\n      startTop = (rect.top / window.innerHeight) * 100;\r\n      \r\n      document.addEventListener('mousemove', onMouseMoveY);\r\n      document.addEventListener('mouseup', onMouseUpY);\r\n      e.preventDefault();\r\n    };\r\n\r\n    container.addEventListener('mousedown', enableYDrag);\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/panel/panelPosition.js?");

/***/ }),

/***/ "./src/panel/panelResize.js":
/*!**********************************!*\
  !*** ./src/panel/panelResize.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setupResizeHandle: () => (/* binding */ setupResizeHandle)\n/* harmony export */ });\n/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../definitions.js */ \"./src/definitions.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ \"./src/utils.js\");\n\r\n\r\n\r\nfunction setupDragResize(handle, getStart, onMove, onEnd) {\r\n  let isDragging = false, startCoord, startSize;\r\n  const onMouseMove = (e) => {\r\n    if (!isDragging) return;\r\n    const delta = getStart(e, startCoord);\r\n    onMove(delta, startSize);\r\n  };\r\n\r\n  const onMouseUp = () => {\r\n    if (!isDragging) return;\r\n    isDragging = false;\r\n    document.removeEventListener('mousemove', onMouseMove);\r\n    document.removeEventListener('mouseup', onMouseUp);\r\n    onEnd();\r\n  };\r\n\r\n  handle.onmousedown = (e) => {\r\n    if (e.button !== 0) return;\r\n    isDragging = true;\r\n    [startCoord, startSize] = getStart(e);\r\n    document.addEventListener('mousemove', onMouseMove);\r\n    document.addEventListener('mouseup', onMouseUp);\r\n    e.preventDefault();\r\n  };\r\n}\r\n\r\n/**\r\n * Handles panel resizing logic for LatestGamesManager\r\n * @param {object} uiManager - instance of UIManager\r\n * @param {HTMLElement} container - the panel container\r\n * @param {HTMLElement} horizontalHandle - handle for width resizing\r\n * @param {HTMLElement} bottomHandle - handle for bottom-edge height resizing\r\n * @param {HTMLElement} topHandle - handle for top-edge height resizing\r\n */\r\nfunction setupResizeHandle(uiManager, container, horizontalHandle, bottomHandle, topHandle) {\r\n  const mode = uiManager.main.viewManager.getDisplayMode();\r\n  const currentPage = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getCurrentPage)();\r\n\r\n  // Horizontal (width) resize\r\n  if (mode === 'wrap') {\r\n    const width = (uiManager.main.panelWidths?.[currentPage]) || uiManager.main.panelWidth;\r\n    container.style.width = width;\r\n    horizontalHandle.style.display = '';\r\n    setupDragResize(\r\n      horizontalHandle,\r\n      (e, prevX) => prevX === undefined ? [e.clientX, container.offsetWidth] : e.clientX - prevX,\r\n      (dx, startWidth) => {\r\n        let newWidthPx = startWidth + dx;\r\n        const maxPx = window.innerWidth * 0.95;\r\n        newWidthPx = Math.max(350, Math.min(newWidthPx, maxPx));\r\n        const newWidthVw = Math.round((newWidthPx / window.innerWidth) * 100 * 10) / 10;\r\n        container.style.width = `${newWidthVw}vw`;\r\n      },\r\n      () => {\r\n        uiManager.main.panelWidths = uiManager.main.panelWidths || {};\r\n        uiManager.main.panelWidths[currentPage] = container.style.width;\r\n        uiManager.main.settingsManager.saveSettings();\r\n      }\r\n    );\r\n  } else {\r\n    horizontalHandle.style.display = 'none';\r\n    container.style.width = '';\r\n    horizontalHandle.onmousedown = null;\r\n  }\r\n\r\n  const initialHeight = (uiManager.main.panelHeights?.[currentPage]) || _definitions_js__WEBPACK_IMPORTED_MODULE_0__.DEFAULTS.panelHeight;\r\n  container.style.height = initialHeight;\r\n\r\n  // Bottom vertical (height) resize\r\n  if (bottomHandle) {\r\n    bottomHandle.style.display = '';\r\n    setupDragResize(\r\n      bottomHandle,\r\n      (e, prevY) => prevY === undefined ? [e.clientY, container.offsetHeight] : e.clientY - prevY,\r\n      (dy, startHeight) => {\r\n        let newHeightPx = startHeight + dy;\r\n        const maxPx = window.innerHeight * 0.95;\r\n        newHeightPx = Math.max(200, Math.min(newHeightPx, maxPx));\r\n        const newHeightVh = Math.round((newHeightPx / window.innerHeight) * 100 * 10) / 10;\r\n        container.style.height = `${newHeightVh}vh`;\r\n      },\r\n      () => {\r\n        uiManager.main.panelHeights = uiManager.main.panelHeights || {};\r\n        uiManager.main.panelHeights[currentPage] = container.style.height;\r\n        uiManager.main.settingsManager.saveSettings();\r\n      }\r\n    );\r\n  }\r\n\r\n  // Top vertical (height) resize\r\n  if (topHandle) {\r\n    topHandle.style.display = '';\r\n    setupDragResize(\r\n      topHandle,\r\n      (e, prevY) => {\r\n        if (prevY === undefined) {\r\n          // Return initial state: mouse Y, container height, and current top position\r\n          const currentTop = parseFloat(container.style.top) || 0;\r\n          return [e.clientY, { height: container.offsetHeight, top: currentTop }];\r\n        }\r\n        return prevY - e.clientY; // Inverted delta for top resize\r\n      },\r\n      (dy, startState) => {\r\n        let newHeightPx = startState.height + dy;\r\n        const maxPx = window.innerHeight * 0.95;\r\n        newHeightPx = Math.max(200, Math.min(newHeightPx, maxPx));\r\n        \r\n        // Calculate the height change\r\n        const heightChange = newHeightPx - startState.height;\r\n        \r\n        // Adjust top position inversely to height change\r\n        const heightChangeVh = (heightChange / window.innerHeight) * 100;\r\n        let newTopVh = startState.top - heightChangeVh;\r\n        \r\n        // Ensure the container doesn't go above the screen\r\n        newTopVh = Math.max(0, newTopVh);\r\n        \r\n        // Apply the changes\r\n        const newHeightVh = Math.round((newHeightPx / window.innerHeight) * 100 * 10) / 10;\r\n        const roundedTopVh = Math.round(newTopVh * 10) / 10;\r\n        \r\n        container.style.height = `${newHeightVh}vh`;\r\n        container.style.top = `${roundedTopVh}vh`;\r\n      },\r\n      () => {\r\n        const currentPage = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getCurrentPage)();\r\n        \r\n        // Save both height and position\r\n        uiManager.main.panelHeights = uiManager.main.panelHeights || {};\r\n        uiManager.main.panelHeights[currentPage] = container.style.height;\r\n        \r\n        uiManager.main.panelYPosition = uiManager.main.panelYPosition || {};\r\n        const finalTopVh = parseFloat(container.style.top) || 0;\r\n        uiManager.main.panelYPosition[currentPage] = finalTopVh;\r\n        \r\n        uiManager.main.settingsManager.saveSettings();\r\n      }\r\n    );\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/panel/panelResize.js?");

/***/ }),

/***/ "./src/styles/styles.scss":
/*!********************************!*\
  !*** ./src/styles/styles.scss ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_styles_scss__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./styles.scss */ \"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/styles/styles.scss\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_styles_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_styles_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_styles_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_styles_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/styles/styles.scss?");

/***/ }),

/***/ "./src/tooltip.js":
/*!************************!*\
  !*** ./src/tooltip.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCustomTooltip: () => (/* binding */ createCustomTooltip),\n/* harmony export */   hideTooltipElement: () => (/* binding */ hideTooltipElement),\n/* harmony export */   refreshTooltipSettings: () => (/* binding */ refreshTooltipSettings),\n/* harmony export */   updateTooltipContent: () => (/* binding */ updateTooltipContent)\n/* harmony export */ });\nlet tooltipEl = null, tooltipHideTimer = null, tooltipShowTimer = null;\r\nlet tooltipIsVisible = false, tooltipIsShown = false, tooltipCurrentTarget = null;\r\n\r\n// Cache settings once on module load\r\nlet cachedSettings = null;\r\nconst getSettings = () => {\r\n  if (cachedSettings === null) {\r\n    try {\r\n      const settings = localStorage.getItem('latestGamesSettings');\r\n      cachedSettings = settings ? JSON.parse(settings) : {};\r\n    } catch (error) {\r\n      console.warn('Failed to parse latestGamesSettings from localStorage:', error);\r\n      cachedSettings = {};\r\n    }\r\n  }\r\n  return cachedSettings;\r\n};\r\n\r\n// Helper function to check if tooltip should be shown based on type and settings\r\nconst shouldShowTooltip = (type) => {\r\n  if (type === 'info') {\r\n    const settings = getSettings();\r\n    return settings.showHelpTooltips === true;\r\n  }\r\n  // For other types like 'stats', always show regardless of settings\r\n  return true;\r\n};\r\n\r\nconst positionTooltip = (clientX, clientY) => {\r\n  if (!tooltipEl) return;\r\n  let leftPos = clientX + 10;\r\n  const tooltipWidth = tooltipEl.offsetWidth;\r\n  const screenWidth = window.innerWidth;\r\n\r\n  // Adjust position if overflowing\r\n  leftPos = Math.min(Math.max(leftPos, 10), screenWidth - tooltipWidth - 10);\r\n\r\n  tooltipEl.style.left = `${leftPos}px`;\r\n  tooltipEl.style.top = `${clientY + 18}px`;\r\n};\r\n\r\nconst tooltipTrackMouse = e => tooltipEl && positionTooltip(e.clientX, e.clientY);\r\n\r\nfunction hideTooltipElement() {\r\n  tooltipIsVisible = false;\r\n  tooltipCurrentTarget = null;\r\n  clearTimeout(tooltipShowTimer);\r\n  clearTimeout(tooltipHideTimer);\r\n\r\n  tooltipHideTimer = setTimeout(() => {\r\n    if (!tooltipEl) return;\r\n    tooltipEl.style.opacity = '0';\r\n    tooltipIsShown = false;\r\n\r\n    setTimeout(() => {\r\n      if (!tooltipIsVisible && tooltipEl) {\r\n        tooltipEl.style.display = 'none';\r\n        tooltipEl.textContent = ''; // Clear tooltip content\r\n        document.removeEventListener('mousemove', tooltipTrackMouse);\r\n      }\r\n    }, 50);\r\n  }, 100);\r\n}\r\n\r\nnew MutationObserver(() => {\r\n  if (tooltipCurrentTarget && !document.contains(tooltipCurrentTarget)) hideTooltipElement();\r\n}).observe(document, { childList: true, subtree: true });\r\n\r\nfunction createCustomTooltip(element, tooltipContent, type = 'info') {\r\n  if (tooltipContent == null) return; // Skip if content is null/undefined\r\n  \r\n  // Check if tooltip should be shown based on type and settings\r\n  if (!shouldShowTooltip(type)) return;\r\n\r\n  // Always update the tooltip content stored on the element.\r\n  element._tooltipContent = tooltipContent;\r\n  element._tooltipType = type;\r\n\r\n  if (!element._tooltipInitialized) {\r\n    element._tooltipInitialized = true;\r\n\r\n    tooltipEl ||= (() => {\r\n      const tooltipDiv = document.createElement('div');\r\n      tooltipDiv.classList.add(\"custom-tooltip-popup\");\r\n      tooltipDiv.style.display = 'none';\r\n      tooltipDiv.style.opacity = '0';\r\n      document.body.appendChild(tooltipDiv);\r\n      return tooltipDiv;\r\n    })();\r\n\r\n    element.addEventListener('mouseenter', e => {\r\n      // Double-check settings on hover in case they changed\r\n      if (!shouldShowTooltip(element._tooltipType || 'info')) return;\r\n      \r\n      tooltipIsVisible = true;\r\n      tooltipCurrentTarget = element;\r\n      clearTimeout(tooltipHideTimer);\r\n      clearTimeout(tooltipShowTimer);\r\n\r\n      // Highlight [Action]Message pairs and headers in the tooltip content\r\n      tooltipEl.innerHTML = highlightTooltipActions(element._tooltipContent);\r\n      tooltipEl.style.display = 'flex';\r\n      tooltipEl.style.opacity = '0';\r\n      tooltipEl.offsetHeight;\r\n      positionTooltip(e.clientX, e.clientY);\r\n      document.addEventListener('mousemove', tooltipTrackMouse);\r\n\r\n      tooltipShowTimer = setTimeout(() => {\r\n        tooltipEl.style.opacity = '1';\r\n        tooltipIsShown = true;\r\n      }, 600);\r\n    });\r\n\r\n    element.addEventListener('mouseleave', () => {\r\n      hideTooltipElement();\r\n      document.removeEventListener('mousemove', tooltipTrackMouse);\r\n    });\r\n    element.addEventListener('click', hideTooltipElement);\r\n  }\r\n}\r\n\r\n/**\r\n * Update tooltip content for an existing element\r\n * @param {HTMLElement} element - The element with tooltip\r\n * @param {string} newContent - New tooltip content\r\n * @param {string} type - Tooltip type ('info', 'stats', etc.)\r\n */\r\nfunction updateTooltipContent(element, newContent, type = 'info') {\r\n  if (!element._tooltipInitialized) {\r\n    // If tooltip wasn't initialized, create it\r\n    createCustomTooltip(element, newContent, type);\r\n    return;\r\n  }\r\n  \r\n  // Check if tooltip should be shown based on type and settings\r\n  if (!shouldShowTooltip(type)) return;\r\n  \r\n  // Update the stored content and type\r\n  element._tooltipContent = newContent;\r\n  element._tooltipType = type;\r\n  \r\n  // If this element is currently being hovered (even if tooltip isn't fully shown yet)\r\n  if (tooltipCurrentTarget === element && tooltipIsVisible && tooltipEl) {\r\n    tooltipEl.innerHTML = highlightTooltipActions(newContent);\r\n    \r\n    // If tooltip is not yet shown, show it immediately\r\n    if (!tooltipIsShown) {\r\n      clearTimeout(tooltipShowTimer);\r\n      tooltipEl.style.opacity = '1';\r\n      tooltipIsShown = true;\r\n    }\r\n    \r\n    // Reposition tooltip in case content size changed\r\n    const rect = element.getBoundingClientRect();\r\n    positionTooltip(rect.left + rect.width / 2, rect.bottom);\r\n  }\r\n}\r\n\r\n/**\r\n * Refresh cached settings (call this when settings change)\r\n */\r\nfunction refreshTooltipSettings() {\r\n  cachedSettings = null;\r\n}\r\n\r\nfunction highlightTooltipActions(str) {\r\n  let result = '';\r\n  const headerRegex = /(## [^[]*)/g;          // Matches headers like \"## Header\"\r\n  const actionRegex = /\\[([^\\]]+)\\]([^\\[]*)/g; // Matches [Action]Message pairs\r\n\r\n  // Split on headers, keep headers in the array\r\n  const parts = str.split(headerRegex);\r\n\r\n  parts.forEach(part => {\r\n    if (part.startsWith('## ')) {\r\n      // Header\r\n      const header = part.slice(3).trim();\r\n      result += `<div class=\"tooltip-header\">${header}</div>`;\r\n    } else {\r\n      // Try to pull out any [Action]Message pairs\r\n      actionRegex.lastIndex = 0;\r\n      const matches = [...part.matchAll(actionRegex)];\r\n\r\n      if (matches.length) {\r\n        // Emit each pair\r\n        matches.forEach(match => {\r\n          const action = match[1];\r\n          const message = match[2].trim();\r\n          result += `\r\n            <div class=\"tooltip-item\">\r\n              <span class=\"tooltip-action\">${action}&nbsp;</span>\r\n              <span class=\"tooltip-message\">${message}</span>\r\n            </div>`;\r\n        });\r\n      } else if (part.trim()) {\r\n        // No pairs: emit the raw text as a single message\r\n        result += `\r\n          <div class=\"tooltip-item\">\r\n            <span class=\"tooltip-message\">${part.trim()}</span>\r\n          </div>`;\r\n      }\r\n    }\r\n  });\r\n\r\n  return result;\r\n}\r\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/tooltip.js?");

/***/ }),

/***/ "./src/utils.js":
/*!**********************!*\
  !*** ./src/utils.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createElement: () => (/* binding */ createElement),\n/* harmony export */   extractVocabularyId: () => (/* binding */ extractVocabularyId),\n/* harmony export */   generateUniqueId: () => (/* binding */ generateUniqueId),\n/* harmony export */   getContainerSelector: () => (/* binding */ getContainerSelector),\n/* harmony export */   getCurrentPage: () => (/* binding */ getCurrentPage),\n/* harmony export */   sleep: () => (/* binding */ sleep)\n/* harmony export */ });\nfunction generateRandomString() {\r\n  return Array.from(crypto.getRandomValues(new Uint8Array(32)))\r\n    .map(b => (b % 36).toString(36))\r\n    .join('');\r\n}\r\n\r\nfunction generateUniqueId(groups) {\r\n  const allIds = new Set([\r\n    ...groups.map(g => g.id),\r\n    ...groups.flatMap(g => g.games.map(game => game.id))\r\n  ]);\r\n  let id;\r\n  do {\r\n    id = generateRandomString();\r\n  } while (allIds.has(id));\r\n  return id;\r\n}\r\n\r\nfunction sleep(ms) {\r\n  let timeoutId;\r\n  const promise = new Promise(resolve => {\r\n    timeoutId = setTimeout(resolve, ms);\r\n  });\r\n\r\n  promise.cancel = () => {\r\n    if (timeoutId) {\r\n      clearTimeout(timeoutId);\r\n      timeoutId = null;\r\n    }\r\n  };\r\n\r\n  return promise;\r\n}\r\n\r\n// Function to determine the current page based on URL pathname\r\nfunction getCurrentPage() {\r\n  const pathname = window.location.pathname;\r\n  if (pathname === '/') return 'main';\r\n  if (pathname === '/gamelist/') return 'gamelist';\r\n  if (pathname === '/u/') return 'profile';\r\n  if (pathname.startsWith('/chatlogs/')) return 'chatlogs';\r\n  if (pathname.startsWith('/top/')) return 'rating';\r\n  if (pathname.startsWith('/vocs/')) return 'vocabularies';\r\n  if (pathname === '/about/') return 'about';\r\n  if (pathname === '/fuel/') return 'donation';\r\n  if (pathname.startsWith('/forum/')) return 'forum';\r\n  if (pathname === '/g/') return 'game';\r\n  return 'unknown';\r\n}\r\n\r\nfunction createElement(tag, options = {}) {\r\n  const element = document.createElement(tag);\r\n  if (options.className) {\r\n    element.className = options.className;\r\n  }\r\n  if (options.id) {\r\n    element.id = options.id;\r\n  }\r\n  if (options.innerHTML) {\r\n    element.innerHTML = options.innerHTML;\r\n  }\r\n  if (options.textContent) {\r\n    element.textContent = options.textContent;\r\n  }\r\n  if (options.href) {\r\n    element.href = options.href;\r\n  }\r\n  if (options.title) {\r\n    element.title = options.title;\r\n  }\r\n  if (options.src) {\r\n    element.src = options.src;\r\n  }\r\n  if (options.style) {\r\n    Object.assign(element.style, options.style);\r\n  }\r\n  if (options.attributes) {\r\n    Object.entries(options.attributes).forEach(([key, value]) => {\r\n      element.setAttribute(key, value);\r\n    });\r\n  }\r\n  return element;\r\n}\r\n\r\n/**\r\n * Get the appropriate container selector based on current page\r\n * @returns {string|null} CSS selector for the container\r\n */\r\nfunction getContainerSelector() {\r\n  const page = getCurrentPage();\r\n  if (page === 'vocabularies') return '.columns.voclist';\r\n  if (page === 'profile') return '.profile-root, .dlg-profile-vocs .vocs';\r\n  if (page === 'forum') return '#posts-list .list';\r\n  return null;\r\n}\r\n\r\n/**\r\n * Extract vocabulary ID from an anchor’s href only if there’s nothing after the id.\r\n * For links containing \"/create/\", we check for a query parameter \"voc\".\r\n * For other links, we only accept a URL whose pathname exactly matches \"/vocs/{id}/\"\r\n * with no additional segments.\r\n * @param {HTMLElement} anchor - The anchor element.\r\n * @returns {string|null} The extracted vocabulary ID, or null if invalid.\r\n */\r\nfunction extractVocabularyId(anchor) {\r\n  const href = anchor.getAttribute('href');\r\n  if (/\\/create\\//.test(href)) {\r\n    const createMatch = href.match(/[?&]voc=(\\d+)/);\r\n    return createMatch ? createMatch[1] : null;\r\n  } else {\r\n    try {\r\n      const url = new URL(href, window.location.origin);\r\n      const pathname = url.pathname;\r\n      const strictMatch = pathname.match(/^\\/vocs\\/(\\d+)\\/?$/);\r\n      return strictMatch ? strictMatch[1] : null;\r\n    } catch (error) {\r\n      return null;\r\n    }\r\n  }\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/utils.js?");

/***/ }),

/***/ "./src/vocabularyChecker.js":
/*!**********************************!*\
  !*** ./src/vocabularyChecker.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   highlightExistingVocabularies: () => (/* binding */ highlightExistingVocabularies)\n/* harmony export */ });\n/* harmony import */ var _icons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./icons.js */ \"./src/icons.js\");\n/* harmony import */ var _tooltip_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tooltip.js */ \"./src/tooltip.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"./src/utils.js\");\n\r\n\r\n\r\n\r\nlet vocIdToGroups = new Map();\r\nlet vocabularyHighlightObserver = null;\r\n\r\nconst VOCABULARY_ANCHOR_SELECTOR = 'a.name[href*=\"/vocs/\"], a[href*=\"/create/\"]';\r\n\r\n// List of selectors to exclude from processing\r\nconst EXCLUSION_SELECTORS = [\r\n  '#latest-games-container',\r\n  '.userpanel',\r\n  '#head',\r\n  '#footer'\r\n];\r\n\r\nfunction shouldProcessElement(element) {\r\n  // Check if element is within excluded containers\r\n  for (const selector of EXCLUSION_SELECTORS) {\r\n    if (element.closest(selector)) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction processAnchor(anchor) {\r\n  const vocId = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.extractVocabularyId)(anchor);\r\n  if (!vocId) return;\r\n\r\n  const parent = anchor.parentNode;\r\n  const oldIcon = parent.querySelector('.kg-voc-checkmark');\r\n  if (oldIcon) oldIcon.remove();\r\n\r\n  if (vocIdToGroups.has(vocId)) {\r\n    const icon = document.createElement('span');\r\n    icon.className = 'kg-voc-checkmark';\r\n    icon.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_0__.icons.checkmark;\r\n    (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_1__.createCustomTooltip)(icon, 'Словарь уже существует в группе: ' + vocIdToGroups.get(vocId).join(', '));\r\n\r\n    const isVocPage = window.location.pathname.startsWith('/vocs/');\r\n    const desc = parent.querySelector('.desc');\r\n\r\n    if (isVocPage && desc) {\r\n      parent.insertBefore(icon, desc);\r\n    } else {\r\n      // Insert the icon as the first child of the parent (before the anchor)\r\n      parent.insertBefore(icon, parent.firstChild);\r\n    }\r\n  }\r\n}\r\n\r\nfunction processExistingAnchors() {\r\n  const anchors = document.querySelectorAll(VOCABULARY_ANCHOR_SELECTOR);\r\n  anchors.forEach(anchor => {\r\n    if (shouldProcessElement(anchor)) {\r\n      processAnchor(anchor);\r\n    }\r\n  });\r\n}\r\n\r\nfunction handleMutations(mutations) {\r\n  mutations.forEach(mutation => {\r\n    mutation.addedNodes.forEach(node => {\r\n      if (node.nodeType === Node.ELEMENT_NODE && shouldProcessElement(node)) {\r\n        if (node.matches && node.matches(VOCABULARY_ANCHOR_SELECTOR)) {\r\n          processAnchor(node);\r\n        }\r\n\r\n        const anchors = node.querySelectorAll && node.querySelectorAll(VOCABULARY_ANCHOR_SELECTOR);\r\n        if (anchors) {\r\n          anchors.forEach(anchor => {\r\n            if (shouldProcessElement(anchor)) {\r\n              processAnchor(anchor);\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    if (mutation.type === 'attributes' && mutation.attributeName === 'href') {\r\n      const target = mutation.target;\r\n      if (shouldProcessElement(target) && target.matches && target.matches('a')) {\r\n        processAnchor(target);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nfunction startVocabularyHighlightObserver() {\r\n  if (vocabularyHighlightObserver) {\r\n    vocabularyHighlightObserver.disconnect();\r\n  }\r\n\r\n  vocabularyHighlightObserver = new MutationObserver(handleMutations);\r\n  vocabularyHighlightObserver.observe(document.body, {\r\n    childList: true,\r\n    subtree: true,\r\n    attributes: true,\r\n    attributeFilter: ['href']\r\n  });\r\n}\r\n\r\nfunction highlightExistingVocabularies(groups) {\r\n  const currentPage = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.getCurrentPage)();\r\n  if (!['profile', 'forum', 'vocabularies'].includes(currentPage)) {\r\n    return;\r\n  }\r\n\r\n  vocIdToGroups.clear();\r\n  groups.forEach(group => {\r\n    group.games.forEach(game => {\r\n      if (game.params && game.params.vocId) {\r\n        const vocIdStr = String(game.params.vocId);\r\n        if (!vocIdToGroups.has(vocIdStr)) {\r\n          vocIdToGroups.set(vocIdStr, []);\r\n        }\r\n        vocIdToGroups.get(vocIdStr).push(group.name || group.title || 'Группа');\r\n      }\r\n    });\r\n  });\r\n\r\n  processExistingAnchors();\r\n  startVocabularyHighlightObserver();\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/vocabularyChecker.js?");

/***/ }),

/***/ "./src/vocabularyCreation.js":
/*!***********************************!*\
  !*** ./src/vocabularyCreation.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   attachVocabularyCreation: () => (/* binding */ attachVocabularyCreation),\n/* harmony export */   fetchVocabularyBasicData: () => (/* binding */ fetchVocabularyBasicData),\n/* harmony export */   isVocabularyCreationSupported: () => (/* binding */ isVocabularyCreationSupported),\n/* harmony export */   showVocabularyCreationPopup: () => (/* binding */ showVocabularyCreationPopup)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./src/utils.js\");\n/* harmony import */ var _vocabularyChecker_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vocabularyChecker.js */ \"./src/vocabularyChecker.js\");\n/* harmony import */ var _menuPopup_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./menuPopup.js */ \"./src/menuPopup.js\");\n/* harmony import */ var _vocabularyParser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./vocabularyParser.js */ \"./src/vocabularyParser.js\");\n\r\n\r\n\r\n\r\n\r\n// Function to fetch basic vocabulary data (name, rating, fans) from the server\r\nasync function fetchVocabularyBasicData(vocId) {\r\n  const controller = new AbortController();\r\n  const signal = controller.signal;\r\n\r\n  try {\r\n    const response = await fetch(`https://klavogonki.ru/vocs/${vocId}/`, { signal });\r\n    if (!response.ok) {\r\n      console.error('Failed to fetch vocabulary content for vocId:', vocId);\r\n      return null;\r\n    }\r\n\r\n    const reader = response.body.getReader();\r\n    const decoder = new TextDecoder();\r\n    let htmlChunk = '';\r\n\r\n    while (true) {\r\n      const { done, value } = await reader.read();\r\n      if (done) break;\r\n\r\n      htmlChunk += decoder.decode(value, { stream: true });\r\n\r\n      // Quick sanity check: if the chunk doesn't even contain \"</td>\", skip full DOM parse\r\n      if (!htmlChunk.includes('</td>')) continue;\r\n\r\n      const doc = new DOMParser().parseFromString(htmlChunk, 'text/html');\r\n      const userTitle = doc.querySelector('.user-title');\r\n      if (!userTitle) continue;\r\n\r\n      const titleCell = userTitle.querySelector('td.title');\r\n      if (!titleCell) continue;\r\n\r\n      const ratingSpan = titleCell.querySelector('#rating_cnt');\r\n      const fansSpan = titleCell.querySelector('#fav_cnt');\r\n      if (ratingSpan && fansSpan) {\r\n        // abort the fetch (stops downloading the rest of the page)\r\n        controller.abort();\r\n\r\n        // extract data\r\n        const vocabularyName = titleCell.childNodes[0].textContent.trim();\r\n        const ratingCount = parseInt(ratingSpan.textContent.trim(), 10);\r\n        const fansCount = parseInt(fansSpan.textContent.trim(), 10);\r\n\r\n        return { vocId, vocabularyName, ratingCount, fansCount };\r\n      }\r\n    }\r\n\r\n    return null; // didn't find the data\r\n  } catch (err) {\r\n    if (err.name === 'AbortError') {\r\n      // Fetch was aborted because we already got our data — not really an error\r\n      return null;\r\n    }\r\n    console.error('Error fetching/parsing vocabulary basic data:', err);\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction addGameToGroup(group, vocId, vocName, groups, main) {\r\n  if (group.games.some(game => String(game.params?.vocId) === String(vocId))) {\r\n    alert(`Этот словарь уже добавлен в ${group.title}`);\r\n    return;\r\n  }\r\n  const newGame = {\r\n    id: (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.generateUniqueId)(groups),\r\n    params: {\r\n      gametype: 'voc',\r\n      vocName: vocName,\r\n      vocId: vocId,\r\n      type: 'normal',\r\n      level_from: 1,\r\n      level_to: 9,\r\n      timeout: 10,\r\n      qual: 0,\r\n      premium_abra: 0\r\n    },\r\n    pin: 1\r\n  };\r\n  group.games.push(newGame);\r\n  let latestGamesData = main.gamesManager.latestGamesData || {};\r\n  latestGamesData = { ...latestGamesData, latestGroupAddedGameId: group.id };\r\n  main.gamesManager.latestGamesData = latestGamesData;\r\n  main.gamesManager.saveGameData();\r\n  main.uiManager.refreshContainer();\r\n  (0,_vocabularyChecker_js__WEBPACK_IMPORTED_MODULE_1__.highlightExistingVocabularies)(groups);\r\n}\r\n\r\n/**\r\n * Show a popup to add a vocabulary to a group.\r\n * @param {Array} groups - Array of group objects.\r\n * @param {MouseEvent} event - The contextmenu event.\r\n * @param {string} vocId - The vocabulary ID to add.\r\n * @param {string} vocName - The vocabulary name from the link text.\r\n * @param {object} main - The main manager instance.\r\n */\r\nfunction showVocabularyCreationPopup(groups, event, vocId, vocName, main) {\r\n  (0,_vocabularyParser_js__WEBPACK_IMPORTED_MODULE_3__.hideTooltip)(); // Hide any existing tooltip\r\n\r\n  // Create button configurations for each group\r\n  const buttonConfigs = groups.map(group => {\r\n    const alreadyExists = group.games.some(game => String(game.params?.vocId) === String(vocId));\r\n    return {\r\n      text: group.title,\r\n      className: `group-tab${alreadyExists ? ' active' : ''}`,\r\n      dataset: { groupId: group.id },\r\n      onClick: () => {\r\n        addGameToGroup(group, vocId, vocName, groups, main);\r\n      }\r\n    };\r\n  });\r\n\r\n  (0,_menuPopup_js__WEBPACK_IMPORTED_MODULE_2__.createPopup)(buttonConfigs, event, 'vocabulary-creation-popup', 'Добавить');\r\n}\r\n\r\n/**\r\n * Check if current page supports vocabulary creation\r\n * @returns {boolean} True if vocabulary creation is supported on current page\r\n */\r\nfunction isVocabularyCreationSupported() {\r\n  return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getContainerSelector)() !== null;\r\n}\r\n\r\n/**\r\n * Extract vocabulary name from anchor element\r\n * @param {HTMLElement} anchor - The anchor element\r\n * @returns {string} The vocabulary name\r\n */\r\nfunction extractVocabularyName(anchor) {\r\n  return anchor.textContent.trim();\r\n}\r\n\r\n/**\r\n * Tracks which containers have had our listener attached\r\n */\r\nconst attachedContainers = new WeakSet();\r\n\r\n/**\r\n * Attach event listener to a container if not already attached\r\n * @param {HTMLElement} container - The container element\r\n * @param {Array} groups - Array of group objects\r\n * @param {object} main - The main manager instance\r\n */\r\nfunction attachEventToContainer(container, groups, main) {\r\n  if (attachedContainers.has(container)) return;\r\n  attachedContainers.add(container);\r\n\r\n  container.addEventListener('contextmenu', async (e) => {\r\n    const anchor = e.target.closest('a');\r\n    if (!anchor) return;\r\n\r\n    const href = anchor.getAttribute('href');\r\n    if (!href || (!href.includes('/vocs/') && !href.includes('/create/'))) return;\r\n\r\n    const vocId = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.extractVocabularyId)(anchor);\r\n    if (!vocId) {\r\n      console.warn('Invalid vocabulary link (extra path segments present), ignoring:', href);\r\n      return;\r\n    }\r\n\r\n    let latestGamesData = main.gamesManager.latestGamesData || {};\r\n\r\n    // Handle ctrl + contextmenu case FIRST\r\n    if (e.ctrlKey) {\r\n      const previousGroupId = latestGamesData.latestGroupAddedGameId;\r\n      if (previousGroupId) {\r\n        const group = groups.find(g => g.id === previousGroupId);\r\n        if (group) {\r\n          // Only prevent default if we're actually handling the event\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n\r\n          let vocName = '';\r\n          if (href.includes('/create/')) {\r\n            const basicData = await fetchVocabularyBasicData(vocId);\r\n            if (basicData && basicData.vocabularyName) {\r\n              vocName = basicData.vocabularyName;\r\n            } else {\r\n              vocName = prompt('Не удалось получить название словаря. Введите название для словаря:') || '';\r\n            }\r\n          } else {\r\n            vocName = extractVocabularyName(anchor);\r\n          }\r\n\r\n          addGameToGroup(group, vocId, vocName, groups, main);\r\n          return; // Exit early\r\n        }\r\n      }\r\n      // If ctrl is held but no previous group found, let default context menu show\r\n      return;\r\n    }\r\n\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    let vocName = '';\r\n    if (href.includes('/create/')) {\r\n      const basicData = await fetchVocabularyBasicData(vocId);\r\n      if (basicData && basicData.vocabularyName) {\r\n        vocName = basicData.vocabularyName;\r\n      } else {\r\n        // If fetching basic data fails, prompt the user to set a name manually.\r\n        vocName = prompt('Не удалось получить название словаря. Введите название для словаря:') || '';\r\n      }\r\n    } else {\r\n      vocName = extractVocabularyName(anchor);\r\n    }\r\n\r\n    showVocabularyCreationPopup(groups, e, vocId, vocName, main);\r\n  });\r\n}\r\n\r\n/**\r\n * Wait for elements matching the selector to be added to the DOM and execute callback for each.\r\n * @param {string} selector - CSS selector to wait for\r\n * @param {Function} callback - Function to execute when a matching element is added\r\n */\r\nfunction waitFor(selector, callback) {\r\n  const observer = new MutationObserver((mutations) => {\r\n    mutations.forEach((mutation) => {\r\n      if (mutation.type === 'childList') {\r\n        mutation.addedNodes.forEach((node) => {\r\n          if (node.nodeType === Node.ELEMENT_NODE) {\r\n            if (node.matches(selector)) {\r\n              callback(node);\r\n            }\r\n            const matchingDescendants = node.querySelectorAll(selector);\r\n            matchingDescendants.forEach((el) => callback(el));\r\n          }\r\n        });\r\n      }\r\n    });\r\n  });\r\n  observer.observe(document.body, { childList: true, subtree: true });\r\n}\r\n\r\n/**\r\n * Attach contextmenu event to vocabulary links within appropriate containers.\r\n * @param {Array} groups - Array of group objects.\r\n * @param {object} main - The main manager instance.\r\n */\r\nfunction attachVocabularyCreation(groups, main) {\r\n  const containerSelector = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getContainerSelector)();\r\n\r\n  if (!containerSelector) {\r\n    console.warn('Vocabulary creation is not supported on this page.');\r\n    return;\r\n  }\r\n\r\n  // Handle multiple selectors (comma-separated)\r\n  const selectors = containerSelector.split(',').map(s => s.trim());\r\n\r\n  selectors.forEach(selector => {\r\n    // Immediately attach if container exists now\r\n    const container = document.querySelector(selector);\r\n    if (container) {\r\n      attachEventToContainer(container, groups, main);\r\n    }\r\n    // Also observe for future containers\r\n    waitFor(selector, (el) => attachEventToContainer(el, groups, main));\r\n  });\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/vocabularyCreation.js?");

/***/ }),

/***/ "./src/vocabularyMigration.js":
/*!************************************!*\
  !*** ./src/vocabularyMigration.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   migrateGame: () => (/* binding */ migrateGame),\n/* harmony export */   showMigrationPopup: () => (/* binding */ showMigrationPopup)\n/* harmony export */ });\n/* harmony import */ var _menuPopup_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./menuPopup.js */ \"./src/menuPopup.js\");\n/* harmony import */ var _tooltip_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tooltip.js */ \"./src/tooltip.js\");\n\r\n\r\n\r\nfunction showMigrationPopup(main, groups, currentGroupId, event, gameId) {\r\n  (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_1__.hideTooltipElement)(); // Hide any existing tooltip\r\n\r\n  // Create button configurations for groups (excluding current group)\r\n  const buttonConfigs = groups\r\n    .filter(group => group.id !== currentGroupId)\r\n    .map(group => ({\r\n      text: group.title,\r\n      className: 'group-tab',\r\n      dataset: { groupId: group.id },\r\n      onClick: () => {\r\n        migrateGame(main, gameId, group.id);\r\n      }\r\n    }));\r\n\r\n  (0,_menuPopup_js__WEBPACK_IMPORTED_MODULE_0__.createPopup)(buttonConfigs, event, 'game-migration-popup', 'Переместить');\r\n}\r\n\r\nfunction migrateGame(main, gameId, targetGroupId) {\r\n  const sourceGroup = main.groupsManager.groups.find(group => group.id === main.groupsManager.currentGroupId);\r\n  const targetGroup = main.groupsManager.groups.find(group => group.id === targetGroupId);\r\n\r\n  if (!sourceGroup || !targetGroup) return;\r\n\r\n  const gameIndex = sourceGroup.games.findIndex(game => game.id === gameId);\r\n  if (gameIndex === -1) return;\r\n\r\n  const [game] = sourceGroup.games.splice(gameIndex, 1);\r\n  targetGroup.games.push(game);\r\n\r\n  main.gamesManager.saveGameData();\r\n  main.uiManager.refreshContainer();\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/vocabularyMigration.js?");

/***/ }),

/***/ "./src/vocabularyParser.js":
/*!*********************************!*\
  !*** ./src/vocabularyParser.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   attachVocabularyParser: () => (/* binding */ attachVocabularyParser),\n/* harmony export */   hideTooltip: () => (/* binding */ hideTooltip)\n/* harmony export */ });\n// Function to fetch and parse vocabulary content from a URL\r\nasync function fetchVocabularyContent(vocId) {\r\n  try {\r\n    const response = await fetch(`https://klavogonki.ru/vocs/${vocId}/`);\r\n    const htmlText = await response.text();\r\n    const parser = new DOMParser();\r\n    const doc = parser.parseFromString(htmlText, 'text/html');\r\n    \r\n    // Find the <div class=\"words\"> element\r\n    const wordsDiv = doc.querySelector('.words');\r\n    if (!wordsDiv) {\r\n      console.warn(`No element with class \"words\" found for vocId ${vocId}`);\r\n      return 'Vocabulary content not found';\r\n    }\r\n    \r\n    // Extract all table rows with text content\r\n    const rows = wordsDiv.querySelectorAll('tr');\r\n    if (rows.length === 0) {\r\n      console.warn(`No table rows found for vocId ${vocId}`);\r\n      return 'No words available';\r\n    }\r\n    \r\n    // Build the text, handling both numbered and non-numbered formats\r\n    const vocabularyText = Array.from(rows)\r\n      .map((row, index) => {\r\n        const numElement = row.querySelector('td.num');\r\n        const textElement = row.querySelector('td.text');\r\n        \r\n        // Skip rows without text content\r\n        if (!textElement) {\r\n          return null;\r\n        }\r\n        \r\n        // Convert <br> tags to newlines and get text content\r\n        const textWithBreaks = textElement.innerHTML\r\n          .replace(/<br\\s*\\/?>/gi, '\\n')\r\n          .replace(/<[^>]*>/g, '') // Remove any other HTML tags\r\n          .trim();\r\n        \r\n        // Skip empty rows or placeholder rows\r\n        if (textWithBreaks === '' || textWithBreaks === '…') {\r\n          return null;\r\n        }\r\n        \r\n        // Handle numbered format\r\n        if (numElement) {\r\n          const num = numElement.textContent.trim();\r\n          \r\n          // Skip empty or placeholder numbers\r\n          if (num === '' || num === '…') {\r\n            return null;\r\n          }\r\n          \r\n          return `${num}. ${textWithBreaks}`;\r\n        } else {\r\n          // Handle non-numbered format - add sequential numbering\r\n          return `${index + 1}. ${textWithBreaks}`;\r\n        }\r\n      })\r\n      .filter(item => item !== null)\r\n      .join('\\n\\n');\r\n    \r\n    return vocabularyText;\r\n  } catch (error) {\r\n    console.error(`Error fetching vocabulary content for vocId ${vocId}:`, error);\r\n    return 'Error loading vocabulary';\r\n  }\r\n}\r\n\r\n// Tooltip management\r\nlet currentTooltip = null;\r\nlet hideTimeout = null;\r\nlet showTimeout = null;\r\nlet currentAnchor = null;\r\n\r\nfunction createVocabularyTooltip(content) {\r\n  const tooltip = document.createElement('div');\r\n  tooltip.className = 'vocabulary-tooltip-popup';\r\n  \r\n  // Process content to wrap numbers in spans\r\n  const processedContent = content.replace(/^(\\d+)\\.\\s/gm, '<span class=\"tooltip-number\">$1.</span> ');\r\n  tooltip.innerHTML = processedContent;\r\n  \r\n  document.body.appendChild(tooltip);\r\n  return tooltip;\r\n}\r\n\r\nfunction showTooltip(anchor, content) {\r\n  // Clear any existing timeouts\r\n  if (hideTimeout) {\r\n    clearTimeout(hideTimeout);\r\n    hideTimeout = null;\r\n  }\r\n  if (showTimeout) {\r\n    clearTimeout(showTimeout);\r\n    showTimeout = null;\r\n  }\r\n  \r\n  // If tooltip already exists for same anchor, just keep it visible\r\n  if (currentTooltip && currentAnchor === anchor) {\r\n    return;\r\n  }\r\n  \r\n  // Remove existing tooltip if different anchor\r\n  if (currentTooltip) {\r\n    hideTooltip();\r\n  }\r\n  \r\n  // Set up delayed show\r\n  showTimeout = setTimeout(() => {\r\n    currentAnchor = anchor;\r\n    currentTooltip = createVocabularyTooltip(content);\r\n    \r\n    // Position and show tooltip\r\n    positionTooltip(anchor, currentTooltip);\r\n    \r\n    // Add event listeners to tooltip for hover behavior\r\n    currentTooltip.addEventListener('mouseenter', () => {\r\n      if (hideTimeout) {\r\n        clearTimeout(hideTimeout);\r\n        hideTimeout = null;\r\n      }\r\n    });\r\n    \r\n    currentTooltip.addEventListener('mouseleave', () => {\r\n      startHideTimeout();\r\n    });\r\n    \r\n    showTimeout = null;\r\n  }, 400); // 400ms delay before showing\r\n}\r\n\r\nfunction hideTooltip() {\r\n  if (currentTooltip) {\r\n    currentTooltip.remove();\r\n    currentTooltip = null;\r\n    currentAnchor = null;\r\n  }\r\n  if (hideTimeout) {\r\n    clearTimeout(hideTimeout);\r\n    hideTimeout = null;\r\n  }\r\n  if (showTimeout) {\r\n    clearTimeout(showTimeout);\r\n    showTimeout = null;\r\n  }\r\n}\r\n\r\nfunction startHideTimeout() {\r\n  if (hideTimeout) {\r\n    clearTimeout(hideTimeout);\r\n  }\r\n  hideTimeout = setTimeout(() => {\r\n    hideTooltip();\r\n  }, 300); // 300ms delay before hiding\r\n}\r\n\r\nfunction positionTooltip(anchor, tooltip) {\r\n  const anchorRect = anchor.getBoundingClientRect();\r\n  const viewportWidth = window.innerWidth;\r\n  const viewportHeight = window.innerHeight;\r\n  const margin = 10;\r\n  \r\n  // Get tooltip dimensions\r\n  const tooltipRect = tooltip.getBoundingClientRect();\r\n  \r\n  let left = anchorRect.left;\r\n  let top = anchorRect.bottom + 5;\r\n  \r\n  // Adjust horizontal position to stay within viewport\r\n  if (left + tooltipRect.width > viewportWidth - margin) {\r\n    left = viewportWidth - tooltipRect.width - margin;\r\n  }\r\n  if (left < margin) {\r\n    left = margin;\r\n  }\r\n  \r\n  // Adjust vertical position to stay within viewport\r\n  if (top + tooltipRect.height > viewportHeight - margin) {\r\n    // Try positioning above the anchor\r\n    const topAbove = anchorRect.top - tooltipRect.height - 5;\r\n    if (topAbove >= margin) {\r\n      top = topAbove;\r\n    } else {\r\n      // If it doesn't fit above either, position at top of viewport\r\n      top = margin;\r\n    }\r\n  }\r\n  \r\n  // Ensure tooltip doesn't go above viewport\r\n  if (top < margin) {\r\n    top = margin;\r\n  }\r\n  \r\n  tooltip.style.left = `${left}px`;\r\n  tooltip.style.top = `${top}px`;\r\n}\r\n\r\n// Function to attach the delegated event listener\r\nfunction attachVocabularyParser() {\r\n  const voclist = document.querySelector('.columns.voclist');\r\n  if (!voclist) {\r\n    console.warn('Element with class \"columns voclist\" not found.');\r\n    return;\r\n  }\r\n  \r\n  voclist.addEventListener('mouseenter', async (e) => {\r\n    if (!e.shiftKey) return; // Only trigger on Shift + mouseenter\r\n    const anchor = e.target.closest('a.name[href*=\"/vocs/\"]');\r\n    if (anchor) {\r\n      // Extract vocId from href (e.g., /vocs/1885/)\r\n      const href = anchor.getAttribute('href');\r\n      const match = href.match(/\\/vocs\\/(\\d+)(?:\\/|$)/);\r\n      if (!match) {\r\n        console.warn(`Invalid vocabulary href: ${href}`);\r\n        return;\r\n      }\r\n      \r\n      const vocId = match[1];\r\n      \r\n      // Check if tooltip content is already cached\r\n      if (!anchor._tooltipContent) {\r\n        // First parse the text, then display\r\n        fetchVocabularyContent(vocId).then(content => {\r\n          // Cache the content\r\n          anchor._tooltipContent = content;\r\n          // Show tooltip with parsed content\r\n          showTooltip(anchor, content);\r\n        });\r\n      } else {\r\n        // Use cached content\r\n        showTooltip(anchor, anchor._tooltipContent);\r\n      }\r\n    }\r\n  }, { capture: true });\r\n  \r\n  voclist.addEventListener('mouseleave', (e) => {\r\n    const anchor = e.target.closest('a.name[href*=\"/vocs/\"]');\r\n    if (anchor && currentAnchor === anchor) {\r\n      startHideTimeout();\r\n    }\r\n    // Also cancel show timeout if mouse leaves before tooltip appears\r\n    if (showTimeout) {\r\n      clearTimeout(showTimeout);\r\n      showTimeout = null;\r\n    }\r\n  }, { capture: true });\r\n}\r\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/vocabularyParser.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/main.js");
/******/ 	
/******/ })()
;